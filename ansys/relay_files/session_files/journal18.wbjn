# encoding: utf-8
# 2020 R1
SetScriptVersion(Version="20.1.164")
system1 = GetSystem(Name="SYS 5")
setup1 = system1.GetContainer(ComponentName="Setup")
setup1.Edit()
system2 = GetSystem(Name="FFF")
setup2 = system2.GetContainer(ComponentName="Setup")
fluentLauncherSettings1 = setup2.GetFluentLauncherSettings()
fluentLauncherSettings1.SetEntityProperties(Properties=Set(DisplayText="Fluent Launcher Settings", EnvPath={}, RunParallel=True))
setup2.Edit()
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Initialization"))')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "ToolBar*Workbench Tools*fl_setup")')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuSetupCell*Reload")(cx-gui-do cx-activate-item "Question*OK")')
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Initialization"))')
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Initialization"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Initialization"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Dynamic Mesh"))')
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Dynamic Mesh"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Dynamic Mesh"))')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Dynamic Mesh*Table1*Table1*Table2*Table3*Table1(Mesh Methods)*PushButton5(Settings)")')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Mesh Method Settings*PanelButtons*PushButton2(Cancel)")')
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Initialization"))')
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Initialization"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Initialization"))')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Solution Initialization*Table1*Frame8*PushButton1(Initialize)")')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "ToolBar*Workbench Tools*syncwb")')
system3 = GetSystem(Name="SC")
setup3 = system3.GetContainer(ComponentName="Setup")
AnalysisSettings1 = setup3.GetAnalysisSettings()
AnalysisSettings1.EndTime = "2E-07 [s]"
AnalysisSettings1.StepSize = "1E-08 [s]"
AnalysisSettings1.EndTime = "3E-07 [s]"
solutionComponent1 = system3.GetComponent(Name="Solution")
solutionComponent1.Update(AllDependencies=True)
solutionComponent1.Update(AllDependencies=True)
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Run Calculation"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Run Calculation"))')
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Run Calculation"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Run Calculation"))(cx-gui-do cx-set-integer-entry "Run Calculation*Table1*Table7(Time Advancement)*Table3(Parameters)*Table1*Table1*IntegerEntry1(Number of Time Steps)" 6)(cx-gui-do cx-activate-item "Run Calculation*Table1*Table7(Time Advancement)*Table3(Parameters)*Table1*Table1*IntegerEntry1(Number of Time Steps)")')
setup2.SendCommand(Command='(cx-gui-do cx-set-integer-entry "Run Calculation*Table1*Table7(Time Advancement)*Table3(Parameters)*Table1*Table1*IntegerEntry1(Number of Time Steps)" 7)(cx-gui-do cx-activate-item "Run Calculation*Table1*Table7(Time Advancement)*Table3(Parameters)*Table1*Table1*IntegerEntry1(Number of Time Steps)")')
setup2.SendCommand(Command='(cx-gui-do cx-set-integer-entry "Run Calculation*Table1*Table7(Time Advancement)*Table3(Parameters)*Table1*Table1*IntegerEntry1(Number of Time Steps)" 8)(cx-gui-do cx-activate-item "Run Calculation*Table1*Table7(Time Advancement)*Table3(Parameters)*Table1*Table1*IntegerEntry1(Number of Time Steps)")')
setup2.SendCommand(Command='(cx-gui-do cx-set-integer-entry "Run Calculation*Table1*Table7(Time Advancement)*Table3(Parameters)*Table1*Table1*IntegerEntry1(Number of Time Steps)" 9)(cx-gui-do cx-activate-item "Run Calculation*Table1*Table7(Time Advancement)*Table3(Parameters)*Table1*Table1*IntegerEntry1(Number of Time Steps)")')
setup2.SendCommand(Command='(cx-gui-do cx-set-integer-entry "Run Calculation*Table1*Table7(Time Advancement)*Table3(Parameters)*Table1*Table1*IntegerEntry1(Number of Time Steps)" 10)(cx-gui-do cx-activate-item "Run Calculation*Table1*Table7(Time Advancement)*Table3(Parameters)*Table1*Table1*IntegerEntry1(Number of Time Steps)")')
setup2.SendCommand(Command='(cx-gui-do cx-set-integer-entry "Run Calculation*Table1*Table7(Time Advancement)*Table3(Parameters)*Table1*Table1*IntegerEntry1(Number of Time Steps)" 11)(cx-gui-do cx-activate-item "Run Calculation*Table1*Table7(Time Advancement)*Table3(Parameters)*Table1*Table1*IntegerEntry1(Number of Time Steps)")')
setup2.SendCommand(Command='(cx-gui-do cx-set-integer-entry "Run Calculation*Table1*Table7(Time Advancement)*Table3(Parameters)*Table1*Table1*IntegerEntry1(Number of Time Steps)" 12)(cx-gui-do cx-activate-item "Run Calculation*Table1*Table7(Time Advancement)*Table3(Parameters)*Table1*Table1*IntegerEntry1(Number of Time Steps)")')
setup2.SendCommand(Command='(cx-gui-do cx-set-integer-entry "Run Calculation*Table1*Table7(Time Advancement)*Table3(Parameters)*Table1*Table1*IntegerEntry1(Number of Time Steps)" 13)(cx-gui-do cx-activate-item "Run Calculation*Table1*Table7(Time Advancement)*Table3(Parameters)*Table1*Table1*IntegerEntry1(Number of Time Steps)")')
setup2.SendCommand(Command='(cx-gui-do cx-set-integer-entry "Run Calculation*Table1*Table7(Time Advancement)*Table3(Parameters)*Table1*Table1*IntegerEntry1(Number of Time Steps)" 15)(cx-gui-do cx-activate-item "Run Calculation*Table1*Table7(Time Advancement)*Table3(Parameters)*Table1*Table1*IntegerEntry1(Number of Time Steps)")')
setup2.SendCommand(Command='(cx-gui-do cx-set-integer-entry "Run Calculation*Table1*Table7(Time Advancement)*Table3(Parameters)*Table1*Table1*IntegerEntry1(Number of Time Steps)" 16)(cx-gui-do cx-activate-item "Run Calculation*Table1*Table7(Time Advancement)*Table3(Parameters)*Table1*Table1*IntegerEntry1(Number of Time Steps)")')
setup2.SendCommand(Command='(cx-gui-do cx-set-integer-entry "Run Calculation*Table1*Table7(Time Advancement)*Table3(Parameters)*Table1*Table1*IntegerEntry1(Number of Time Steps)" 17)(cx-gui-do cx-activate-item "Run Calculation*Table1*Table7(Time Advancement)*Table3(Parameters)*Table1*Table1*IntegerEntry1(Number of Time Steps)")')
setup2.SendCommand(Command='(cx-gui-do cx-set-integer-entry "Run Calculation*Table1*Table7(Time Advancement)*Table3(Parameters)*Table1*Table1*IntegerEntry1(Number of Time Steps)" 18)(cx-gui-do cx-activate-item "Run Calculation*Table1*Table7(Time Advancement)*Table3(Parameters)*Table1*Table1*IntegerEntry1(Number of Time Steps)")')
setup2.SendCommand(Command='(cx-gui-do cx-set-integer-entry "Run Calculation*Table1*Table7(Time Advancement)*Table3(Parameters)*Table1*Table1*IntegerEntry1(Number of Time Steps)" 19)(cx-gui-do cx-activate-item "Run Calculation*Table1*Table7(Time Advancement)*Table3(Parameters)*Table1*Table1*IntegerEntry1(Number of Time Steps)")')
setup2.SendCommand(Command='(cx-gui-do cx-set-integer-entry "Run Calculation*Table1*Table7(Time Advancement)*Table3(Parameters)*Table1*Table1*IntegerEntry1(Number of Time Steps)" 20)(cx-gui-do cx-activate-item "Run Calculation*Table1*Table7(Time Advancement)*Table3(Parameters)*Table1*Table1*IntegerEntry1(Number of Time Steps)")')
setup2.SendCommand(Command='(cx-gui-do cx-set-integer-entry "Run Calculation*Table1*Table7(Time Advancement)*Table3(Parameters)*Table1*Table1*IntegerEntry1(Number of Time Steps)" 21)(cx-gui-do cx-activate-item "Run Calculation*Table1*Table7(Time Advancement)*Table3(Parameters)*Table1*Table1*IntegerEntry1(Number of Time Steps)")')
setup2.SendCommand(Command='(cx-gui-do cx-set-integer-entry "Run Calculation*Table1*Table7(Time Advancement)*Table3(Parameters)*Table1*Table1*IntegerEntry1(Number of Time Steps)" 20)(cx-gui-do cx-activate-item "Run Calculation*Table1*Table7(Time Advancement)*Table3(Parameters)*Table1*Table1*IntegerEntry1(Number of Time Steps)")')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Run Calculation*Table1*Table1*Table1*PushButton1(Check Case)")')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Case Check*PanelButtons*PushButton2(Cancel)")')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Run Calculation*Table1*Table1*Table3*PushButton2(Preview Mesh Motion)")')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Mesh Motion*PanelButtons*PushButton1(Apply)")')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Mesh Motion*PanelButtons*PushButton2(Close)")')
setup2.SendCommand(Command='(cx-gui-do cx-set-integer-entry "Run Calculation*Table1*Table7(Time Advancement)*Table3(Parameters)*Table1*Table1*IntegerEntry1(Number of Time Steps)" 30)(cx-gui-do cx-activate-item "Run Calculation*Table1*Table7(Time Advancement)*Table3(Parameters)*Table1*Table1*IntegerEntry1(Number of Time Steps)")')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Run Calculation*Table1*Table1*Table3*PushButton2(Preview Mesh Motion)")')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Mesh Motion*PanelButtons*PushButton1(Apply)")')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Mesh Motion*PanelButtons*PushButton2(Close)")')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "ToolBar*Workbench Tools*syncwb")')
solutionComponent1.Update(AllDependencies=True)
solutionComponent1.Clean()
ClearMessages()
solutionComponent1.Update(AllDependencies=True)
results1 = system2.GetContainer(ComponentName="Results")
results1.Edit()
results1.SendCommand(Command="""VIEW:View 1
  Light Angle = 50, 110
END

VIEW:View 2
  Light Angle = 50, 110
END

VIEW:View 3
  Light Angle = 50, 110
END

VIEW:View 4
  Light Angle = 50, 110
END

> update
>centerview 1""")
results1.SendCommand(Command=">centerview 1")
results1.SendCommand(Command=">centerview 1")
results1.SendCommand(Command="> autolegend plot=/DATA READER/CASE:Case EM Transient/PRIMITIVE2D:Face_nodes, view=VIEW:View 1")
results1.SendCommand(Command=">centerview 1")
results1.SendCommand(Command="> autolegend plot=/DATA READER/CASE:Case EM Transient/PRIMITIVE2D:Fluidic_interface, view=VIEW:View 1")
results1.SendCommand(Command=">centerview 1")
results1.SendCommand(Command="> autolegend plot=/VOLUME RENDERING:Volume Rendering 1, view=VIEW:View 1")
results1.SendCommand(Command="""VOLUME RENDERING:Volume Rendering 1
Apply Instancing Transform = On
Apply Texture = Off
Blend Texture = On
Colour = 0.75, 0.75, 0.75
Colour Map = Default Colour Map
Colour Mode = Use Plot Variable
Colour Scale = Linear
Colour Variable = Pressure
Colour Variable Boundary Values = Conservative
Culling Mode = No Culling
Domain List = /DOMAIN GROUP:All Domains
Draw Faces = On
Draw Lines = Off
Instancing Transform = /DEFAULT INSTANCE TRANSFORM:Default Transform
Lighting = Off
Line Colour = 0, 0, 0
Line Colour Mode = Default
Line Width = 1
Max = 0.0 [Pa]
Min = 0.0 [Pa]
Range = Global
Render Edge Angle = 0 [degree]
Specular Lighting = Off
Surface Drawing = Smooth Shading
Texture Angle = 0
Texture Direction = 0 , 1 , 0 
Texture File =  
Texture Material = Metal
Texture Position = 0 , 0 
Texture Scale = 1
Texture Type = Predefined
Tile Texture = Off
Transform Texture = Off
Transparency = 0.2
Transparency Colour Map = Transparency
Variable = Pressure
Variable Boundary Values = Conservative
Volume Rendering Max = 0.0
Volume Rendering Min = 0.0
Volume Rendering Range = Global
Volume Rendering Scale = Linear
Volume Resolution = 20
  OBJECT VIEW TRANSFORM:
  Apply Reflection = Off
  Apply Rotation = Off
  Apply Scale = Off
  Apply Translation = Off
  Principal Axis = Z
  Reflection Plane Option = XY Plane
  Rotation Angle = 0.0 [degree]
  Rotation Axis From = 0 [m], 0 [m], 0 [m]
  Rotation Axis To = 0 [m], 0 [m], 0 [m]
  Rotation Axis Type = Principal Axis
  Scale Vector = 1 , 1 , 1 
  Translation Vector = 0 [m], 0 [m], 0 [m]
  X = 0.0 [m]
  Y = 0.0 [m]
  Z = 0.0 [m]
  END
END""")
results1.SendCommand(Command="""# Sending visibility action from ViewUtilities
>show /VOLUME RENDERING:Volume Rendering 1, view=/VIEW:View 1""")
results1.SendCommand(Command=">centerview 1")
results1.SendCommand(Command="> autolegend plot=/VOLUME RENDERING:Volume Rendering 1, view=VIEW:View 1")
results1.SendCommand(Command="""VIEW:View 1
  Camera Mode = User Specified
  CAMERA:
    Option = Pivot Point and Quaternion
    Pivot Point = 0, 0, 1.45e-06
    Scale = 110000
    Pan = 0, 0
    Rotation Quaternion = 0.279848, -0.364705, -0.115917, 0.880476
    
  END

END

> update
> autolegend plot=/WIREFRAME:Wireframe, view=VIEW:View 1""")
results1.SendCommand(Command="""WIREFRAME:Wireframe
Apply Instancing Transform = On
Colour = 0, 0, 0
Domain List = /DOMAIN GROUP:All Domains
Edge Angle = 30 [degree]
Instancing Transform = /DEFAULT INSTANCE TRANSFORM:Default Transform
Line Colour Mode = Default
Line Width = 1
Show Surface Mesh = Off
  OBJECT VIEW TRANSFORM:
  Apply Reflection = Off
  Apply Rotation = Off
  Apply Scale = Off
  Apply Translation = Off
  Principal Axis = Z
  Reflection Plane Option = XY Plane
  Rotation Angle = 0.0 [degree]
  Rotation Axis From = 0 [m], 0 [m], 0 [m]
  Rotation Axis To = 0 [m], 0 [m], 0 [m]
  Rotation Axis Type = Principal Axis
  Scale Vector = 1 , 1 , 1 
  Translation Vector = 0 [m], 0 [m], 0 [m]
  X = 0.0 [m]
  Y = 0.0 [m]
  Z = 0.0 [m]
  END
END""")
results1.SendCommand(Command="""WIREFRAME:Wireframe
Apply Instancing Transform = On
Colour = 0, 0, 0
Domain List = /DOMAIN GROUP:All Domains
Edge Angle = 30 [degree]
Instancing Transform = /DEFAULT INSTANCE TRANSFORM:Default Transform
Line Colour Mode = Default
Line Width = 1
Show Surface Mesh = On
  OBJECT VIEW TRANSFORM:
  Apply Reflection = Off
  Apply Rotation = Off
  Apply Scale = Off
  Apply Translation = Off
  Principal Axis = Z
  Reflection Plane Option = XY Plane
  Rotation Angle = 0.0 [degree]
  Rotation Axis From = 0 [m], 0 [m], 0 [m]
  Rotation Axis To = 0 [m], 0 [m], 0 [m]
  Rotation Axis Type = Principal Axis
  Scale Vector = 1 , 1 , 1 
  Translation Vector = 0 [m], 0 [m], 0 [m]
  X = 0.0 [m]
  Y = 0.0 [m]
  Z = 0.0 [m]
  END
END""")
results1.SendCommand(Command="""WIREFRAME:Wireframe
Apply Instancing Transform = On
Colour = 0, 0, 0
Domain List = /DOMAIN GROUP:All Domains
Edge Angle = 30 [degree]
Instancing Transform = /DEFAULT INSTANCE TRANSFORM:Default Transform
Line Colour Mode = Default
Line Width = 1
Show Surface Mesh = On
  OBJECT VIEW TRANSFORM:
  Apply Reflection = Off
  Apply Rotation = Off
  Apply Scale = Off
  Apply Translation = Off
  Principal Axis = Z
  Reflection Plane Option = XY Plane
  Rotation Angle = 0.0 [degree]
  Rotation Axis From = 0 [m], 0 [m], 0 [m]
  Rotation Axis To = 0 [m], 0 [m], 0 [m]
  Rotation Axis Type = Principal Axis
  Scale Vector = 1 , 1 , 1 
  Translation Vector = 0 [m], 0 [m], 0 [m]
  X = 0.0 [m]
  Y = 0.0 [m]
  Z = 0.0 [m]
  END
END""")
results1.SendCommand(Command=">centerview 1")
results1.SendCommand(Command=">centerview 1")
results1.SendCommand(Command="""VIEW:View 1
  Camera Mode = User Specified
  CAMERA:
    Option = Pivot Point and Quaternion
    Pivot Point = 0, 0, 1.45e-06
    Scale = 97223.8
    Pan = 0, 0
    Rotation Quaternion = -0.0181262, -0.706936, -0.688174, 0.162259
    
  END

END

> update
>centerview 1""")
results1.SendCommand(Command="> autolegend plot=/DATA READER/CASE:Case FFF 1/BOUNDARY:inside_wall, view=VIEW:View 1")
results1.SendCommand(Command="""DATA READER:
      CASE:Case FFF 1
    BOUNDARY:inside_wall
Apply Instancing Transform = On
Apply Texture = Off
Colour = 0.2, 0.5, 1
Colour Map = Default Colour Map
Colour Mode = Constant
Colour Scale = Linear
Colour Variable = Pressure
Colour Variable Boundary Values = Conservative
Culling Mode = No Culling
Draw Faces = On
Draw Lines = On
Instancing Transform = /DEFAULT INSTANCE TRANSFORM:Default Transform
Lighting = On
Line Colour = 0, 0, 0
Line Colour Mode = Default
Line Width = 1
Max = 0.0
Min = 0.0
Range = Global
Render Edge Angle = 0 [degree]
Specular Lighting = On
Surface Drawing = Smooth Shading
Transparency = 0.0
      OBJECT VIEW TRANSFORM:
      Apply Reflection = Off
      Apply Rotation = Off
      Apply Scale = Off
      Apply Translation = Off
      Principal Axis = Z
      Reflection Plane Option = XY Plane
      Rotation Angle = 0.0 [degree]
      Rotation Axis From = 0 [m], 0 [m], 0 [m]
      Rotation Axis To = 0 [m], 0 [m], 0 [m]
      Rotation Axis Type = Principal Axis
      Scale Vector = 1 , 1 , 1 
      Translation Vector = 0 [m], 0 [m], 0 [m]
      X = 0.0 [m]
      Y = 0.0 [m]
      Z = 0.0 [m]
      END
    END
  END
END
# Sending visibility action from ViewUtilities
>show /DATA READER/CASE:Case FFF 1/BOUNDARY:inside_wall, view=/VIEW:View 1""")
results1.SendCommand(Command="""DATA READER:
      CASE:Case FFF 1
    BOUNDARY:inside_wall
Apply Instancing Transform = On
Apply Texture = Off
Colour = 0.2, 0.5, 1
Colour Map = Default Colour Map
Colour Mode = Constant
Colour Scale = Linear
Colour Variable = Pressure
Colour Variable Boundary Values = Conservative
Culling Mode = No Culling
Draw Faces = On
Draw Lines = On
Instancing Transform = /DEFAULT INSTANCE TRANSFORM:Default Transform
Lighting = On
Line Colour = 0, 0, 0
Line Colour Mode = Default
Line Width = 1
Max = 0.0 [Pa]
Min = 0.0 [Pa]
Range = Global
Render Edge Angle = 0 [degree]
Specular Lighting = On
Surface Drawing = Smooth Shading
Transparency = 0.0
      OBJECT VIEW TRANSFORM:
      Apply Reflection = Off
      Apply Rotation = Off
      Apply Scale = Off
      Apply Translation = Off
      Principal Axis = Z
      Reflection Plane Option = XY Plane
      Rotation Angle = 0.0 [degree]
      Rotation Axis From = 0 [m], 0 [m], 0 [m]
      Rotation Axis To = 0 [m], 0 [m], 0 [m]
      Rotation Axis Type = Principal Axis
      Scale Vector = 1 , 1 , 1 
      Translation Vector = 0 [m], 0 [m], 0 [m]
      X = 0.0 [m]
      Y = 0.0 [m]
      Z = 0.0 [m]
      END
    END
  END
END
# Sending visibility action from ViewUtilities
>show /DATA READER/CASE:Case FFF 1/BOUNDARY:inside_wall, view=/VIEW:View 1""")
results1.SendCommand(Command="> autolegend plot=/DATA READER/CASE:Case EM Transient/BOUNDARY:Default Boundary, view=VIEW:View 1")
solution1 = system2.GetContainer(ComponentName="Solution")
solution1.Edit()
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Dynamic Mesh"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Wall|inside_wall (wall, id=6)"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Wall|inside_wall (wall, id=6)"))(cx-gui-do cx-list-tree-right-click "NavigationPane*List_Tree1" )')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuTree-inside_wall (wall, id=6)*Display")')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "ToolBar*Pointer Tools*rotate")')
setup2.SendCommand(Command="(cx-use-window-id 1)(cx-set-camera-relative '(0.000187325 -0.00111959 9.78618e-05) '(0 0 0) '(1.04281 0.131527 0.454572) 0 0)(cx-use-window-id 1)(cx-set-camera-relative '(-0.000966527 -0.000384044 -6.15932e-05) '(0 0 0) '(0.331458 -0.818521 0.530478) 0 0)")
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Run Calculation*Table1*Table1*Table3*PushButton2(Preview Mesh Motion)")')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Mesh Motion*PanelButtons*PushButton2(Close)")')
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Report Definitions"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Report Definitions"))(cx-gui-do cx-list-tree-right-click "NavigationPane*List_Tree1" )(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list ))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Monitors|Report Plots"))')
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Monitors|Report Plots"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Monitors|Report Plots"))(cx-gui-do cx-activate-item "Report Plot Definitions*PanelButtons*PushButton1(Close)")')
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Monitors|Residual"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Report Definitions"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Report Definitions"))(cx-gui-do cx-list-tree-right-click "NavigationPane*List_Tree1" )')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*Volume ReportSubMenu*Volume-Average...")')
setup2.SendCommand(Command='(cx-gui-do cx-set-text-entry "Volume Report Definition*Table1*Table1*TextEntry1(Name)" "volume-avg-pressure")(cx-gui-do cx-activate-item "Volume Report Definition*Table1*Table1*TextEntry1(Name)")')
setup2.SendCommand(Command="(cx-gui-do cx-activate-item \"Volume Report Definition*PanelButtons*PushButton4(Compute)\")(cx-gui-do cx-activate-item \"Error*OK\")(cx-gui-do cx-set-list-selections \"Volume Report Definition*Table1*Table2*List5(Cell Zones)\" '( 0))(cx-gui-do cx-activate-item \"Volume Report Definition*Table1*Table2*List5(Cell Zones)\")(cx-gui-do cx-set-list-selections \"Volume Report Definition*Table1*Table2*List5(Cell Zones)\" '())(cx-gui-do cx-activate-item \"Volume Report Definition*Table1*Table2*List5(Cell Zones)\")(cx-gui-do cx-set-list-selections \"Volume Report Definition*Table1*Table2*List5(Cell Zones)\" '( 0))(cx-gui-do cx-activate-item \"Volume Report Definition*Table1*Table2*List5(Cell Zones)\")(cx-gui-do cx-activate-item \"Volume Report Definition*PanelButtons*PushButton1(OK)\")")
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Report Definitions|iters-per-timestep"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Report Definitions"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Report Definitions"))(cx-gui-do cx-list-tree-right-click "NavigationPane*List_Tree1" )(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Report Definitions|volume-avg-pressure"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Report Definitions|volume-avg-pressure"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Controls"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Report Definitions"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Report Definitions"))(cx-gui-do cx-list-tree-right-click "NavigationPane*List_Tree1" )')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*Surface ReportSubMenu*Facet Average...")')
setup2.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Surface Report Definition*Table1*Table2*Table6*List1(Surfaces)\" '( 0))(cx-gui-do cx-activate-item \"Surface Report Definition*Table1*Table2*Table6*List1(Surfaces)\")(cx-gui-do cx-set-text-entry \"Surface Report Definition*Table1*Table1*TextEntry1(Name)\" \"avg-pressure-inside-wall\")(cx-gui-do cx-activate-item \"Surface Report Definition*Table1*Table1*TextEntry1(Name)\")")
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Surface Report Definition*PanelButtons*PushButton1(OK)")')
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Report Definitions"))(cx-gui-do cx-list-tree-right-click "NavigationPane*List_Tree1" )')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*Surface ReportSubMenu*Facet Maximum...")')
setup2.SendCommand(Command='(cx-gui-do cx-set-text-entry "Surface Report Definition*Table1*Table1*TextEntry1(Name)" "max-pressure-inside-wall")(cx-gui-do cx-activate-item "Surface Report Definition*Table1*Table1*TextEntry1(Name)")')
setup2.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Surface Report Definition*Table1*Table2*Table6*List1(Surfaces)\" '( 0))(cx-gui-do cx-activate-item \"Surface Report Definition*Table1*Table2*Table6*List1(Surfaces)\")(cx-gui-do cx-activate-item \"Surface Report Definition*PanelButtons*PushButton1(OK)\")")
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Report Definitions"))(cx-gui-do cx-list-tree-right-click "NavigationPane*List_Tree1" )')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*Surface ReportSubMenu*Facet Minimum...")')
setup2.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Surface Report Definition*Table1*Table2*Table6*List1(Surfaces)\" '( 0))(cx-gui-do cx-activate-item \"Surface Report Definition*Table1*Table2*Table6*List1(Surfaces)\")(cx-gui-do cx-set-text-entry \"Surface Report Definition*Table1*Table1*TextEntry1(Name)\" \"min-pressure-inside-wall\")(cx-gui-do cx-activate-item \"Surface Report Definition*Table1*Table1*TextEntry1(Name)\")")
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Surface Report Definition*PanelButtons*PushButton1(OK)")')
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Report Definitions|volume-avg-pressure"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Report Definitions"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Report Definitions"))(cx-gui-do cx-list-tree-right-click "NavigationPane*List_Tree1" )')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*Volume ReportSubMenu*Volume...")')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Volume Report Definition*PanelButtons*PushButton2(Cancel)")')
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Report Definitions|volume-avg-pressure"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Report Definitions|volume-avg-pressure"))(cx-gui-do cx-list-tree-right-click "NavigationPane*List_Tree1" )')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuTree-volume-avg-pressure*Copy...")')
setup2.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Volume Report Definition*Table1*Table2*DropDownList1(Report Type)\" '( 0))")
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Volume Report Definition*Table1*Table2*DropDownList1(Report Type)")')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Volume Report Definition*PanelButtons*PushButton2(Cancel)")')
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Monitors|Residual"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Monitors|Residual"))')
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Monitors|Residual"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Monitors|Residual"))(cx-gui-do cx-activate-item "Residual Monitors*PanelButtons*PushButton2(Cancel)")')
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Monitors|Report Files"))')
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Monitors|Report Files"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Monitors|Report Files"))(cx-gui-do cx-activate-item "Report File Definitions*PanelButtons*PushButton1(Close)")')
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Monitors|Report Plots"))(cx-gui-do cx-list-tree-right-click "NavigationPane*List_Tree1" )(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Monitors|Report Plots"))')
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Monitors|Report Plots"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Monitors|Report Plots"))(cx-gui-do cx-activate-item "Report Plot Definitions*PanelButtons*PushButton1(Close)")')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "ToolBar*Pointer Tools*rotate")')
setup2.SendCommand(Command="(cx-use-window-id 1)(cx-set-camera-relative '(0.000259931 -0.000176984 -0.000308462) '(0 0 0) '(-0.0887309 0.106106 0.120787) 0 0)(cx-use-window-id 1)(cx-set-camera-relative '(-7.75908e-05 -2.15496e-05 -0.00024932) '(0 0 0) '(-0.0143676 -0.214916 0.0246181) 0 0)(cx-gui-do cx-set-list-tree-selections \"NavigationPane*List_Tree1\" (list \"Solution|Monitors|Report Files\"))")
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Monitors|Report Files"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Monitors|Report Files"))')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Report File Definitions*Table1*ButtonBox3*PushButton1(New)")')
setup2.SendCommand(Command="(cx-gui-do cx-set-list-selections \"New Report File*Table1*List2(Available Report Definitions)\" '( 0))(cx-gui-do cx-activate-item \"New Report File*Table1*List2(Available Report Definitions)\")(cx-gui-do cx-set-list-selections \"New Report File*Table1*List2(Available Report Definitions)\" '( 0 1 2 3 4 5))(cx-gui-do cx-activate-item \"New Report File*Table1*List2(Available Report Definitions)\")")
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "New Report File*Table1*Table4*PushButton1( Add>>)")')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "New Report File*PanelButtons*PushButton1(OK)")')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Report File Definitions*PanelButtons*PushButton1(Close)")')
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Monitors|Report Plots"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Monitors|Residual"))')
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Monitors|Residual"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Monitors|Residual"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Monitors|Residual"))(cx-gui-do cx-activate-item "Residual Monitors*PanelButtons*PushButton1(OK)")')
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Report Definitions"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Report Definitions"))(cx-gui-do cx-list-tree-right-click "NavigationPane*List_Tree1" )')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*Force ReportSubMenu*Force...")')
setup2.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Force Report Definition*Table1*Table2*List2(Wall Zones)\" '( 0))(cx-gui-do cx-activate-item \"Force Report Definition*Table1*Table2*List2(Wall Zones)\")(cx-gui-do cx-set-toggle-button2 \"Force Report Definition*Table1*Table2*CheckButton3(Highlight Zones)\" #t)(cx-gui-do cx-activate-item \"Force Report Definition*Table1*Table2*CheckButton3(Highlight Zones)\")(cx-gui-do cx-set-toggle-button2 \"Force Report Definition*Table1*Table2*CheckButton3(Highlight Zones)\" #f)(cx-gui-do cx-activate-item \"Force Report Definition*Table1*Table2*CheckButton3(Highlight Zones)\")(cx-gui-do cx-set-toggle-button2 \"Force Report Definition*Table1*Table2*CheckButton3(Highlight Zones)\" #t)(cx-gui-do cx-activate-item \"Force Report Definition*Table1*Table2*CheckButton3(Highlight Zones)\")(cx-gui-do cx-set-text-entry \"Force Report Definition*Table1*TextEntry3(Name)\" \"force-inside-wall\")(cx-gui-do cx-activate-item \"Force Report Definition*Table1*TextEntry3(Name)\")")
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Force Report Definition*PanelButtons*PushButton1(OK)")')
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Report Definitions"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Report Definitions"))(cx-gui-do cx-list-tree-right-click "NavigationPane*List_Tree1" )(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Report Definitions|force-inside-wall"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Report Definitions|force-inside-wall"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Report Definitions|force-inside-wall"))(cx-gui-do cx-list-tree-right-click "NavigationPane*List_Tree1" )(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Wall|outside_wall (wall, id=5)"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Wall|outside_wall (wall, id=5)"))')
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Wall|outside_wall (wall, id=5)"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Wall|outside_wall (wall, id=5)"))(cx-gui-do cx-activate-item "Wall*PanelButtons*PushButton2(Cancel)")')
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Wall|outside_wall (wall, id=5)"))(cx-gui-do cx-list-tree-right-click "NavigationPane*List_Tree1" )(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list ))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Cell Zone Conditions|Fluid|relay_enclosure (fluid, id=2)"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Cell Zone Conditions|Fluid|relay_enclosure (fluid, id=2)"))')
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Cell Zone Conditions|Fluid|relay_enclosure (fluid, id=2)"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Cell Zone Conditions|Fluid|relay_enclosure (fluid, id=2)"))')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Fluid*PanelButtons*PushButton2(Cancel)")')
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Materials|Fluid|air"))')
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Materials|Fluid|air"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Materials|Fluid|air"))(cx-gui-do cx-activate-item "Create/Edit Materials*PanelButtons*PushButton1(Close)")')
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|General"))')
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|General"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|General"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Materials|Solid|aluminum"))')
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Materials|Solid|aluminum"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Materials|Solid|aluminum"))(cx-gui-do cx-activate-item "Create/Edit Materials*PanelButtons*PushButton1(Close)")')
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Dynamic Mesh"))')
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Dynamic Mesh"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup2.SendCommand(Command="(cx-gui-do cx-set-list-tree-selections \"NavigationPane*List_Tree1\" (list \"Setup|Dynamic Mesh\"))(cx-gui-do cx-set-list-selections \"Dynamic Mesh*Table1*Table1*Table2*List4(Dynamic Mesh Zones)\" '( 0))(cx-gui-do cx-activate-item \"Dynamic Mesh*Table1*Table1*Table2*List4(Dynamic Mesh Zones)\")")
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Dynamic Mesh*Table1*Table1*Table2*Table5*PushButton1(Create/Edit)")')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Dynamic Mesh Zones*PanelButtons*PushButton2(Cancel)")')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Dynamic Mesh*Table1*Table1*Table2*Table3*Table1(Mesh Methods)*PushButton5(Settings)")')
setup2.SendCommand(Command='(cx-gui-do cx-set-integer-entry "Mesh Method Settings*Frame1*Frame3(Remeshing)*Table1*Table1*Table2(Sizing Options)*IntegerEntry2(Resolution)" 8)(cx-gui-do cx-activate-item "Mesh Method Settings*Frame1*Frame3(Remeshing)*Table1*Table1*Table2(Sizing Options)*IntegerEntry2(Resolution)")')
setup2.SendCommand(Command='(cx-gui-do cx-set-integer-entry "Mesh Method Settings*Frame1*Frame3(Remeshing)*Table1*Table1*Table2(Sizing Options)*IntegerEntry2(Resolution)" 7)(cx-gui-do cx-activate-item "Mesh Method Settings*Frame1*Frame3(Remeshing)*Table1*Table1*Table2(Sizing Options)*IntegerEntry2(Resolution)")')
setup2.SendCommand(Command='(cx-gui-do cx-set-integer-entry "Mesh Method Settings*Frame1*Frame3(Remeshing)*Table1*Table1*Table2(Sizing Options)*IntegerEntry2(Resolution)" 6)(cx-gui-do cx-activate-item "Mesh Method Settings*Frame1*Frame3(Remeshing)*Table1*Table1*Table2(Sizing Options)*IntegerEntry2(Resolution)")')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Mesh Method Settings*PanelButtons*PushButton1(OK)")')
setup2.SendCommand(Command='(cx-gui-do cx-set-toggle-button2 "Dynamic Mesh*Table1*Table1*Table2*Table3*Table2(Options)*CheckButton5(Contact Detection)" #t)(cx-gui-do cx-activate-item "Dynamic Mesh*Table1*Table1*Table2*Table3*Table2(Options)*CheckButton5(Contact Detection)")')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Dynamic Mesh*Table1*Table1*Table2*Table3*Table2(Options)*PushButton7(Settings)")')
setup2.SendCommand(Command="(cx-gui-do cx-set-real-entry-list \"Options*Frame1*Frame4(Contact Detection)*Table1*Table1*Table2*Table1*RealEntry1(Proximity Threshold)\" '( 1e-09))(cx-gui-do cx-set-toggle-button2 \"Options*Frame1*Frame4(Contact Detection)*Table1*Table3(Contact Region)*Table1*CheckButton2(Flow Control)\" #t)(cx-gui-do cx-activate-item \"Options*Frame1*Frame4(Contact Detection)*Table1*Table3(Contact Region)*Table1*CheckButton2(Flow Control)\")(cx-gui-do cx-set-toggle-button2 \"Options*Frame1*Frame4(Contact Detection)*Table1*Table3(Contact Region)*Table1*CheckButton2(Flow Control)\" #f)(cx-gui-do cx-activate-item \"Options*Frame1*Frame4(Contact Detection)*Table1*Table3(Contact Region)*Table1*CheckButton2(Flow Control)\")(cx-gui-do cx-set-toggle-button2 \"Options*Frame1*Frame4(Contact Detection)*Table1*Table3(Contact Region)*Table1*CheckButton2(Flow Control)\" #t)(cx-gui-do cx-activate-item \"Options*Frame1*Frame4(Contact Detection)*Table1*Table3(Contact Region)*Table1*CheckButton2(Flow Control)\")")
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Options*Frame1*Frame4(Contact Detection)*Table1*Table3(Contact Region)*Table1*Table1*PushButton1(Settings)")')
setup2.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Flow Control Settings*Frame3*Table1(Contact Zone)*List1(Cell Zones)\" '( 0))(cx-gui-do cx-activate-item \"Flow Control Settings*Frame3*Table1(Contact Zone)*List1(Cell Zones)\")")
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Flow Control Settings*Frame3*Table1(Contact Zone)*Table2*Table2*PushButton1(Create Zone)")')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Flow Control Settings*PanelButtons*PushButton1(OK)")')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Options*PanelButtons*PushButton1(OK)")')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Dynamic Mesh*Table1*Table1*Table2*Table3*Table2(Options)*PushButton7(Settings)")')
setup2.SendCommand(Command='(cx-gui-do cx-set-integer-entry "Options*Frame1*Frame3(Implicit Update)*Table1*IntegerEntry1(Update Interval)" 400)(cx-gui-do cx-activate-item "Options*Frame1*Frame3(Implicit Update)*Table1*IntegerEntry1(Update Interval)")')
setup2.SendCommand(Command='(cx-gui-do cx-set-integer-entry "Options*Frame1*Frame3(Implicit Update)*Table1*IntegerEntry1(Update Interval)" 399)(cx-gui-do cx-activate-item "Options*Frame1*Frame3(Implicit Update)*Table1*IntegerEntry1(Update Interval)")')
setup2.SendCommand(Command='(cx-gui-do cx-set-integer-entry "Options*Frame1*Frame3(Implicit Update)*Table1*IntegerEntry1(Update Interval)" 398)(cx-gui-do cx-activate-item "Options*Frame1*Frame3(Implicit Update)*Table1*IntegerEntry1(Update Interval)")')
setup2.SendCommand(Command='(cx-gui-do cx-set-integer-entry "Options*Frame1*Frame3(Implicit Update)*Table1*IntegerEntry1(Update Interval)" 397)(cx-gui-do cx-activate-item "Options*Frame1*Frame3(Implicit Update)*Table1*IntegerEntry1(Update Interval)")')
setup2.SendCommand(Command='(cx-gui-do cx-set-integer-entry "Options*Frame1*Frame3(Implicit Update)*Table1*IntegerEntry1(Update Interval)" 100)(cx-gui-do cx-activate-item "Options*Frame1*Frame3(Implicit Update)*Table1*IntegerEntry1(Update Interval)")')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Options*Frame1*Frame3(Implicit Update)*Table1*IntegerEntry1(Update Interval)")')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Options*PanelButtons*PushButton1(OK)")')
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Initialization"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Initialization"))')
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Initialization"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Initialization"))')
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Run Calculation"))')
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Run Calculation"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Run Calculation"))(cx-gui-do cx-set-integer-entry "Run Calculation*Table1*Table7(Time Advancement)*Table3(Parameters)*Table5*Table1*Table1*IntegerEntry1(Max Iterations/Time Step)" 10)(cx-gui-do cx-activate-item "Run Calculation*Table1*Table7(Time Advancement)*Table3(Parameters)*Table5*Table1*Table1*IntegerEntry1(Max Iterations/Time Step)")')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "ToolBar*Workbench Tools*fl_setup")')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuSetupCell*Reload")(cx-gui-do cx-activate-item "Question*OK")')
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Dynamic Mesh"))')
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Dynamic Mesh"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Dynamic Mesh"))')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Dynamic Mesh*Table1*Table1*Table2*Table3*Table1(Mesh Methods)*PushButton5(Settings)")')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Mesh Method Settings*PanelButtons*PushButton1(OK)")')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "ToolBar*Workbench Tools*fl_setup")')
setup2.SendCommand(Command="(cx-gui-do cx-activate-item \"MenuBar*PopupMenuSetupCell*Import Settings\")(cx-gui-do cx-set-file-dialog-entries \"Select File\" '( \"settings\") \"Setting Files (*.set)\")(cx-gui-do cx-activate-item \"Question*OK\")")
setup2.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Dynamic Mesh*Table1*Table1*Table2*List4(Dynamic Mesh Zones)\" '( 1))(cx-gui-do cx-activate-item \"Dynamic Mesh*Table1*Table1*Table2*List4(Dynamic Mesh Zones)\")(cx-gui-do cx-set-list-selections \"Dynamic Mesh*Table1*Table1*Table2*List4(Dynamic Mesh Zones)\" '( 0))(cx-gui-do cx-activate-item \"Dynamic Mesh*Table1*Table1*Table2*List4(Dynamic Mesh Zones)\")(cx-gui-do cx-set-toggle-button2 \"Dynamic Mesh*Table1*Table1*Table2*Table3*Table2(Options)*CheckButton5(Contact Detection)\" #t)(cx-gui-do cx-activate-item \"Dynamic Mesh*Table1*Table1*Table2*Table3*Table2(Options)*CheckButton5(Contact Detection)\")")
setup2.SendCommand(Command='(cx-gui-do cx-set-toggle-button2 "Dynamic Mesh*Table1*Table1*CheckButton1(Dynamic Mesh)" #f)(cx-gui-do cx-activate-item "Dynamic Mesh*Table1*Table1*CheckButton1(Dynamic Mesh)")')
setup2.SendCommand(Command='(cx-gui-do cx-set-toggle-button2 "Dynamic Mesh*Table1*Table1*CheckButton1(Dynamic Mesh)" #t)(cx-gui-do cx-activate-item "Dynamic Mesh*Table1*Table1*CheckButton1(Dynamic Mesh)")')
setup2.SendCommand(Command='(cx-gui-do cx-set-toggle-button2 "Dynamic Mesh*Table1*Table1*Table2*Table3*Table2(Options)*CheckButton4(Implicit Update)" #f)(cx-gui-do cx-activate-item "Dynamic Mesh*Table1*Table1*Table2*Table3*Table2(Options)*CheckButton4(Implicit Update)")')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Dynamic Mesh*Table1*Table1*Table2*Table3*Table2(Options)*PushButton7(Settings)")')
setup2.SendCommand(Command="(cx-gui-do cx-set-real-entry-list \"Options*Frame1*Frame4(Contact Detection)*Table1*Table1*Table2*Table1*RealEntry1(Proximity Threshold)\" '( 1e-09))(cx-gui-do cx-activate-item \"Options*PanelButtons*PushButton1(OK)\")")
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Dynamic Mesh*Table1*Table1*Table2*Table7*PushButton2(Preview Mesh Motion)")')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Mesh Motion*PanelButtons*PushButton1(Apply)")')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Mesh Motion*PanelButtons*PushButton1(Apply)")')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Mesh Motion*PanelButtons*PushButton1(Apply)")')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Mesh Motion*PanelButtons*PushButton2(Close)")')
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Materials|Fluid"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Materials|Fluid"))(cx-gui-do cx-list-tree-right-click "NavigationPane*List_Tree1" )')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuTree-Fluid*New...")')
setup2.SendCommand(Command="(cx-gui-do cx-set-text-entry \"Create/Edit Materials*Table1*Frame1*Table1*TextEntry1(Name)\" \"castor-oil\")(cx-gui-do cx-set-real-entry-list \"Create/Edit Materials*RealEntry10\" '( 957.9))(cx-gui-do cx-set-real-entry-list \"Create/Edit Materials*RealEntry16\" '( 0.585))")
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Create/Edit Materials*PanelButtons*PushButton3(Change/Create)")(cx-gui-do cx-activate-item "Question*OK")')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Create/Edit Materials*PanelButtons*PushButton1(Close)")')
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Materials|Fluid|air"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Materials|Fluid|castor-oil"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Materials|Fluid|castor-oil"))')
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Materials|Fluid|castor-oil"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Materials|Fluid|castor-oil"))')
setup2.SendCommand(Command="(cx-gui-do cx-activate-item \"Create/Edit Materials*Table1*Frame1*Frame2*ButtonBox2*PushButton2(User-Defined Database)\")(cx-gui-do cx-activate-item \"Open Database*PushButton2(Browse)\")(cx-gui-do cx-set-file-dialog-entries \"Select File\" '( \"materials\") \"Database Files (*.scm)\")(cx-gui-do cx-activate-item \"Open Database*PanelButtons*PushButton1(OK)\")(cx-gui-do cx-activate-item \"Question*OK\")(cx-gui-do cx-activate-item \"User-Defined Database Materials*PanelButtons*PushButton1(Close)\")")
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Create/Edit Materials*Table1*Frame1*Frame2*ButtonBox2*PushButton2(User-Defined Database)")(cx-gui-do cx-activate-item "Open Database*PanelButtons*PushButton2(Cancel)")')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Create/Edit Materials*PanelButtons*PushButton3(Change/Create)")')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Create/Edit Materials*Table1*Frame1*Frame2*ButtonBox2*PushButton2(User-Defined Database)")(cx-gui-do cx-activate-item "Open Database*PanelButtons*PushButton2(Cancel)")')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Create/Edit Materials*PanelButtons*PushButton1(Close)")')
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Report Definitions"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Report Definitions"))(cx-gui-do cx-list-tree-right-click "NavigationPane*List_Tree1" )')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*Surface ReportSubMenu*Facet Average...")')
setup2.SendCommand(Command='(cx-gui-do cx-set-text-entry "Surface Report Definition*Table1*Table1*TextEntry1(Name)" "facet-avg-pressure")(cx-gui-do cx-activate-item "Surface Report Definition*Table1*Table1*TextEntry1(Name)")')
setup2.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Surface Report Definition*Table1*Table2*Table6*List1(Surfaces)\" '( 0))(cx-gui-do cx-activate-item \"Surface Report Definition*Table1*Table2*Table6*List1(Surfaces)\")(cx-gui-do cx-set-text-entry \"Surface Report Definition*Table1*Table1*TextEntry1(Name)\" \"facet-avg-pressure-inside-wall\")(cx-gui-do cx-activate-item \"Surface Report Definition*Table1*Table1*TextEntry1(Name)\")")
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Surface Report Definition*PanelButtons*PushButton1(OK)")')
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Report Definitions|facet-avg-pressure-inside-wall"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Report Definitions|facet-avg-pressure-inside-wall"))(cx-gui-do cx-list-tree-right-click "NavigationPane*List_Tree1" )')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuTree-facet-avg-pressure-inside-wall*Copy...")')
setup2.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Surface Report Definition*Table1*Table2*DropDownList1(Report Type)\" '( 12))")
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Surface Report Definition*Table1*Table2*DropDownList1(Report Type)")')
setup2.SendCommand(Command='(cx-gui-do cx-set-text-entry "Surface Report Definition*Table1*Table1*TextEntry1(Name)" "facet-min-pressure-inside-wall")(cx-gui-do cx-activate-item "Surface Report Definition*Table1*Table1*TextEntry1(Name)")')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Surface Report Definition*PanelButtons*PushButton1(OK)")')
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Report Definitions|facet-min-pressure-inside-wall"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Report Definitions|facet-min-pressure-inside-wall"))(cx-gui-do cx-list-tree-right-click "NavigationPane*List_Tree1" )')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuTree-facet-min-pressure-inside-wall*Copy...")')
setup2.SendCommand(Command='(cx-gui-do cx-set-text-entry "Surface Report Definition*Table1*Table1*TextEntry1(Name)" "facet-max-pressure-inside-wall")(cx-gui-do cx-activate-item "Surface Report Definition*Table1*Table1*TextEntry1(Name)")')
setup2.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Surface Report Definition*Table1*Table2*DropDownList1(Report Type)\" '( 13))")
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Surface Report Definition*Table1*Table2*DropDownList1(Report Type)")')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Surface Report Definition*PanelButtons*PushButton1(OK)")')
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Report Definitions"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Report Definitions"))(cx-gui-do cx-list-tree-right-click "NavigationPane*List_Tree1" )(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Mesh Interfaces"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Cell Zone Conditions|Fluid"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Cell Zone Conditions|Fluid"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Cell Zone Conditions|Fluid|relay_enclosure (fluid, id=2)"))')
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Cell Zone Conditions|Fluid|relay_enclosure (fluid, id=2)"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Cell Zone Conditions|Fluid|relay_enclosure (fluid, id=2)"))')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Fluid*PanelButtons*PushButton2(Cancel)")')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Dynamic Mesh*Table1*Table1*Table2*Table3*Table1(Mesh Methods)*PushButton5(Settings)")')
setup2.SendCommand(Command="(cx-gui-do cx-set-real-entry-list \"Mesh Method Settings*Frame1*Frame3(Remeshing)*Table1*Table3(Parameters)*RealEntry1(Minimum Length Scale)\" '( 0))(cx-gui-do cx-activate-item \"Mesh Method Settings*Frame1*Frame3(Remeshing)*Table1*Table3(Parameters)*RealEntry1(Minimum Length Scale)\")")
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Mesh Method Settings*PanelButtons*PushButton1(OK)")')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Dynamic Mesh*Table1*Table1*Table2*Table3*Table2(Options)*PushButton7(Settings)")')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Options*PanelButtons*PushButton2(Cancel)")')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Dynamic Mesh*Table1*Table1*Table2*Table3*Table1(Mesh Methods)*PushButton5(Settings)")')
setup2.SendCommand(Command='(cx-gui-do cx-set-toggle-button2 "Mesh Method Settings*Frame1*Frame3(Remeshing)*Table1*Table1*ToggleBox1(Remeshing Methods)*CheckButton2(Local Face)" #f)(cx-gui-do cx-activate-item "Mesh Method Settings*Frame1*Frame3(Remeshing)*Table1*Table1*ToggleBox1(Remeshing Methods)*CheckButton2(Local Face)")(cx-gui-do cx-set-toggle-button2 "Mesh Method Settings*Frame1*Frame3(Remeshing)*Table1*Table1*ToggleBox1(Remeshing Methods)*CheckButton3(Region Face)" #f)(cx-gui-do cx-activate-item "Mesh Method Settings*Frame1*Frame3(Remeshing)*Table1*Table1*ToggleBox1(Remeshing Methods)*CheckButton3(Region Face)")(cx-gui-do cx-activate-item "Mesh Method Settings*PanelButtons*PushButton1(OK)")')
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Report Definitions|facet-max-pressure-inside-wall"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Report Definitions|facet-max-pressure-inside-wall""Solution|Report Definitions|facet-min-pressure-inside-wall""Solution|Report Definitions|facet-avg-pressure-inside-wall"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Report Definitions|facet-max-pressure-inside-wall""Solution|Report Definitions|facet-min-pressure-inside-wall""Solution|Report Definitions|facet-avg-pressure-inside-wall"))(cx-gui-do cx-list-tree-right-click "NavigationPane*List_Tree1" )(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Report Definitions"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Report Definitions"))(cx-gui-do cx-list-tree-right-click "NavigationPane*List_Tree1" )')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*Volume ReportSubMenu*Volume...")')
setup2.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Volume Report Definition*Table1*Table2*List5(Cell Zones)\" '( 0))(cx-gui-do cx-activate-item \"Volume Report Definition*Table1*Table2*List5(Cell Zones)\")(cx-gui-do cx-set-list-selections \"Volume Report Definition*Table1*Table2*List5(Cell Zones)\" '())(cx-gui-do cx-activate-item \"Volume Report Definition*Table1*Table2*List5(Cell Zones)\")(cx-gui-do cx-activate-item \"Volume Report Definition*PanelButtons*PushButton2(Cancel)\")")
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Report Definitions"))(cx-gui-do cx-list-tree-right-click "NavigationPane*List_Tree1" )')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*Volume ReportSubMenu*Volume-Average...")')
setup2.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Volume Report Definition*Table1*Table2*List5(Cell Zones)\" '( 0))(cx-gui-do cx-activate-item \"Volume Report Definition*Table1*Table2*List5(Cell Zones)\")(cx-gui-do cx-set-text-entry \"Volume Report Definition*Table1*Table1*TextEntry1(Name)\" \"volume-avg-pressure-relay\")(cx-gui-do cx-activate-item \"Volume Report Definition*Table1*Table1*TextEntry1(Name)\")")
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Volume Report Definition*PanelButtons*PushButton1(OK)")')
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Report Definitions"))(cx-gui-do cx-list-tree-right-click "NavigationPane*List_Tree1" )(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Results"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Results|Surfaces"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Results|Surfaces"))(cx-gui-do cx-list-tree-right-click "NavigationPane*List_Tree1" )(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Results|Plots"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Results|Animations|Playback"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Results|Animations|Playback"))')
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Results|Animations|Playback"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Results|Animations|Playback"))')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Playback*PanelButtons*PushButton4(Read)")')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Playback*PanelButtons*PushButton2(Close)")')
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Calculation Activities"))(cx-gui-do cx-list-tree-right-click "NavigationPane*List_Tree1" )(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Calculation Activities"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Calculation Activities|Execute Commands"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Calculation Activities|Cell Register Operations"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Calculation Activities"))')
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Calculation Activities"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Calculation Activities"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Calculation Activities"))(cx-gui-do cx-list-tree-right-click "NavigationPane*List_Tree1" )(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Calculation Activities"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Cell Registers"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Cell Registers"))')
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Cell Registers"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Cell Registers"))(cx-gui-do cx-activate-item "Manage Cell Registers*PanelButtons*PushButton1(Close)")')
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Methods"))')
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Methods"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Methods"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Controls"))')
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Controls"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Controls"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Report Definitions"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Report Definitions"))(cx-gui-do cx-list-tree-right-click "NavigationPane*List_Tree1" )(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Report Definitions"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Initialization"))')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "ToolBar*Workbench Tools*fl_setup")')
setup2.SendCommand(Command="(cx-gui-do cx-activate-item \"MenuBar*PopupMenuSetupCell*Export Settings\")(cx-gui-do cx-set-file-dialog-entries \"Select File\" '( \"settings\") \"Setting Files (*.set)\")(cx-gui-do cx-activate-item \"Question*OK\")")
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Dynamic Mesh"))')
setup2.SendCommand(Command="(cx-gui-do cx-activate-item \"MenuBar*ExportSubMenu*Boundary Mesh...\")(cx-gui-do cx-set-file-dialog-entries \"Select File\" '( \"FFF-1.2-Setup-Output.msh\") \"Boundary Mesh Files (*.msh)\")")
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Run Calculation"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Run Calculation"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Dynamic Mesh"))')
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Dynamic Mesh"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Dynamic Mesh"))')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Dynamic Mesh*Table1*Table1*Table2*Table3*Table2(Options)*PushButton7(Settings)")')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Options*PanelButtons*PushButton1(OK)")')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Dynamic Mesh*Table1*Table1*Table2*Table3*Table2(Options)*PushButton7(Settings)")')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Dynamic Mesh*Table1*Table1*Table2*Table3*Table1(Mesh Methods)*PushButton5(Settings)")')
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Initialization"))')
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Initialization"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Initialization"))')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Solution Initialization*Table1*Frame8*PushButton1(Initialize)")')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "ToolBar*Workbench Tools*fl_setup")')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Mesh Method Settings*PanelButtons*PushButton2(Cancel)")')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Options*PanelButtons*PushButton2(Cancel)")')
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Initialization"))')
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Initialization"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Initialization"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Run Calculation"))')
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Run Calculation"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Run Calculation"))(cx-gui-do cx-set-integer-entry "Run Calculation*Table1*Table7(Time Advancement)*Table3(Parameters)*Table5*Table1*Table1*IntegerEntry1(Max Iterations/Time Step)" 10)(cx-gui-do cx-activate-item "Run Calculation*Table1*Table7(Time Advancement)*Table3(Parameters)*Table5*Table1*Table1*IntegerEntry1(Max Iterations/Time Step)")')
setup2.SendCommand(Command="(cx-gui-do cx-set-list-tree-selections \"NavigationPane*List_Tree1\" (list ))(cx-gui-do cx-set-expression-entry \"Run Calculation*Table1*Table7(Time Advancement)*Table3(Parameters)*Table1*Table3*ExpressionEntry1(Time Step Size)\" '(\"1e-9\" . 0))(cx-gui-do cx-activate-item \"Run Calculation*Table1*Table7(Time Advancement)*Table3(Parameters)*Table1*Table3*ExpressionEntry1(Time Step Size)\")")
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "ToolBar*Workbench Tools*syncwb")')
setup2.SendCommand(Command='(cx-gui-do cx-set-toggle-button2 "Run Calculation*Table1*Table7(Time Advancement)*Table4(Options)*CheckButton2(Report Simulation Status)" #t)(cx-gui-do cx-activate-item "Run Calculation*Table1*Table7(Time Advancement)*Table4(Options)*CheckButton2(Report Simulation Status)")(cx-gui-do cx-activate-item "Simulation Status *PanelButtons*PushButton1(Close)")')
setup2.SendCommand(Command="(cx-gui-do cx-set-toggle-button2 \"Run Calculation*Table1*Table7(Time Advancement)*Table4(Options)*CheckButton2(Report Simulation Status)\" #t)(cx-gui-do cx-activate-item \"Run Calculation*Table1*Table7(Time Advancement)*Table4(Options)*CheckButton2(Report Simulation Status)\")(cx-gui-do cx-set-expression-entry \"Run Calculation*Table1*Table7(Time Advancement)*Table3(Parameters)*Table1*Table3*ExpressionEntry1(Time Step Size)\" '(\"1e-8\" . 0))(cx-gui-do cx-activate-item \"Run Calculation*Table1*Table7(Time Advancement)*Table3(Parameters)*Table1*Table3*ExpressionEntry1(Time Step Size)\")")
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "ToolBar*Workbench Tools*fl_setup")')
setup2.SendCommand(Command="(cx-gui-do cx-activate-item \"MenuBar*PopupMenuSetupCell*Export Settings\")(cx-gui-do cx-set-file-dialog-entries \"Select File\" '( \"settings\") \"Setting Files (*.set)\")(cx-gui-do cx-activate-item \"Question*OK\")")
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "ToolBar*Workbench Tools*fl_setup")')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "ToolBar*Workbench Tools*fl_setup")')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "ToolBar*Workbench Tools*syncwb")')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "ToolBar*Workbench Tools*parameters")')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Parameters*PanelButtons*PushButton1(Close)")')
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Dynamic Mesh"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Internal|interior-relay_enclosure (interior, id=1)"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Wall|outside_wall (wall, id=5)"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Wall|inside_wall (wall, id=6)"))')
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Wall|inside_wall (wall, id=6)"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Wall|inside_wall (wall, id=6)"))(cx-gui-do cx-activate-item "Wall*PanelButtons*PushButton1(OK)")')
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Wall|inside_wall (wall, id=6)"))(cx-gui-do cx-list-tree-right-click "NavigationPane*List_Tree1" )')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuTree-inside_wall (wall, id=6)*Display")')
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Wall|inside_wall (wall, id=6)"))(cx-gui-do cx-list-tree-right-click "NavigationPane*List_Tree1" )')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuTree-inside_wall (wall, id=6)*Display")')
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Wall|outside_wall (wall, id=5)"))(cx-gui-do cx-activate-item "Simulation Status *PanelButtons*PushButton1(Close)")')
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Wall"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Wall|inside_wall (wall, id=6)"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Wall|inside_wall (wall, id=6)"))(cx-gui-do cx-list-tree-right-click "NavigationPane*List_Tree1" )')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuTree-inside_wall (wall, id=6)*Display")')
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Wall|inside_wall (wall, id=6)"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Wall|inside_wall (wall, id=6)"))(cx-gui-do cx-list-tree-right-click "NavigationPane*List_Tree1" )')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuTree-inside_wall (wall, id=6)*Display")')
setup2.SendCommand(Command="(cx-use-window-id 1)(cx-set-camera-relative '(0.000860609 0.000143299 -0.000511311) '(0 0 0) '(-0.142263 -0.0109577 -0.0394849) 0 0)(cx-use-window-id 1)(cx-set-camera-relative '(-0.000247689 0.000395902 8.88841e-05) '(0 0 0) '(-0.240511 -0.146942 -0.340469) 0 0)")
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*FileMenu*Close Fluent")')
Save(Overwrite=True)
Save(Overwrite=True)
results1.Exit()
setupComponent1 = system3.GetComponent(Name="Setup")
setupComponent1.Refresh()
solutionComponent1.Clean()
AnalysisSettings1.MaximumIteration = 10
AnalysisSettings1.EndTime = "0 [s]"
AnalysisSettings1.StepSize = "2E-08 [s]"
AnalysisSettings1.EndTime = "1E-07 [s]"
AnalysisSettings1.EndTime = "2E-07 [s]"
AnalysisSettings1.StepSize = "5E-08 [s]"
solutionComponent1.Update(AllDependencies=True)
results1.Edit()
results1.SendCommand(Command="""VIEW:View 1
  Camera Mode = User Specified
  CAMERA:
    Option = Pivot Point and Quaternion
    Pivot Point = 0, 0, 1.45e-06
    Scale = 164275
    Pan = 0, 0
    Rotation Quaternion = 0.135892, -0.566647, 0.467853, -0.664508
    
  END

END

VIEW:View 1
  Light Angle = 50, 110
END

VIEW:View 2
  Light Angle = 50, 110
END

VIEW:View 3
  Light Angle = 50, 110
END

VIEW:View 4
  Light Angle = 50, 110
END

> update
# Sending visibility action from ViewUtilities
>hide /VOLUME RENDERING:Volume Rendering 1, view=/VIEW:View 1""")
results1.SendCommand(Command="> autolegend plot=/WIREFRAME:Wireframe, view=VIEW:View 1")
results1.SendCommand(Command="""WIREFRAME:Wireframe
Apply Instancing Transform = On
Colour = 0, 0, 0
Domain List = /DOMAIN GROUP:All Domains
Edge Angle = 30 [degree]
Instancing Transform = /DEFAULT INSTANCE TRANSFORM:Default Transform
Line Colour Mode = Default
Line Width = 1
Show Surface Mesh = On
  OBJECT VIEW TRANSFORM:
  Apply Reflection = Off
  Apply Rotation = Off
  Apply Scale = Off
  Apply Translation = Off
  Principal Axis = Z
  Reflection Plane Option = XY Plane
  Rotation Angle = 0.0 [degree]
  Rotation Axis From = 0 [m], 0 [m], 0 [m]
  Rotation Axis To = 0 [m], 0 [m], 0 [m]
  Rotation Axis Type = Principal Axis
  Scale Vector = 1 , 1 , 1 
  Translation Vector = 0 [m], 0 [m], 0 [m]
  X = 0.0 [m]
  Y = 0.0 [m]
  Z = 0.0 [m]
  END
END""")
results1.SendCommand(Command="""# Sending visibility action from ViewUtilities
>show /VOLUME RENDERING:Volume Rendering 1, view=/VIEW:View 1""")
results1.SendCommand(Command=">centerview 1")
solution1.Edit()
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Results|Scene"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Results|Scene"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Results|Scene"))')
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Results|Scene"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Results|Scene"))')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Scene*Table3*PushButton2(New Object)")')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuNewObject*Mesh...")')
setup2.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Mesh Display*Table1*Frame3*List1(Surfaces)\" '( 0 1))(cx-gui-do cx-activate-item \"Mesh Display*Table1*Frame3*List1(Surfaces)\")(cx-gui-do cx-set-list-selections \"Mesh Display*Table1*Frame3*List1(Surfaces)\" '( 0))(cx-gui-do cx-activate-item \"Mesh Display*Table1*Frame3*List1(Surfaces)\")(cx-gui-do cx-set-list-selections \"Mesh Display*Table1*Frame3*List1(Surfaces)\" '())(cx-gui-do cx-activate-item \"Mesh Display*Table1*Frame3*List1(Surfaces)\")(cx-gui-do cx-activate-item \"Mesh Display*PanelButtons*PushButton1(OK)\")")
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Scene*PanelButtons*PushButton4(Save && Display)")')
setup2.SendCommand(Command="(cx-gui-do cx-activate-item \"Information*OK\")(cx-gui-do cx-set-list-selections \"Mesh Display*Table1*Frame3*List1(Surfaces)\" '( 0))(cx-gui-do cx-activate-item \"Mesh Display*Table1*Frame3*List1(Surfaces)\")(cx-gui-do cx-activate-item \"Mesh Display*PanelButtons*PushButton1(OK)\")")
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Mesh Display*PanelButtons*PushButton2(Cancel)")')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Scene*PanelButtons*PushButton4(Save && Display)")')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Scene*PanelButtons*PushButton4(Save && Display)")')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Scene*PanelButtons*PushButton2(Cancel)")')
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Results|Scene|scene-1"))')
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Results|Scene|scene-1"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Results|Scene|scene-1"))(cx-gui-do cx-activate-item "Scene*PanelButtons*PushButton2(Cancel)")')
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Results|Animations|Playback"))')
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Results|Animations|Playback"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Results|Animations|Playback"))')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Playback*PanelButtons*PushButton4(Read)")')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Playback*PanelButtons*PushButton2(Close)")')
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Results|Graphics|Mesh|mesh-1"))')
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Results|Graphics|Mesh|mesh-1"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Results|Graphics|Mesh|mesh-1"))(cx-gui-do cx-activate-item "Mesh Display*PanelButtons*PushButton2(Cancel)")')
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Results|Graphics|Contours"))')
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Results|Graphics|Contours"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Results|Graphics|Contours"))')
setup2.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Contours*Table1*Frame3*Frame2*List2(Surfaces)\" '( 0))(cx-gui-do cx-activate-item \"Contours*Table1*Frame3*Frame2*List2(Surfaces)\")(cx-gui-do cx-activate-item \"Contours*PanelButtons*PushButton1(OK)\")")
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Contours*PanelButtons*PushButton2(Cancel)")')
setup2.SendCommand(Command="(cx-use-window-id 1)(cx-set-camera-relative '(0.00045626 -0.000414633 -0.000505059) '(0 0 0) '(0.280959 -0.00261801 -0.175078) 0 0)(cx-use-window-id 1)(cx-set-camera-relative '(-9.03724e-05 -0.000188469 0.000494366) '(0 0 0) '(0.446755 0.0845002 0.104407) 0 0)(cx-use-window-id 1)(cx-set-camera-relative '(4.30723e-05 0.000127956 -0.000142917) '(0 0 0) '(-0.171149 -0.0343838 -0.0830853) 0 0)(cx-use-window-id 1)(cx-set-camera-relative '(7.4521e-05 -5.16762e-05 -0.000362597) '(0 0 0) '(-0.196502 -0.0541446 -0.0461042) 0 0)(cx-use-window-id 1)(cx-set-camera-relative '(-0.000169742 -0.000216852 0.000596287) '(0 0 0) '(0.541938 0.0558038 0.183606) 0 0)")
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "ToolBar*View Tools*autoscale")')
setup2.SendCommand(Command="(cx-use-window-id 1)(cx-set-camera-relative '(-2.14519e-05 -1.83822e-06 8.33936e-06) '(0 0 0) '(0.283572 -0.0641915 0.742243) 0 0)(cx-use-window-id 1)(cx-set-camera-relative '(0.000388718 0.000101629 8.33179e-06) '(0 0 0) '(-0.243412 0.202401 -0.293079) 0 0)(cx-gui-do cx-set-list-tree-selections \"NavigationPane*List_Tree1\" (list \"Results|Graphics|Contours|contour-1\"))(cx-gui-do cx-set-list-tree-selections \"NavigationPane*List_Tree1\" (list \"Results|Graphics|Contours|contour-1\"))")
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Results|Graphics|Contours|contour-1"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Results|Graphics|Contours|contour-1"))')
setup2.SendCommand(Command='(cx-gui-do cx-set-text-entry "Contours*Table1*TextEntry2(Contour Name)" "pressure-inside-wall")(cx-gui-do cx-activate-item "Contours*PanelButtons*PushButton1(OK)")')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Contours*PanelButtons*PushButton2(Cancel)")')
setup2.SendCommand(Command="(cx-use-window-id 1)(cx-set-camera-relative '(0.000479697 -0.000510141 -0.000462603) '(0 0 0) '(0.319368 0.241017 0.238383) 0 0)(cx-use-window-id 1)(cx-set-camera-relative '(1.40617e-05 -8.96178e-05 -6.77374e-05) '(0 0 0) '(0.0690777 0.0076735 -0.0104522) 0 0)(cx-use-window-id 1)(cx-set-camera-relative '(-1.85573e-05 0.000113941 3.41099e-05) '(0 0 0) '(-0.10898 0.0143556 0.373083) 0 0)(cx-use-window-id 1)(cxg-clear-all-selections (cx-active-window))(cxg-add-surfaces-to-selection '(inside_wall) (cx-active-window))(cx-use-window-id 1)(cx-set-camera-relative '(-3.51849e-05 0.00011131 7.20406e-05) '(0 0 0) '(-0.118759 -0.0355074 0.00554878) 0 0)(cx-use-window-id 1)(cx-use-window-id 1)(cx-set-camera-relative '(0 0 0) '(0 0 0) '(0 0 0) 0 0)(cx-gui-do cx-set-list-tree-selections \"NavigationPane*List_Tree1\" (list \"Results|Graphics|Mesh|mesh-1\"))")
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Results|Graphics|Mesh|mesh-1"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Results|Graphics|Mesh|mesh-1"))(cx-gui-do cx-activate-item "Mesh Display*PanelButtons*PushButton2(Cancel)")')
setup2.SendCommand(Command="(cx-use-window-id 1)(cx-set-camera-relative '(1.47303e-05 -9.17128e-06 -1.20786e-05) '(0 0 0) '(0.130937 0.113514 0.063679) 0 0)(cx-gui-do cx-set-list-tree-selections \"NavigationPane*List_Tree1\" (list \"Results|Graphics|Contours|pressure-inside-wall\"))")
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Results|Graphics|Contours|pressure-inside-wall"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Results|Graphics|Contours|pressure-inside-wall"))')
setup2.SendCommand(Command="(cx-gui-do cx-activate-item \"Contours*PanelButtons*PushButton1(OK)\")(cxg-clear-all-selections (cx-active-window))(cxg-add-surfaces-to-selection '() (cx-active-window))")
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Contours*PanelButtons*PushButton2(Cancel)")')
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Results|Graphics|Contours"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Results|Graphics|Contours"))(cx-gui-do cx-list-tree-right-click "NavigationPane*List_Tree1" )(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Results|Graphics|Contours|pressure-inside-wall"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Results|Graphics|Contours|pressure-inside-wall"))(cx-gui-do cx-list-tree-right-click "NavigationPane*List_Tree1" )')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuTree-pressure-inside-wall*Copy...")')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Contours*PanelButtons*PushButton2(Cancel)")')
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Results|Graphics|Contours|pressure-inside-wall"))(cx-gui-do cx-list-tree-right-click "NavigationPane*List_Tree1" )(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Results|Graphics|Contours|pressure-inside-wall"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Results|Graphics|Contours|pressure-inside-wall"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Results|Graphics|Contours"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Results|Graphics|Contours"))(cx-gui-do cx-list-tree-right-click "NavigationPane*List_Tree1" )')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuTree-Contours*New...")')
setup2.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Contours*Table1*Frame3*Frame2*List2(Surfaces)\" '( 1))(cx-gui-do cx-activate-item \"Contours*Table1*Frame3*Frame2*List2(Surfaces)\")(cx-gui-do cx-set-text-entry \"Contours*Table1*TextEntry2(Contour Name)\" \"pressure-outside-wall\")(cx-gui-do cx-activate-item \"Contours*PanelButtons*PushButton1(OK)\")")
setup2.SendCommand(Command="(cx-use-window-id 1)(cx-set-camera-relative '(-7.43471e-06 1.02294e-05 -1.95129e-05) '(0 0 0) '(0.416211 -0.625758 -0.493168) 0 0)(cx-gui-do cx-activate-item \"Contours*PanelButtons*PushButton2(Cancel)\")")
setup2.SendCommand(Command="(cx-use-window-id 1)(cx-set-camera-relative '(1.55898e-05 -1.98358e-05 2.12113e-05) '(0 0 0) '(-0.11106 0.758271 0.486119) 0 0)(cx-gui-do cx-set-list-tree-selections \"NavigationPane*List_Tree1\" (list \"Results|Graphics|Mesh|mesh-1\"))")
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Results|Graphics|Mesh|mesh-1"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Results|Graphics|Mesh|mesh-1"))(cx-gui-do cx-activate-item "Mesh Display*PanelButtons*PushButton2(Cancel)")')
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Results|Graphics|Mesh|mesh-1"))')
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Results|Graphics|Mesh|mesh-1"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Results|Graphics|Mesh|mesh-1"))(cx-gui-do cx-activate-item "Mesh Display*PanelButtons*PushButton1(OK)")')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Mesh Display*PanelButtons*PushButton2(Cancel)")')
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Results|Surfaces"))')
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Results|Surfaces"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Results|Surfaces"))(cx-gui-do cx-activate-item "Surfaces*PanelButtons*PushButton2(Cancel)")')
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list ))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Results|Surfaces"))')
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Results|Surfaces"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup2.SendCommand(Command="(cx-gui-do cx-set-list-tree-selections \"NavigationPane*List_Tree1\" (list \"Results|Surfaces\"))(cx-gui-do cx-set-list-selections \"Surfaces*Table1*List1(Surfaces)\" '( 0))(cx-gui-do cx-activate-item \"Surfaces*Table1*List1(Surfaces)\")(cx-gui-do cx-set-toggle-button2 \"Surfaces*Table1*CheckButton2(Highlight Surfaces)\" #t)(cx-gui-do cx-activate-item \"Surfaces*Table1*CheckButton2(Highlight Surfaces)\")(cx-use-window-id 2)(cx-set-camera-relative '(-4.07259e-06 -1.25742e-06 4.88142e-06) '(0 0 0) '(-0.384861 -0.247813 0.578023) 0 0)(cx-gui-do cx-activate-item \"Surfaces*PanelButtons*PushButton2(Cancel)\")")
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Results|Graphics|Mesh"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Results|Graphics|Mesh"))(cx-gui-do cx-list-tree-right-click "NavigationPane*List_Tree1" )(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Results|Graphics"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Report Definitions|volume-avg-pressure-relay"))')
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Report Definitions|volume-avg-pressure-relay"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Report Definitions|volume-avg-pressure-relay"))(cx-gui-do cx-activate-item "Volume Report Definition*PanelButtons*PushButton2(Cancel)")')
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Results|Graphics|Vectors"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Results|Graphics|Pathlines"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Results|Graphics|Particle Tracks"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Results|Graphics|Vectors"))')
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Results|Graphics|Vectors"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup2.SendCommand(Command="(cx-gui-do cx-set-list-tree-selections \"NavigationPane*List_Tree1\" (list \"Results|Graphics|Vectors\"))(cx-gui-do cx-set-list-selections \"Vectors*Table1*Table3*Frame6*List2(Surfaces)\" '( 0))(cx-gui-do cx-activate-item \"Vectors*Table1*Table3*Frame6*List2(Surfaces)\")(cx-gui-do cx-activate-item \"Vectors*PanelButtons*PushButton2(Cancel)\")")
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Results|Graphics|Particle Tracks"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Results|Graphics|Particle Tracks"))')
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Results|Graphics|Particle Tracks"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup2.SendCommand(Command="(cx-gui-do cx-set-list-tree-selections \"NavigationPane*List_Tree1\" (list \"Results|Graphics|Particle Tracks\"))(cx-gui-do cx-set-list-selections \"Particle Tracks*Frame3*Table1*DropDownList1(Color by)\" '( 1))")
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Particle Tracks*Frame3*Table1*DropDownList1(Color by)")')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Particle Tracks*Frame3*PushButton3(Update Min/Max)")')
setup2.SendCommand(Command='(cx-gui-do cx-set-toggle-button2 "Particle Tracks*Table2*Frame1*Frame2*ButtonBox3(Pulse Mode)*Continuous" #t)(cx-gui-do cx-activate-item "Particle Tracks*Table2*Frame1*Frame2*ButtonBox3(Pulse Mode)*Continuous")(cx-gui-do cx-set-toggle-button2 "Particle Tracks*Table2*Frame1*Frame2*ButtonBox3(Pulse Mode)*Single" #t)(cx-gui-do cx-activate-item "Particle Tracks*Table2*Frame1*Frame2*ButtonBox3(Pulse Mode)*Single")(cx-gui-do cx-set-toggle-button2 "Particle Tracks*Table2*Table2(Reporting)*Table1*ToggleBox1(Report Type)*Step By Step" #t)(cx-gui-do cx-activate-item "Particle Tracks*Table2*Table2(Reporting)*Table1*ToggleBox1(Report Type)*Step By Step")(cx-gui-do cx-set-toggle-button2 "Particle Tracks*Table2*Table2(Reporting)*Table1*ToggleBox1(Report Type)*Off" #t)(cx-gui-do cx-activate-item "Particle Tracks*Table2*Table2(Reporting)*Table1*ToggleBox1(Report Type)*Off")(cx-gui-do cx-set-toggle-button2 "Particle Tracks*Table2*Table2(Reporting)*Table1*ToggleBox1(Report Type)*Step By Step" #t)(cx-gui-do cx-activate-item "Particle Tracks*Table2*Table2(Reporting)*Table1*ToggleBox1(Report Type)*Step By Step")(cx-gui-do cx-set-toggle-button2 "Particle Tracks*Table2*Table2(Reporting)*Table1*ToggleBox1(Report Type)*Off" #t)(cx-gui-do cx-activate-item "Particle Tracks*Table2*Table2(Reporting)*Table1*ToggleBox1(Report Type)*Off")(cx-gui-do cx-set-toggle-button2 "Particle Tracks*Table2*Frame1*Frame1*ToggleBox1(Options)*CheckButton3(Draw Mesh)" #t)(cx-gui-do cx-activate-item "Particle Tracks*Table2*Frame1*Frame1*ToggleBox1(Options)*CheckButton3(Draw Mesh)")(cx-gui-do cx-activate-item "Mesh Display*PanelButtons*PushButton2(Cancel)")')
setup2.SendCommand(Command='(cx-gui-do cx-set-toggle-button2 "Particle Tracks*Table2*Frame1*Frame1*ToggleBox1(Options)*CheckButton3(Draw Mesh)" #f)(cx-gui-do cx-activate-item "Particle Tracks*Table2*Frame1*Frame1*ToggleBox1(Options)*CheckButton3(Draw Mesh)")(cx-gui-do cx-set-toggle-button2 "Particle Tracks*Table2*Frame1*Frame1*ToggleBox1(Options)*CheckButton4(XY Plot)" #t)(cx-gui-do cx-activate-item "Particle Tracks*Table2*Frame1*Frame1*ToggleBox1(Options)*CheckButton4(XY Plot)")(cx-gui-do cx-set-toggle-button2 "Particle Tracks*Table2*Frame1*Frame1*ToggleBox1(Options)*CheckButton4(XY Plot)" #f)(cx-gui-do cx-activate-item "Particle Tracks*Table2*Frame1*Frame1*ToggleBox1(Options)*CheckButton4(XY Plot)")')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Particle Tracks*Frame3*List5(Release from Injections)")')
setup2.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Particle Tracks*Frame3*List5(Release from Injections)\" '())")
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Particle Tracks*Frame3*List5(Release from Injections)")')
setup2.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Particle Tracks*Frame3*List5(Release from Injections)\" '())(cx-gui-do cx-activate-item \"Particle Tracks*PanelButtons*PushButton2(Cancel)\")")
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Results|Graphics|Pathlines"))')
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Results|Graphics|Pathlines"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Results|Graphics|Pathlines"))(cx-gui-do cx-set-toggle-button2 "Pathlines*Frame2*ToggleBox1(Options)*CheckButton1(Oil Flow)" #t)(cx-gui-do cx-activate-item "Pathlines*Frame2*ToggleBox1(Options)*CheckButton1(Oil Flow)")(cx-gui-do cx-set-toggle-button2 "Pathlines*Frame2*ToggleBox1(Options)*CheckButton1(Oil Flow)" #f)(cx-gui-do cx-activate-item "Pathlines*Frame2*ToggleBox1(Options)*CheckButton1(Oil Flow)")(cx-gui-do cx-activate-item "Pathlines*PanelButtons*PushButton2(Cancel)")')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "ToolBar*Workbench Tools*fl_setup")')
setup2.SendCommand(Command="(cx-gui-do cx-activate-item \"MenuBar*PopupMenuSetupCell*Export Settings\")(cx-gui-do cx-set-file-dialog-entries \"Select File\" '( \"settings\") \"Setting Files (*.set)\")(cx-gui-do cx-activate-item \"Question*OK\")")
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Run Calculation"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Run Calculation"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Run Calculation"))')
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Run Calculation"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Run Calculation"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Run Calculation"))(cx-gui-do cx-list-tree-right-click "NavigationPane*List_Tree1" )(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Run Calculation"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Initialization"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Initialization"))(cx-gui-do cx-list-tree-right-click "NavigationPane*List_Tree1" )')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuTree-Initialization*Initialize")')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Ribbon*Frame1*Frame6(Results)*Table1*Table3(Graphics)*PushButton1(Mesh)")')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Ribbon*Frame1*Frame6(Results)*Table1*Table3(Graphics)*PushButton1(Mesh)")')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "ToolBar*Workbench Tools*fl_setup")')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "ToolBar*Workbench Tools*fl_setup")')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuSetupCell*Reload")(cx-gui-do cx-activate-item "Question*OK")')
setup2.SendCommand(Command="(cx-gui-do cx-set-expression-entry \"Run Calculation*Table1*Table7(Time Advancement)*Table3(Parameters)*Table1*Table3*ExpressionEntry1(Time Step Size)\" '(\"1e-7\" . 0))(cx-gui-do cx-activate-item \"Run Calculation*Table1*Table7(Time Advancement)*Table3(Parameters)*Table1*Table3*ExpressionEntry1(Time Step Size)\")")
setup2.SendCommand(Command="(cx-gui-do cx-set-expression-entry \"Run Calculation*Table1*Table7(Time Advancement)*Table3(Parameters)*Table1*Table3*ExpressionEntry1(Time Step Size)\" '(\"1e-7\" . 0))(cx-gui-do cx-set-integer-entry \"Run Calculation*Table1*Table7(Time Advancement)*Table3(Parameters)*Table1*Table1*IntegerEntry1(Number of Time Steps)\" 10)(cx-gui-do cx-activate-item \"Run Calculation*Table1*Table7(Time Advancement)*Table3(Parameters)*Table1*Table1*IntegerEntry1(Number of Time Steps)\")")
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "ToolBar*Workbench Tools*syncwb")')
setupComponent1.Refresh()
solutionComponent1.Clean()
AnalysisSettings1.EndTime = "1E-06 [s]"
AnalysisSettings1.StepSize = "1E-07 [s]"
results1.Exit()
results1.Edit()
results1.Exit()
ClearMessages()
solutionComponent1.Update(AllDependencies=True)
Fluent.UpdateMonitorChart(
    Container=solution1,
    ChartName="")
ClearMessages()
solutionComponent2 = system2.GetComponent(Name="Solution")
solutionComponent2.Refresh()
solution1.Edit()
solutionComponent2.Refresh()
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Initialization"))')
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Initialization"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Initialization"))')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "ToolBar*Workbench Tools*fl_setup")')
solutionComponent1.Clean()
solutionComponent2.Refresh()
solution1.Edit()
solutionComponent2.Refresh()
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "ToolBar*Workbench Tools*fl_setup")')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuSetupCell*Reload")(cx-gui-do cx-activate-item "Question*OK")')
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Dynamic Mesh"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|General"))')
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|General"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|General"))')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "ToolBar*Workbench Tools*fl_setup")')
setup2.SendCommand(Command="(cx-gui-do cx-activate-item \"MenuBar*PopupMenuSetupCell*Import Settings\")(cx-gui-do cx-set-file-dialog-entries \"Select File\" '( \"settings\") \"Setting Files (*.set)\")(cx-gui-do cx-activate-item \"Question*OK\")")
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Results|Graphics"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Results|Graphics"))(cx-gui-do cx-list-tree-right-click "NavigationPane*List_Tree1" )(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Results|Graphics"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Initialization"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Initialization"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Report Definitions"))(cx-gui-do cx-list-tree-right-click "NavigationPane*List_Tree1" )')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*Volume ReportSubMenu*Volume-Average...")')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Volume Report Definition*PanelButtons*PushButton2(Cancel)")')
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Initialization"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Initialization"))')
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Initialization"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Initialization"))')
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Run Calculation"))')
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Run Calculation"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup2.SendCommand(Command="(cx-gui-do cx-set-list-tree-selections \"NavigationPane*List_Tree1\" (list \"Solution|Run Calculation\"))(cx-gui-do cx-set-expression-entry \"Run Calculation*Table1*Table7(Time Advancement)*Table3(Parameters)*Table1*Table3*ExpressionEntry1(Time Step Size)\" '(\"1e-7\" . 0))(cx-gui-do cx-activate-item \"Run Calculation*Table1*Table7(Time Advancement)*Table3(Parameters)*Table1*Table3*ExpressionEntry1(Time Step Size)\")")
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list ))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Initialization"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Initialization"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Initialization"))')
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Initialization"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Initialization"))')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Solution Initialization*Table1*Frame8*PushButton1(Initialize)")')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "ToolBar*Workbench Tools*syncwb")')
solutionComponent1.Update(AllDependencies=True)
setup2.SendCommand(Command='(cx-use-window-id 1)(cx-use-window-id 1)(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Initialization"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Initialization"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Initialization"))')
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Initialization"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Initialization"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Run Calculation"))')
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Run Calculation"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Run Calculation"))(cx-gui-do cx-set-integer-entry "Run Calculation*Table1*Table7(Time Advancement)*Table3(Parameters)*Table5*Table1*Table1*IntegerEntry1(Max Iterations/Time Step)" 20)(cx-gui-do cx-activate-item "Run Calculation*Table1*Table7(Time Advancement)*Table3(Parameters)*Table5*Table1*Table1*IntegerEntry1(Max Iterations/Time Step)")')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "ToolBar*Workbench Tools*fl_setup")')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "ToolBar*Workbench Tools*fl_setup")')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuSetupCell*Reload")(cx-gui-do cx-activate-item "Question*OK")')
AnalysisSettings1.MaximumIteration = 20
AnalysisSettings1.EndTime = "1E-07 [s]"
AnalysisSettings1.StepSize = "1E-08 [s]"
setup2.SendCommand(Command="(cx-gui-do cx-set-expression-entry \"Run Calculation*Table1*Table7(Time Advancement)*Table3(Parameters)*Table1*Table3*ExpressionEntry1(Time Step Size)\" '(\"1e-8\" . 0))(cx-gui-do cx-activate-item \"Run Calculation*Table1*Table7(Time Advancement)*Table3(Parameters)*Table1*Table3*ExpressionEntry1(Time Step Size)\")")
setup2.SendCommand(Command="(cx-gui-do cx-set-expression-entry \"Run Calculation*Table1*Table7(Time Advancement)*Table3(Parameters)*Table1*Table3*ExpressionEntry1(Time Step Size)\" '(\"1e-8\" . 0))")
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Run Calculation*Table1*Table1*Table1*PushButton1(Check Case)")')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Case Check*PanelButtons*PushButton2(Cancel)")')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Ribbon*Frame1*Frame2(Domain)*Table1*Table3(Mesh)*PushButton4(Check)")')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuCheck*Perform Mesh Check")')
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Dynamic Mesh"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Dynamic Mesh"))(cx-gui-do cx-list-tree-right-click "NavigationPane*List_Tree1" )(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Dynamic Mesh"))')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "ToolBar*Display Options Panel*fl_mesh_svg_graphics_toolbar")')
setup2.SendCommand(Command='(cx-gui-do cx-set-toggle-button2 "Mesh Display*Table1*Frame1*Frame1*ToggleBox1(Options)*CheckButton3(Faces)" #f)(cx-gui-do cx-activate-item "Mesh Display*Table1*Frame1*Frame1*ToggleBox1(Options)*CheckButton3(Faces)")(cx-gui-do cx-activate-item "Mesh Display*PanelButtons*PushButton1(OK)")')
setup2.SendCommand(Command="(cx-use-window-id 1)(cx-set-camera-relative '(-1.01117e-05 9.37208e-06 -9.70428e-06) '(0 0 0) '(-0.302113 -0.335777 0.0322843) 0 0)(cx-gui-do cx-set-list-selections \"Mesh Display*Table1*Frame3*List1(Surfaces)\" '( 0 1))(cx-gui-do cx-activate-item \"Mesh Display*Table1*Frame3*List1(Surfaces)\")(cx-gui-do cx-set-list-selections \"Mesh Display*Table1*Frame3*List1(Surfaces)\" '( 1))(cx-gui-do cx-activate-item \"Mesh Display*Table1*Frame3*List1(Surfaces)\")(cx-gui-do cx-set-list-selections \"Mesh Display*Table1*Frame3*List1(Surfaces)\" '( 0 1))(cx-gui-do cx-activate-item \"Mesh Display*Table1*Frame3*List1(Surfaces)\")(cx-gui-do cx-set-list-selections \"Mesh Display*Table1*Frame3*List1(Surfaces)\" '( 1))(cx-gui-do cx-activate-item \"Mesh Display*Table1*Frame3*List1(Surfaces)\")(cx-gui-do cx-set-list-selections \"Mesh Display*Table1*Frame3*List1(Surfaces)\" '())(cx-gui-do cx-activate-item \"Mesh Display*Table1*Frame3*List1(Surfaces)\")(cx-gui-do cx-set-list-selections \"Mesh Display*Table1*Frame3*List1(Surfaces)\" '( 0))(cx-gui-do cx-activate-item \"Mesh Display*Table1*Frame3*List1(Surfaces)\")(cx-gui-do cx-set-list-selections \"Mesh Display*Table1*Frame3*List1(Surfaces)\" '())(cx-gui-do cx-activate-item \"Mesh Display*Table1*Frame3*List1(Surfaces)\")(cx-gui-do cx-activate-item \"Mesh Display*PanelButtons*PushButton2(Cancel)\")")
setup2.SendCommand(Command="(cx-use-window-id 1)(cx-set-camera-relative '(-2.8036e-06 -7.14295e-07 4.05902e-06) '(0 0 0) '(-0.0108057 -0.00563806 0.0144186) 0 0)")
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "ToolBar*Display Options Panel*fl_mesh_svg_graphics_toolbar")')
setup2.SendCommand(Command='(cx-gui-do cx-set-toggle-button2 "Mesh Display*Table1*Frame1*Frame1*ToggleBox1(Options)*CheckButton2(Edges)" #f)(cx-gui-do cx-activate-item "Mesh Display*Table1*Frame1*Frame1*ToggleBox1(Options)*CheckButton2(Edges)")(cx-gui-do cx-activate-item "Mesh Display*PanelButtons*PushButton1(OK)")')
setup2.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Mesh Display*Table1*Frame3*List1(Surfaces)\" '( 0 1))(cx-gui-do cx-activate-item \"Mesh Display*Table1*Frame3*List1(Surfaces)\")(cx-gui-do cx-set-list-selections \"Mesh Display*Table1*Frame3*List1(Surfaces)\" '( 1))(cx-gui-do cx-activate-item \"Mesh Display*Table1*Frame3*List1(Surfaces)\")(cx-gui-do cx-set-list-selections \"Mesh Display*Table1*Frame3*List1(Surfaces)\" '( 0 1))(cx-gui-do cx-activate-item \"Mesh Display*Table1*Frame3*List1(Surfaces)\")(cx-gui-do cx-set-list-selections \"Mesh Display*Table1*Frame3*List1(Surfaces)\" '( 1))(cx-gui-do cx-activate-item \"Mesh Display*Table1*Frame3*List1(Surfaces)\")(cx-gui-do cx-set-list-selections \"Mesh Display*Table1*Frame3*List1(Surfaces)\" '( 0 1))(cx-gui-do cx-activate-item \"Mesh Display*Table1*Frame3*List1(Surfaces)\")(cx-gui-do cx-set-list-selections \"Mesh Display*Table1*Frame3*List1(Surfaces)\" '( 1))(cx-gui-do cx-activate-item \"Mesh Display*Table1*Frame3*List1(Surfaces)\")(cx-gui-do cx-set-list-selections \"Mesh Display*Table1*Frame3*List1(Surfaces)\" '( 1))(cx-gui-do cx-activate-item \"Mesh Display*Table1*Frame3*List1(Surfaces)\")(cx-gui-do cx-set-list-selections \"Mesh Display*Table1*Frame3*List1(Surfaces)\" '( 1))(cx-gui-do cx-activate-item \"Mesh Display*Table1*Frame3*List1(Surfaces)\")(cx-gui-do cx-set-list-selections \"Mesh Display*Table1*Frame3*List1(Surfaces)\" '( 1))(cx-gui-do cx-activate-item \"Mesh Display*Table1*Frame3*List1(Surfaces)\")(cx-gui-do cx-set-toggle-button2 \"Mesh Display*Table1*Frame1*Frame1*ToggleBox1(Options)*CheckButton2(Edges)\" #t)(cx-gui-do cx-activate-item \"Mesh Display*Table1*Frame1*Frame1*ToggleBox1(Options)*CheckButton2(Edges)\")(cx-gui-do cx-set-list-selections \"Mesh Display*Table1*Frame3*List1(Surfaces)\" '( 0 1))(cx-gui-do cx-activate-item \"Mesh Display*Table1*Frame3*List1(Surfaces)\")(cx-gui-do cx-activate-item \"Mesh Display*PanelButtons*PushButton2(Cancel)\")")
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "ToolBar*Front Faces Transparent*frontfacestransparent")')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "ToolBar*Display Options Panel*fl_mesh_svg_graphics_toolbar")')
setup2.SendCommand(Command='(cx-gui-do cx-set-toggle-button2 "Mesh Display*Table1*Frame1*Frame1*ToggleBox1(Options)*CheckButton2(Edges)" #t)(cx-gui-do cx-activate-item "Mesh Display*Table1*Frame1*Frame1*ToggleBox1(Options)*CheckButton2(Edges)")(cx-gui-do cx-set-toggle-button2 "Mesh Display*Table1*Frame1*Frame1*ToggleBox1(Options)*CheckButton3(Faces)" #t)(cx-gui-do cx-activate-item "Mesh Display*Table1*Frame1*Frame1*ToggleBox1(Options)*CheckButton3(Faces)")(cx-gui-do cx-activate-item "Mesh Display*PanelButtons*PushButton1(OK)")')
setup2.SendCommand(Command="(cx-use-window-id 1)(cx-set-camera-relative '(2.90381e-06 -8.36358e-06 1.19944e-05) '(0 0 0) '(0.114617 0.241174 0.0736391) 0 0)(cx-gui-do cx-activate-item \"Mesh Display*PanelButtons*PushButton2(Cancel)\")")
setup2.SendCommand(Command="(cx-use-window-id 1)(cx-set-camera-relative '(-3.00152e-05 0.000248169 -0.000514791) '(0 0 0) '(-0.103314 -0.3349 -0.152791) 0 0)(cx-gui-do cx-set-list-tree-selections \"NavigationPane*List_Tree1\" (list \"Setup|Boundary Conditions|Wall|outside_wall (wall, id=5)\"))(cx-gui-do cx-set-list-tree-selections \"NavigationPane*List_Tree1\" (list \"Setup|Boundary Conditions|Wall|inside_wall (wall, id=6)\"))(cx-gui-do cx-set-list-tree-selections \"NavigationPane*List_Tree1\" (list \"Setup|Boundary Conditions|Wall|inside_wall (wall, id=6)\"))(cx-gui-do cx-list-tree-right-click \"NavigationPane*List_Tree1\" )")
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuTree-inside_wall (wall, id=6)*Display")')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Run Calculation*Table1*Table1*Table3*PushButton2(Preview Mesh Motion)")')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Mesh Motion*PanelButtons*PushButton1(Apply)")')
setup2.SendCommand(Command="(cx-use-window-id 1)(cx-set-camera-relative '(1.73787e-05 3.96781e-05 -4.2882e-05) '(0 0 0) '(-0.395247 -0.816963 -0.900161) 0 0)(cx-use-window-id 1)(cx-set-camera-relative '(1.27086e-05 -9.57126e-06 7.61846e-06) '(0 0 0) '(0.143474 0.293902 0.05804) 0 0)(cx-gui-do cx-activate-item \"Mesh Motion*PanelButtons*PushButton2(Close)\")")
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Wall|inside_wall (wall, id=6)"))')
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Wall|inside_wall (wall, id=6)"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Wall|inside_wall (wall, id=6)"))(cx-gui-do cx-activate-item "Wall*PanelButtons*PushButton2(Cancel)")')
setup2.SendCommand(Command="(cx-use-window-id 1)(cx-set-camera-relative '(-1.29572e-05 8.24482e-06 2.54004e-06) '(0 0 0) '(0.533608 -0.340432 -0.107605) 0 0)(cx-gui-do cx-set-list-tree-selections \"NavigationPane*List_Tree1\" (list \"Setup|Dynamic Mesh\"))")
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Dynamic Mesh"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Dynamic Mesh"))(cx-gui-do cx-set-toggle-button2 "Dynamic Mesh*Table1*Table1*Table2*Table3*Table2(Options)*CheckButton4(Implicit Update)" #f)(cx-gui-do cx-activate-item "Dynamic Mesh*Table1*Table1*Table2*Table3*Table2(Options)*CheckButton4(Implicit Update)")')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Dynamic Mesh*Table1*Table1*Table2*Table3*Table2(Options)*PushButton7(Settings)")')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Options*PanelButtons*PushButton1(OK)")')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "ToolBar*Workbench Tools*fl_setup")')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuSetupCell*Export Settings")')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "ToolBar*Workbench Tools*fl_setup")')
setup2.SendCommand(Command="(cx-gui-do cx-activate-item \"MenuBar*PopupMenuSetupCell*Export Settings\")(cx-gui-do cx-set-file-dialog-entries \"Select File\" '( \"settings\") \"Setting Files (*.set)\")(cx-gui-do cx-activate-item \"Question*OK\")")
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Cell Zone Conditions|Fluid|relay_enclosure (fluid, id=2)"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Cell Zone Conditions|Fluid|relay_enclosure (fluid, id=2)"))')
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Cell Zone Conditions|Fluid|relay_enclosure (fluid, id=2)"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Cell Zone Conditions|Fluid|relay_enclosure (fluid, id=2)"))')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Fluid*PanelButtons*PushButton1(OK)")')
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Internal|interior-relay_enclosure (interior, id=1)"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Wall|inside_wall (wall, id=6)"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Wall|outside_wall (wall, id=5)"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Wall|inside_wall (wall, id=6)"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Wall|inside_wall (wall, id=6)""Setup|Boundary Conditions|Wall|outside_wall (wall, id=5)"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Wall|inside_wall (wall, id=6)""Setup|Boundary Conditions|Wall|outside_wall (wall, id=5)"))(cx-gui-do cx-list-tree-right-click "NavigationPane*List_Tree1" )')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuPopupMenu*Display")')
setup2.SendCommand(Command="(cx-use-window-id 1)(cx-set-camera-relative '(-2.70219e-06 1.61553e-06 -2.16842e-06) '(0 0 0) '(-0.911379 0.234688 0.267119) 0 0)(cx-use-window-id 1)(cx-set-camera-relative '(2.10552e-06 -8.97956e-06 1.69295e-05) '(0 0 0) '(0.142509 0.32271 0.152175) 0 0)(cx-use-window-id 1)(cx-set-camera-relative '(2.92721e-05 -0.000189577 0.000159442) '(0 0 0) '(0.0914288 0.144994 0.15652) 0 0)(cx-gui-do cx-set-list-tree-selections \"NavigationPane*List_Tree1\" (list \"Solution|Run Calculation\"))")
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Run Calculation"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Run Calculation"))')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Run Calculation*Table1*Table1*Table1*PushButton1(Check Case)")')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Case Check*PanelButtons*PushButton2(Cancel)")')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Ribbon*Frame1*Frame2(Domain)*Table1*Table3(Mesh)*PushButton4(Check)")')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuCheck*Perform Mesh Check")')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Run Calculation*Table1*Table1*Table1*PushButton1(Check Case)")')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Case Check*PanelButtons*PushButton2(Cancel)")')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Run Calculation*Table1*Table1*Table3*PushButton2(Preview Mesh Motion)")')
setup2.SendCommand(Command='(cx-gui-do cx-set-integer-entry "Mesh Motion*Table1*Table1(Time)*IntegerEntry3(Number of Time Steps)" 0)(cx-gui-do cx-activate-item "Mesh Motion*Table1*Table1(Time)*IntegerEntry3(Number of Time Steps)")')
setup2.SendCommand(Command='(cx-gui-do cx-set-integer-entry "Mesh Motion*Table1*Table1(Time)*IntegerEntry3(Number of Time Steps)" 1)(cx-gui-do cx-activate-item "Mesh Motion*Table1*Table1(Time)*IntegerEntry3(Number of Time Steps)")')
setup2.SendCommand(Command='(cx-gui-do cx-set-integer-entry "Mesh Motion*Table1*Table1(Time)*IntegerEntry3(Number of Time Steps)" 2)(cx-gui-do cx-activate-item "Mesh Motion*Table1*Table1(Time)*IntegerEntry3(Number of Time Steps)")')
setup2.SendCommand(Command='(cx-gui-do cx-set-integer-entry "Mesh Motion*Table1*Table1(Time)*IntegerEntry3(Number of Time Steps)" 3)(cx-gui-do cx-activate-item "Mesh Motion*Table1*Table1(Time)*IntegerEntry3(Number of Time Steps)")')
setup2.SendCommand(Command='(cx-gui-do cx-set-integer-entry "Mesh Motion*Table1*Table1(Time)*IntegerEntry3(Number of Time Steps)" 4)(cx-gui-do cx-activate-item "Mesh Motion*Table1*Table1(Time)*IntegerEntry3(Number of Time Steps)")')
setup2.SendCommand(Command='(cx-gui-do cx-set-integer-entry "Mesh Motion*Table1*Table1(Time)*IntegerEntry3(Number of Time Steps)" 5)(cx-gui-do cx-activate-item "Mesh Motion*Table1*Table1(Time)*IntegerEntry3(Number of Time Steps)")')
setup2.SendCommand(Command='(cx-gui-do cx-set-integer-entry "Mesh Motion*Table1*Table1(Time)*IntegerEntry3(Number of Time Steps)" 6)(cx-gui-do cx-activate-item "Mesh Motion*Table1*Table1(Time)*IntegerEntry3(Number of Time Steps)")')
setup2.SendCommand(Command='(cx-gui-do cx-set-integer-entry "Mesh Motion*Table1*Table1(Time)*IntegerEntry3(Number of Time Steps)" 7)(cx-gui-do cx-activate-item "Mesh Motion*Table1*Table1(Time)*IntegerEntry3(Number of Time Steps)")')
setup2.SendCommand(Command='(cx-gui-do cx-set-integer-entry "Mesh Motion*Table1*Table1(Time)*IntegerEntry3(Number of Time Steps)" 6)(cx-gui-do cx-activate-item "Mesh Motion*Table1*Table1(Time)*IntegerEntry3(Number of Time Steps)")')
setup2.SendCommand(Command='(cx-gui-do cx-set-integer-entry "Mesh Motion*Table1*Table1(Time)*IntegerEntry3(Number of Time Steps)" 5)(cx-gui-do cx-activate-item "Mesh Motion*Table1*Table1(Time)*IntegerEntry3(Number of Time Steps)")')
setup2.SendCommand(Command='(cx-gui-do cx-set-integer-entry "Mesh Motion*Table1*Table1(Time)*IntegerEntry3(Number of Time Steps)" 4)(cx-gui-do cx-activate-item "Mesh Motion*Table1*Table1(Time)*IntegerEntry3(Number of Time Steps)")')
setup2.SendCommand(Command='(cx-gui-do cx-set-integer-entry "Mesh Motion*Table1*Table1(Time)*IntegerEntry3(Number of Time Steps)" 5)(cx-gui-do cx-activate-item "Mesh Motion*Table1*Table1(Time)*IntegerEntry3(Number of Time Steps)")')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Mesh Motion*PanelButtons*PushButton1(Apply)")')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Mesh Motion*PanelButtons*PushButton2(Close)")')
setup2.SendCommand(Command="(cx-use-window-id 1)(cx-set-camera-relative '(-0.000117465 0.00034158 -0.000342787) '(0 0 0) '(-0.17168 -0.342401 -0.283165) 0 0)(cx-gui-do cx-set-list-tree-selections \"NavigationPane*List_Tree1\" (list \"Solution|Initialization\"))")
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Initialization"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Initialization"))')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Solution Initialization*Table1*Frame8*PushButton1(Initialize)")')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "ToolBar*Workbench Tools*syncwb")(cx-gui-do cx-activate-item "Mesh and settings have changed!*PanelButtons*PushButton2(Cancel)")')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "ToolBar*Workbench Tools*fl_setup")')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuSetupCell*Reload")(cx-gui-do cx-activate-item "Question*OK")')
AnalysisSettings1.StepSize = "2E-08 [s]"
setup2.SendCommand(Command="(cx-gui-do cx-activate-item \"Information*OK\")(cx-use-window-id 1)(cx-set-camera-relative '(-6.28634e-07 2.302e-07 2.90784e-07) '(0 0 0) '(-0.00610024 -0.0054732 -0.0015716) 0 0)")
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "ToolBar*Front Faces Transparent*frontfacestransparent")')
setup2.SendCommand(Command="(cx-use-window-id 1)(cx-set-camera-relative '(-3.08306e-05 -8.80189e-05 0.000128432) '(0 0 0) '(0.00553572 0.0673454 0.10392) 0 0)(cx-use-window-id 1)(cx-set-camera-relative '(6.29307e-05 -0.000135076 6.67542e-05) '(0 0 0) '(0.0717725 0.0892567 0.115532) 0 0)(cx-gui-do cx-set-list-tree-selections \"NavigationPane*List_Tree1\" (list \"Setup|Models\"))(cx-use-window-id 1)(cx-set-camera-relative '(-0.000326667 -3.82107e-05 0.000169906) '(0 0 0) '(-0.144197 -0.0858551 0.00793353) 0 0)(cx-gui-do cx-set-list-tree-selections \"NavigationPane*List_Tree1\" (list \"Solution|Initialization\"))(cx-gui-do cx-set-list-tree-selections \"NavigationPane*List_Tree1\" (list \"Solution|Initialization\"))(cx-gui-do cx-list-tree-right-click \"NavigationPane*List_Tree1\" )(cx-gui-do cx-set-list-tree-selections \"NavigationPane*List_Tree1\" (list \"Solution|Run Calculation\"))(cx-gui-do cx-set-list-tree-selections \"NavigationPane*List_Tree1\" (list \"Solution|Run Calculation\"))")
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Run Calculation"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Run Calculation"))(cx-gui-do cx-set-integer-entry "Run Calculation*Table1*Table7(Time Advancement)*Table3(Parameters)*Table5*Table1*Table1*IntegerEntry1(Max Iterations/Time Step)" 20)(cx-gui-do cx-activate-item "Run Calculation*Table1*Table7(Time Advancement)*Table3(Parameters)*Table5*Table1*Table1*IntegerEntry1(Max Iterations/Time Step)")')
setup2.SendCommand(Command="(cx-use-window-id 1)(cx-set-camera-relative '(-1.40945e-05 0.00027186 -0.000203944) '(0 0 0) '(-0.047823 -0.163875 -0.220165) 0 0)")
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Run Calculation*Table1*Table1*Table3*PushButton2(Preview Mesh Motion)")')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Mesh Motion*PanelButtons*PushButton1(Apply)")')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Mesh Motion*PanelButtons*PushButton2(Close)")')
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Initialization"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Initialization"))')
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Initialization"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Initialization"))')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Solution Initialization*Table1*Frame8*PushButton1(Initialize)")')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "ToolBar*Workbench Tools*syncwb")')
solutionComponent1.Update(AllDependencies=True)
ClearMessages()
solutionComponent1.Clean()
solutionComponent1.Update(AllDependencies=True)
solutionComponent1.Clean()
AnalysisSettings1.StepSize = "1E-08 [s]"
fluentLauncherSettings1.SetEntityProperties(Properties=Set(EnvPath={}))
setup2.Edit()
setup2.SendCommand(Command="(cx-use-window-id 1)(cx-set-camera-relative '(8.61821e-07 -1.40073e-05 1.14007e-05) '(0 0 0) '(0.0330897 0.168705 0.377677) 0 0)(cx-gui-do cx-set-list-tree-selections \"NavigationPane*List_Tree1\" (list \"Setup|Boundary Conditions|Wall|inside_wall (wall, id=6)\"))(cx-gui-do cx-set-list-tree-selections \"NavigationPane*List_Tree1\" (list \"Setup|Boundary Conditions|Wall|inside_wall (wall, id=6)\"))(cx-gui-do cx-list-tree-right-click \"NavigationPane*List_Tree1\" )")
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuTree-inside_wall (wall, id=6)*Display")')
setup2.SendCommand(Command="(cx-use-window-id 1)(cx-set-camera-relative '(0.000333399 5.37314e-05 -0.000479462) '(0 0 0) '(-0.0257968 -0.0212017 0.286369) 0 0)(cx-use-window-id 1)(cx-set-camera-relative '(-0.000120112 -7.67258e-05 0.000292735) '(0 0 0) '(-0.107791 -0.113301 0.135786) 0 0)(cx-use-window-id 1)(cx-set-camera-relative '(5.07474e-05 -0.000660084 -3.25192e-05) '(0 0 0) '(0.43574 0.00310737 0.347269) 0 0)")
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "ToolBar*Workbench Tools*fl_setup")')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuSetupCell*Reload")(cx-gui-do cx-activate-item "Question*OK")')
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list ))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Dynamic Mesh"))')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "ToolBar*Workbench Tools*fl_setup")')
setup2.SendCommand(Command="(cx-gui-do cx-activate-item \"MenuBar*PopupMenuSetupCell*Import Settings\")(cx-gui-do cx-set-file-dialog-entries \"Select File\" '( \"settings\") \"Setting Files (*.set)\")(cx-gui-do cx-activate-item \"Question*OK\")")
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Reference Frames"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Methods"))')
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Methods"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Methods"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Dynamic Mesh"))')
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Dynamic Mesh"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Dynamic Mesh"))')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Dynamic Mesh*Table1*Table1*Table2*Table3*Table2(Options)*PushButton7(Settings)")')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Options*PanelButtons*PushButton2(Cancel)")')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Dynamic Mesh*Table1*Table1*Table2*Table3*PushButton3(Events)")')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Dynamic Mesh Events*PanelButtons*PushButton2(Cancel)")')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Dynamic Mesh*Table1*Table1*Table2*Table3*Table1(Mesh Methods)*PushButton5(Settings)")')
setup2.SendCommand(Command='(cx-gui-do cx-set-toggle-button2 "Mesh Method Settings*Frame1*Frame3(Remeshing)*Table1*Table1*ToggleBox1(Remeshing Methods)*CheckButton2(Local Face)" #t)(cx-gui-do cx-activate-item "Mesh Method Settings*Frame1*Frame3(Remeshing)*Table1*Table1*ToggleBox1(Remeshing Methods)*CheckButton2(Local Face)")(cx-gui-do cx-set-toggle-button2 "Mesh Method Settings*Frame1*Frame3(Remeshing)*Table1*Table1*ToggleBox1(Remeshing Methods)*CheckButton3(Region Face)" #t)(cx-gui-do cx-activate-item "Mesh Method Settings*Frame1*Frame3(Remeshing)*Table1*Table1*ToggleBox1(Remeshing Methods)*CheckButton3(Region Face)")(cx-gui-do cx-set-integer-entry "Mesh Method Settings*Frame1*Frame3(Remeshing)*Table1*Table1*Table2(Sizing Options)*IntegerEntry2(Resolution)" 8)(cx-gui-do cx-activate-item "Mesh Method Settings*Frame1*Frame3(Remeshing)*Table1*Table1*Table2(Sizing Options)*IntegerEntry2(Resolution)")')
setup2.SendCommand(Command='(cx-gui-do cx-set-integer-entry "Mesh Method Settings*Frame1*Frame3(Remeshing)*Table1*Table1*Table2(Sizing Options)*IntegerEntry2(Resolution)" 9)(cx-gui-do cx-activate-item "Mesh Method Settings*Frame1*Frame3(Remeshing)*Table1*Table1*Table2(Sizing Options)*IntegerEntry2(Resolution)")')
setup2.SendCommand(Command='(cx-gui-do cx-set-integer-entry "Mesh Method Settings*Frame1*Frame3(Remeshing)*Table1*Table1*Table2(Sizing Options)*IntegerEntry2(Resolution)" 10)(cx-gui-do cx-activate-item "Mesh Method Settings*Frame1*Frame3(Remeshing)*Table1*Table1*Table2(Sizing Options)*IntegerEntry2(Resolution)")')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Mesh Method Settings*PanelButtons*PushButton1(OK)")')
setup2.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Dynamic Mesh*Table1*Table1*Table2*List4(Dynamic Mesh Zones)\" '( 1))(cx-gui-do cx-activate-item \"Dynamic Mesh*Table1*Table1*Table2*List4(Dynamic Mesh Zones)\")(cx-gui-do cx-set-list-selections \"Dynamic Mesh*Table1*Table1*Table2*List4(Dynamic Mesh Zones)\" '( 0))(cx-gui-do cx-activate-item \"Dynamic Mesh*Table1*Table1*Table2*List4(Dynamic Mesh Zones)\")(cx-gui-do cx-set-list-tree-selections \"NavigationPane*List_Tree1\" (list \"Solution|Initialization\"))")
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Initialization"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Initialization"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Run Calculation"))')
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Run Calculation"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Run Calculation"))(cx-gui-do cx-set-integer-entry "Run Calculation*Table1*Table7(Time Advancement)*Table3(Parameters)*Table5*Table1*Table1*IntegerEntry1(Max Iterations/Time Step)" 30)(cx-gui-do cx-activate-item "Run Calculation*Table1*Table7(Time Advancement)*Table3(Parameters)*Table5*Table1*Table1*IntegerEntry1(Max Iterations/Time Step)")')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "ToolBar*Workbench Tools*fl_setup")')
setup2.SendCommand(Command="(cx-gui-do cx-activate-item \"MenuBar*PopupMenuSetupCell*Export Settings\")(cx-gui-do cx-set-file-dialog-entries \"Select File\" '( \"settings\") \"Setting Files (*.set)\")(cx-gui-do cx-activate-item \"Question*OK\")")
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "ToolBar*Workbench Tools*syncwb")')
solutionComponent1.Reset()
solutionComponent1.Update(AllDependencies=True)
Save(Overwrite=True)
solutionComponent1.Update(AllDependencies=True)
solution1.Edit()
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Wall|inside_wall (wall, id=6)"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Wall|inside_wall (wall, id=6)"))(cx-gui-do cx-list-tree-right-click "NavigationPane*List_Tree1" )')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuTree-inside_wall (wall, id=6)*Display")')
setup2.SendCommand(Command="(cx-use-window-id 1)(cx-set-camera-relative '(0.000347795 -0.000327062 -0.000130123) '(0 0 0) '(0.129287 0.216342 0.400879) 0 0)(cx-gui-do cx-set-list-tree-selections \"NavigationPane*List_Tree1\" (list \"Setup|General\"))(cx-gui-do cx-set-list-tree-selections \"NavigationPane*List_Tree1\" (list \"Setup|General\"))")
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|General"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|General"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|General"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Dynamic Mesh"))')
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Dynamic Mesh"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Dynamic Mesh"))')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Dynamic Mesh*Table1*Table1*Table2*Table3*Table1(Mesh Methods)*PushButton5(Settings)")')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Mesh Method Settings*PanelButtons*PushButton2(Cancel)")')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Dynamic Mesh*Table1*Table1*Table2*Table3*Table1(Mesh Methods)*PushButton5(Settings)")')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Mesh Method Settings*PanelButtons*PushButton2(Cancel)")')
setup2.SendCommand(Command='(cx-gui-do cx-set-toggle-button2 "Dynamic Mesh*Table1*Table1*Table2*Table3*Table1(Mesh Methods)*CheckButton2(Layering)" #t)(cx-gui-do cx-activate-item "Dynamic Mesh*Table1*Table1*Table2*Table3*Table1(Mesh Methods)*CheckButton2(Layering)")(cx-gui-do cx-set-toggle-button2 "Dynamic Mesh*Table1*Table1*Table2*Table3*Table1(Mesh Methods)*CheckButton3(Remeshing)" #f)(cx-gui-do cx-activate-item "Dynamic Mesh*Table1*Table1*Table2*Table3*Table1(Mesh Methods)*CheckButton3(Remeshing)")(cx-gui-do cx-set-toggle-button2 "Dynamic Mesh*Table1*Table1*Table2*Table3*Table1(Mesh Methods)*CheckButton1(Smoothing)" #f)(cx-gui-do cx-activate-item "Dynamic Mesh*Table1*Table1*Table2*Table3*Table1(Mesh Methods)*CheckButton1(Smoothing)")(cx-gui-do cx-set-toggle-button2 "Dynamic Mesh*Table1*Table1*Table2*Table3*Table1(Mesh Methods)*CheckButton1(Smoothing)" #t)(cx-gui-do cx-activate-item "Dynamic Mesh*Table1*Table1*Table2*Table3*Table1(Mesh Methods)*CheckButton1(Smoothing)")(cx-gui-do cx-set-toggle-button2 "Dynamic Mesh*Table1*Table1*Table2*Table3*Table2(Options)*CheckButton4(Implicit Update)" #f)(cx-gui-do cx-activate-item "Dynamic Mesh*Table1*Table1*Table2*Table3*Table2(Options)*CheckButton4(Implicit Update)")')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Dynamic Mesh*Table1*Table1*Table2*Table3*Table2(Options)*PushButton7(Settings)")')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Options*PanelButtons*PushButton2(Cancel)")')
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Run Calculation"))')
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Run Calculation"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Run Calculation"))')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "ToolBar*Workbench Tools*fl_setup")')
setup2.SendCommand(Command="(cx-gui-do cx-activate-item \"MenuBar*PopupMenuSetupCell*Export Settings\")(cx-gui-do cx-set-file-dialog-entries \"Select File\" '( \"settings\") \"Setting Files (*.set)\")(cx-gui-do cx-activate-item \"Question*OK\")")
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Dynamic Mesh"))')
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Dynamic Mesh"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Dynamic Mesh"))')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Dynamic Mesh*Table1*Table1*Table2*Table3*Table1(Mesh Methods)*PushButton5(Settings)")')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Mesh Method Settings*PanelButtons*PushButton1(OK)")')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "ToolBar*Workbench Tools*fl_setup")')
setup2.SendCommand(Command="(cx-gui-do cx-activate-item \"MenuBar*PopupMenuSetupCell*Export Settings\")(cx-gui-do cx-set-file-dialog-entries \"Select File\" '( \"settings\") \"Setting Files (*.set)\")(cx-gui-do cx-activate-item \"Question*OK\")")
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|General"))')
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|General"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|General"))')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "ToolBar*Workbench Tools*fl_setup")')
setup2.SendCommand(Command="(cx-use-window-id 1)(cx-set-camera-relative '(0.000124623 -0.000151831 -0.000321697) '(0 0 0) '(0.147579 0.0469181 0.00633036) 0 0)(cx-use-window-id 1)(cx-set-camera-relative '(3.71382e-06 -1.10812e-05 -4.37467e-05) '(0 0 0) '(0.00727253 0.00189471 0.00266284) 0 0)")
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "ToolBar*Workbench Tools*fl_setup")')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuSetupCell*Export Settings")')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "ToolBar*Workbench Tools*fl_setup")')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuSetupCell*Reload")(cx-gui-do cx-activate-item "Question*OK")')
setup2.SendCommand(Command="(cx-use-window-id 1)(cx-set-camera-relative '(-0.000321487 -0.000432595 0.000444869) '(0 0 0) '(0.288593 0.241463 0.264354) 0 0)(cx-gui-do cx-set-list-tree-selections \"NavigationPane*List_Tree1\" (list \"Setup|Dynamic Mesh\"))")
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Dynamic Mesh"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Dynamic Mesh"))(cx-gui-do cx-set-toggle-button2 "Dynamic Mesh*Table1*Table1*Table2*Table3*Table1(Mesh Methods)*CheckButton3(Remeshing)" #f)(cx-gui-do cx-activate-item "Dynamic Mesh*Table1*Table1*Table2*Table3*Table1(Mesh Methods)*CheckButton3(Remeshing)")(cx-gui-do cx-set-toggle-button2 "Dynamic Mesh*Table1*Table1*Table2*Table3*Table1(Mesh Methods)*CheckButton2(Layering)" #t)(cx-gui-do cx-activate-item "Dynamic Mesh*Table1*Table1*Table2*Table3*Table1(Mesh Methods)*CheckButton2(Layering)")')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Dynamic Mesh*Table1*Table1*Table2*Table3*Table1(Mesh Methods)*PushButton5(Settings)")')
setup2.SendCommand(Command='(cx-gui-do cx-set-toggle-button2 "Mesh Method Settings*Frame1*Frame2(Layering)*Table1*ToggleBox1(Options)*Ratio Based" #t)(cx-gui-do cx-activate-item "Mesh Method Settings*Frame1*Frame2(Layering)*Table1*ToggleBox1(Options)*Ratio Based")(cx-gui-do cx-set-toggle-button2 "Mesh Method Settings*Frame1*Frame2(Layering)*Table1*ToggleBox1(Options)*Height Based" #t)(cx-gui-do cx-activate-item "Mesh Method Settings*Frame1*Frame2(Layering)*Table1*ToggleBox1(Options)*Height Based")(cx-gui-do cx-activate-item "Mesh Method Settings*PanelButtons*PushButton1(OK)")')
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Reference Values"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Initialization"))')
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Initialization"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Initialization"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Run Calculation"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Run Calculation"))')
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Run Calculation"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Run Calculation"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Run Calculation"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Run Calculation"))')
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Run Calculation"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Run Calculation"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Initialization"))')
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Initialization"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Initialization"))')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Solution Initialization*Table1*Frame8*PushButton1(Initialize)")')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "ToolBar*Workbench Tools*fl_setup")')
setup2.SendCommand(Command="(cx-gui-do cx-activate-item \"MenuBar*PopupMenuSetupCell*Export Settings\")(cx-gui-do cx-set-file-dialog-entries \"Select File\" '( \"settings\") \"Setting Files (*.set)\")(cx-gui-do cx-activate-item \"Question*OK\")")
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "ToolBar*Workbench Tools*syncwb")')
solutionComponent1.Clean()
solutionComponent1.Update(AllDependencies=True)
solutionComponent1.Clean()
AnalysisSettings1.StepSize = "5E-09 [s]"
AnalysisSettings1.StepSize = "4E-09 [s]"
AnalysisSettings1.EndTime = "5E-08 [s]"
AnalysisSettings1.StepSize = "1E-09 [s]"
AnalysisSettings1.StepSize = "2E-09 [s]"
fluentLauncherSettings1.SetEntityProperties(Properties=Set(EnvPath={}))
setup2.Edit()
setup2.SendCommand(Command="(cx-use-window-id 1)(cx-set-camera-relative '(0.000446977 -0.000390823 -0.000443438) '(0 0 0) '(0.238326 0.154239 0.0645553) 0 0)")
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "ToolBar*Workbench Tools*fl_setup")')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuSetupCell*Reload")(cx-gui-do cx-activate-item "Question*OK")')
setup2.SendCommand(Command="(cx-use-window-id 1)(cx-set-camera-relative '(-7.11626e-05 0.000165678 -0.000266879) '(0 0 0) '(-0.136855 -0.231998 -0.107239) 0 0)(cx-gui-do cx-set-list-tree-selections \"NavigationPane*List_Tree1\" (list ))")
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Ribbon*Frame1*Frame2(Domain)*Table1*Table3(Mesh)*PushButton4(Check)")')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Ribbon*Frame1*Frame2(Domain)*Table1*Table3(Mesh)*PushButton4(Check)")')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Ribbon*Frame1*Frame2(Domain)*Table1*Table3(Mesh)*PushButton4(Check)")')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "ToolBar*Workbench Tools*fl_setup")')
setup2.SendCommand(Command="(cx-gui-do cx-activate-item \"MenuBar*PopupMenuSetupCell*Import Settings\")(cx-gui-do cx-set-file-dialog-entries \"Select File\" '( \"settings\") \"Setting Files (*.set)\")(cx-gui-do cx-activate-item \"Question*OK\")")
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Dynamic Mesh"))')
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Dynamic Mesh"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Dynamic Mesh"))')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Dynamic Mesh*Table1*Table1*Table2*Table3*Table1(Mesh Methods)*PushButton5(Settings)")')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Mesh Method Settings*PanelButtons*PushButton1(OK)")')
setup2.SendCommand(Command="(cx-use-window-id 1)(cx-set-camera-relative '(9.30355e-05 -1.99649e-05 -0.000214489) '(0 0 0) '(-0.0291381 -0.0541073 -0.00860494) 0 0)(cx-use-window-id 1)(cx-set-camera-relative '(0.000127026 -9.68552e-05 -0.000104931) '(0 0 0) '(0.00796682 0.0796129 0.0533102) 0 0)(cx-gui-do cx-set-list-tree-selections \"NavigationPane*List_Tree1\" (list \"Solution|Initialization\"))")
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Initialization"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Initialization"))')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Solution Initialization*Table1*Frame8*PushButton1(Initialize)")')
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Dynamic Mesh"))')
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Dynamic Mesh"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Dynamic Mesh"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Initialization"))')
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Initialization"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Initialization"))')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "ToolBar*Workbench Tools*syncwb")')
ClearMessages()
solutionComponent1.Update(AllDependencies=True)
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Dynamic Mesh"))')
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Dynamic Mesh"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Dynamic Mesh"))')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Dynamic Mesh*Table1*Table1*Table2*Table3*Table2(Options)*PushButton7(Settings)")')
setup2.SendCommand(Command="(cx-gui-do cx-set-real-entry-list \"Options*Frame1*Frame4(Contact Detection)*Table1*Table1*Table2*Table1*RealEntry1(Proximity Threshold)\" '( 1e-08))(cx-gui-do cx-activate-item \"Options*PanelButtons*PushButton1(OK)\")")
results1.Edit()
results1.SendCommand(Command="""VIEW:View 1
  Camera Mode = User Specified
  CAMERA:
    Option = Pivot Point and Quaternion
    Pivot Point = 0, 0, 1.45e-06
    Scale = 200088
    Pan = 0, 0
    Rotation Quaternion = 0.0177887, -0.997058, -0.0436953, -0.0605763
    
  END

END

> update
>centerview 1""")
setup2.SendCommand(Command='(cx-gui-do cx-set-toggle-button2 "Dynamic Mesh*Table1*Table1*Table2*Table3*Table2(Options)*CheckButton4(Implicit Update)" #f)(cx-gui-do cx-activate-item "Dynamic Mesh*Table1*Table1*Table2*Table3*Table2(Options)*CheckButton4(Implicit Update)")(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Results|Graphics|Contours|pressure-inside-wall"))')
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Results|Graphics|Contours|pressure-inside-wall"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Results|Graphics|Contours|pressure-inside-wall"))')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Contours*PanelButtons*PushButton1(OK)")')
setup2.SendCommand(Command="(cx-use-window-id 1)(cx-set-camera-relative '(0.000263128 -6.11362e-05 -0.00051891) '(0 0 0) '(-0.0660976 -0.053025 -0.00170994) 0 0)(cx-use-window-id 1)(cx-set-camera-relative '(-0.000852962 0.000349955 2.68617e-05) '(0 0 0) '(-0.258907 -0.724021 -0.0590856) 0 0)")
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Ribbon*Frame1*Frame2(Domain)*Table1*Table3(Mesh)*PushButton1(Display)")')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Mesh Display*PanelButtons*PushButton2(Cancel)")')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "ToolBar*Display Options Panel*fl_mesh_svg_graphics_toolbar")')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Mesh Display*Table1*Frame1*Frame4*PushButton1(Outline)")')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Mesh Display*PanelButtons*PushButton1(OK)")')
setup2.SendCommand(Command="(cx-use-window-id 1)(cx-set-camera-relative '(4.64859e-05 -3.76208e-06 0.000109239) '(0 0 0) '(-0.00174755 0.100172 -0.000974238) 0 0)(cx-gui-do cx-activate-item \"Mesh Display*PanelButtons*PushButton2(Cancel)\")")
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Results|Graphics|Contours|pressure-inside-wall"))')
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Results|Graphics|Contours|pressure-inside-wall"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Results|Graphics|Contours|pressure-inside-wall"))')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Contours*PanelButtons*PushButton1(OK)")')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Contours*Table1*Frame1*PushButton4(Colormap Options)")')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Colormap*PanelButtons*PushButton2(Cancel)")')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Contours*PanelButtons*PushButton2(Cancel)")')
setup2.SendCommand(Command="(cx-use-window-id 1)(cx-set-camera-relative '(-3.11694e-05 1.16133e-05 -2.28915e-05) '(0 0 0) '(-0.448749 -0.927292 0.273287) 0 0)")
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "ToolBar*Display Options*meshdisplayconfigurations")')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "ToolBar*Display Options*meshdisplayconfigurations")')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "ToolBar*Display Options*meshdisplayconfigurations")')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "ToolBar*Ruler Visibility*ruler")')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "ToolBar*Ruler Visibility*ruler")')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "ToolBar*Front Faces Transparent*frontfacestransparent")')
results1.Exit()
AnalysisSettings1.StepSize = "1E-09 [s]"
solutionComponent1.Clean()
solutionComponent2.Refresh()
solution1.Edit()
solutionComponent2.Refresh()
setup2.SendCommand(Command="(cx-use-window-id 1)(cx-set-camera-relative '(0.000331643 -0.000152809 -0.000466463) '(0 0 0) '(0.0352912 0.0206402 -0.00441229) 0 0)(cx-use-window-id 1)(cx-set-camera-relative '(-0.000397226 -0.000380235 0.000850196) '(0 0 0) '(0.474029 0.252485 0.306761) 0 0)(cx-use-window-id 1)(cx-set-camera-relative '(-0.000897023 -0.000641682 -0.000130521) '(0 0 0) '(-0.0570806 -0.118731 0.703166) 0 0)(cx-use-window-id 1)(cx-set-camera-relative '(-0.000528227 0.000371554 -0.000658235) '(0 0 0) '(0.0376306 -0.107567 0.151371) 0 0)(cx-use-window-id 1)(cx-set-camera-relative '(0.000398401 -0.000335989 0.000584989) '(0 0 0) '(0.221196 -0.0226181 -0.0083099) 0 0)(cx-use-window-id 1)(cx-set-camera-relative '(0.000656212 -3.17632e-05 0.000203666) '(0 0 0) '(-0.0295744 0.144756 -0.201828) 0 0)")
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "ToolBar*Workbench Tools*fl_setup")')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuSetupCell*Reload")(cx-gui-do cx-activate-item "Question*OK")')
setup2.SendCommand(Command="(cx-use-window-id 1)(cx-set-camera-relative '(0.000136877 -2.05648e-05 -0.000149218) '(0 0 0) '(0.00202277 0.00655973 0.00735217) 0 0)(cx-gui-do cx-set-list-tree-selections \"NavigationPane*List_Tree1\" (list \"Setup|Dynamic Mesh\"))")
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Dynamic Mesh"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Dynamic Mesh"))')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Dynamic Mesh*Table1*Table1*Table2*Table3*Table2(Options)*PushButton7(Settings)")')
setup2.SendCommand(Command="(cx-gui-do cx-set-real-entry-list \"Options*Frame1*Frame4(Contact Detection)*Table1*Table1*Table2*Table1*RealEntry1(Proximity Threshold)\" '( 1e-08))")
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Options*Frame1*Frame4(Contact Detection)*Table1*Table1*Table2*Table1*RealEntry1(Proximity Threshold)")')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Options*PanelButtons*PushButton1(OK)")')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "ToolBar*Workbench Tools*fl_setup")')
setup2.SendCommand(Command="(cx-gui-do cx-activate-item \"MenuBar*PopupMenuSetupCell*Export Settings\")(cx-gui-do cx-set-file-dialog-entries \"Select File\" '( \"settings\") \"Setting Files (*.set)\")(cx-gui-do cx-activate-item \"Question*OK\")")
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Run Calculation"))')
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Run Calculation"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup2.SendCommand(Command="(cx-gui-do cx-set-list-tree-selections \"NavigationPane*List_Tree1\" (list \"Solution|Run Calculation\"))(cx-gui-do cx-set-expression-entry \"Run Calculation*Table1*Table7(Time Advancement)*Table3(Parameters)*Table1*Table3*ExpressionEntry1(Time Step Size)\" '(\"1e-9\" . 0))(cx-gui-do cx-activate-item \"Run Calculation*Table1*Table7(Time Advancement)*Table3(Parameters)*Table1*Table3*ExpressionEntry1(Time Step Size)\")")
setup2.SendCommand(Command="(cx-gui-do cx-set-expression-entry \"Run Calculation*Table1*Table7(Time Advancement)*Table3(Parameters)*Table1*Table3*ExpressionEntry1(Time Step Size)\" '(\"1e-9\" . 0))(cx-gui-do cx-set-list-tree-selections \"NavigationPane*List_Tree1\" (list \"Solution|Initialization\"))")
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Initialization"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Initialization"))')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Solution Initialization*Table1*Frame8*PushButton1(Initialize)")')
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Run Calculation"))')
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Run Calculation"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Run Calculation"))')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "ToolBar*Workbench Tools*fl_setup")')
setup2.SendCommand(Command="(cx-gui-do cx-activate-item \"MenuBar*PopupMenuSetupCell*Export Settings\")(cx-gui-do cx-set-file-dialog-entries \"Select File\" '( \"settings\") \"Setting Files (*.set)\")(cx-gui-do cx-activate-item \"Question*OK\")")
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "ToolBar*Workbench Tools*syncwb")')
solutionComponent1.Update(AllDependencies=True)
ClearMessages()
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Ribbon*Frame1*Frame2(Domain)*Table1*Table3(Mesh)*PushButton4(Check)")')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuCheck*Perform Mesh Check")')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Ribbon*Frame1*Frame2(Domain)*Table1*Table3(Mesh)*PushButton4(Check)")')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuCheck*Repair Mesh...")')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Ribbon*Frame1*Frame2(Domain)*Table1*Table3(Mesh)*PushButton4(Check)")')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuCheck*Perform Mesh Check")')
setup2.SendCommand(Command="/mesh/repair-improve/allow-repair-at-boundaries yes")
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Ribbon*Frame1*Frame2(Domain)*Table1*Table3(Mesh)*PushButton4(Check)")')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuCheck*Repair Mesh...")')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Ribbon*Frame1*Frame2(Domain)*Table1*Table3(Mesh)*PushButton4(Check)")')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuCheck*Perform Mesh Check")')
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Results|Graphics|Mesh|mesh-1"))')
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Results|Graphics|Mesh|mesh-1"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Results|Graphics|Mesh|mesh-1"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Results|Graphics|Mesh|mesh-1"))')
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Results|Graphics|Mesh|mesh-1"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Results|Graphics|Mesh|mesh-1"))(cx-gui-do cx-activate-item "Mesh Display*PanelButtons*PushButton1(OK)")')
setup2.SendCommand(Command="(cx-use-window-id 1)(cx-set-camera-relative '(0.000444273 -0.000382025 -0.000448317) '(0 0 0) '(0.231184 0.145095 0.051117) 0 0)(cx-use-window-id 1)(cx-set-camera-relative '(1.64903e-05 -0.000340081 0.000225281) '(0 0 0) '(0.385036 0.0762271 0.0960064) 0 0)(cx-gui-do cx-activate-item \"Mesh Display*PanelButtons*PushButton2(Cancel)\")")
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Results|Graphics|Contours|pressure-inside-wall"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Results|Graphics|Contours|pressure-inside-wall"))')
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Results|Graphics|Contours|pressure-inside-wall"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Results|Graphics|Contours|pressure-inside-wall"))')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Contours*PanelButtons*PushButton1(OK)")')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Contours*PanelButtons*PushButton2(Cancel)")')
setup2.SendCommand(Command="(cx-use-window-id 1)(cx-set-camera-relative '(-0.000829732 0.000236943 -0.00050692) '(0 0 0) '(-0.389213 -1.02013 0.166347) 0 0)(cx-use-window-id 1)(cx-set-camera-relative '(0.000397457 -8.36042e-05 0.000511942) '(0 0 0) '(-0.0970796 0.447133 0.237427) 0 0)(cx-use-window-id 1)(cx-set-camera-relative '(0.000305981 -0.000814144 0.000421369) '(0 0 0) '(0.0934938 0.154694 0.441947) 0 0)(cx-use-window-id 1)(cx-set-camera-relative '(-0.000542541 4.73021e-05 5.47988e-05) '(0 0 0) '(-0.0730721 -0.106051 -0.529353) 0 0)(cx-use-window-id 1)(cx-set-camera-relative '(0.00116397 -0.000179651 -0.000933143) '(0 0 0) '(0.923624 -0.114737 1.18044) 0 0)(cx-use-window-id 1)(cx-set-camera-relative '(1.19582e-06 3.16922e-06 -2.65361e-05) '(0 0 0) '(0.0261513 -0.00254478 0.000935614) 0 0)(cx-gui-do cx-set-list-tree-selections \"NavigationPane*List_Tree1\" (list \"Results|Graphics|Vectors\"))(cx-gui-do cx-set-list-tree-selections \"NavigationPane*List_Tree1\" (list \"Results|Graphics|Contours|pressure-outside-wall\"))")
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Results|Graphics|Contours|pressure-outside-wall"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Results|Graphics|Contours|pressure-outside-wall"))')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Contours*PanelButtons*PushButton1(OK)")')
setup2.SendCommand(Command="(cx-use-window-id 1)(cx-set-camera-relative '(1.09074e-05 -2.12964e-05 5.33681e-06) '(0 0 0) '(0.370835 0.267804 0.318709) 0 0)")
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "ToolBar*Front Faces Transparent*frontfacestransparent")')
setup2.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Contours*Table1*Frame3*Frame2*List2(Surfaces)\" '( 0 1))(cx-gui-do cx-activate-item \"Contours*Table1*Frame3*Frame2*List2(Surfaces)\")(cx-gui-do cx-set-list-selections \"Contours*Table1*Frame3*Frame2*List2(Surfaces)\" '( 0))(cx-gui-do cx-activate-item \"Contours*Table1*Frame3*Frame2*List2(Surfaces)\")(cx-gui-do cx-activate-item \"Contours*PanelButtons*PushButton1(OK)\")")
setup2.SendCommand(Command="(cx-use-window-id 1)(cx-set-camera-relative '(-7.55251e-05 -0.000251714 0.00011257) '(0 0 0) '(-0.0481704 -0.0134951 0.391617) 0 0)(cx-gui-do cx-activate-item \"Contours*PanelButtons*PushButton2(Cancel)\")")
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Results|Graphics|Mesh|mesh-1"))')
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Results|Graphics|Mesh|mesh-1"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Results|Graphics|Mesh|mesh-1"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Results|Graphics|Mesh|mesh-1"))(cx-gui-do cx-activate-item "Mesh Display*PanelButtons*PushButton2(Cancel)")')
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Results|Graphics|Vectors"))')
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Results|Graphics|Vectors"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Results|Graphics|Vectors"))(cx-gui-do cx-activate-item "Vectors*PanelButtons*PushButton1(OK)")')
setup2.SendCommand(Command="(cx-use-window-id 1)(cx-set-camera-relative '(2.03736e-06 -1.94753e-05 1.28448e-05) '(0 0 0) '(0.24263 0.250049 0.367286) 0 0)")
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "ToolBar*View Tools*autoscale")')
setup2.SendCommand(Command="(cx-use-window-id 1)(cx-set-camera-relative '(-0.694853 1.56323 -1.17349) '(0 0 0) '(-0.70734 -0.693858 0.136896) 0 0)(cx-gui-do cx-set-toggle-button2 \"Vectors*Table1*Frame2*ToggleBox1(Options)*CheckButton4(Auto Scale)\" #f)(cx-gui-do cx-activate-item \"Vectors*Table1*Frame2*ToggleBox1(Options)*CheckButton4(Auto Scale)\")(cx-gui-do cx-activate-item \"Vectors*PanelButtons*PushButton1(OK)\")")
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "ToolBar*View Tools*autoscale")')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "ToolBar*View Tools*autoscale")')
setup2.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Vectors*Table1*Frame2*DropDownList2(Style)\" '( 4))")
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Vectors*Table1*Frame2*DropDownList2(Style)")')
setup2.SendCommand(Command='(cx-gui-do cx-set-toggle-button2 "Vectors*Table1*Frame2*ToggleBox1(Options)*CheckButton4(Auto Scale)" #t)(cx-gui-do cx-activate-item "Vectors*Table1*Frame2*ToggleBox1(Options)*CheckButton4(Auto Scale)")(cx-gui-do cx-activate-item "Vectors*PanelButtons*PushButton1(OK)")')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "ToolBar*View Tools*autoscale")')
setup2.SendCommand(Command="(cx-use-window-id 1)(cx-set-camera-relative '(-0.032366 -0.00189175 -0.00404985) '(0 0 0) '(0.0584478 -0.66668 -0.130594) 0 0)(cx-use-window-id 1)(cx-set-camera-relative '(-0.0208293 -0.0478686 -0.0280254) '(0 0 0) '(1.15136 -0.563201 0.051269) 0 0)(cx-use-window-id 1)(cx-set-camera-relative '(0.00515794 -0.00254928 -0.00420804) '(0 0 0) '(0.2522 0.121532 0.271583) 0 0)(cx-gui-do cx-set-toggle-button2 \"Vectors*Table1*Frame2*ToggleBox1(Options)*CheckButton5(Draw Mesh)\" #t)(cx-gui-do cx-activate-item \"Vectors*Table1*Frame2*ToggleBox1(Options)*CheckButton5(Draw Mesh)\")(cx-gui-do cx-set-list-selections \"Mesh Display*Table1*Frame3*List1(Surfaces)\" '( 0 1))(cx-gui-do cx-activate-item \"Mesh Display*Table1*Frame3*List1(Surfaces)\")(cx-gui-do cx-set-list-selections \"Mesh Display*Table1*Frame3*List1(Surfaces)\" '( 0))(cx-gui-do cx-activate-item \"Mesh Display*Table1*Frame3*List1(Surfaces)\")(cx-gui-do cx-activate-item \"Mesh Display*PanelButtons*PushButton1(OK)\")")
setup2.SendCommand(Command="(cx-use-window-id 1)(cx-set-camera-relative '(-9.00261e-05 0.000128201 -7.02945e-06) '(0 0 0) '(-0.0504339 -0.0478688 -0.141542) 0 0)(cx-gui-do cx-activate-item \"Mesh Display*PanelButtons*PushButton2(Cancel)\")")
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Vectors*PanelButtons*PushButton1(OK)")')
setup2.SendCommand(Command="(cx-use-window-id 1)(cx-set-camera-relative '(-0.00034401 -0.0001541 0.000533172) '(0 0 0) '(0.011088 0.0058853 0.00390372) 0 0)(cx-use-window-id 1)(cx-set-camera-relative '(9.54674e-05 -5.74657e-05 0.000694555) '(0 0 0) '(0.11452 0.0674205 -0.0360183) 0 0)(cx-use-window-id 1)(cx-set-camera-relative '(8.5509e-05 0.000567399 0.000327827) '(0 0 0) '(-0.305726 -0.0944963 0.282602) 0 0)(cx-use-window-id 1)(cx-set-camera-relative '(0.000512088 5.50381e-05 0.000237323) '(0 0 0) '(0.0111016 -0.0348414 -0.15603) 0 0)(cx-use-window-id 1)(cx-set-camera-relative '(-1.47632 1.02736 -0.57142) '(0 0 0) '(0.235481 0.184577 0.24082) 0 0)(cx-use-window-id 1)(cx-set-camera-relative '(-0.000384566 0.000221049 -0.000393285) '(0 0 0) '(-0.248556 0.256878 0.429798) 0 0)(cx-use-window-id 1)(cx-set-camera-relative '(2.84773e-05 -0.000312398 0.000187843) '(0 0 0) '(0.252407 -0.0724996 -0.190567) 0 0)(cx-use-window-id 1)(cx-set-camera-relative '(0.00058568 0.000157354 0.000241225) '(0 0 0) '(0.0651878 -0.172264 -0.321221) 0 0)(cx-use-window-id 1)(cx-set-camera-relative '(-0.000108403 0.000105082 -6.00831e-05) '(0 0 0) '(-0.144478 -0.0185305 0.154594) 0 0)(cx-gui-do cx-set-toggle-button2 \"Vectors*Table1*Frame2*ToggleBox1(Options)*CheckButton4(Auto Scale)\" #f)(cx-gui-do cx-activate-item \"Vectors*Table1*Frame2*ToggleBox1(Options)*CheckButton4(Auto Scale)\")(cx-gui-do cx-set-toggle-button2 \"Vectors*Table1*Frame2*ToggleBox1(Options)*CheckButton4(Auto Scale)\" #t)(cx-gui-do cx-activate-item \"Vectors*Table1*Frame2*ToggleBox1(Options)*CheckButton4(Auto Scale)\")(cx-gui-do cx-set-toggle-button2 \"Vectors*Table1*Frame2*ToggleBox1(Options)*CheckButton4(Auto Scale)\" #f)(cx-gui-do cx-activate-item \"Vectors*Table1*Frame2*ToggleBox1(Options)*CheckButton4(Auto Scale)\")")
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Vectors*Table1*Frame2*Table4*PushButton1(Vector Options)")')
setup2.SendCommand(Command='(cx-gui-do cx-set-toggle-button2 "Vector Options*Frame1*CheckButton2(Fixed Length)" #t)(cx-gui-do cx-activate-item "Vector Options*Frame1*CheckButton2(Fixed Length)")(cx-gui-do cx-activate-item "Vector Options*PanelButtons*PushButton1(Apply)")')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Vector Options*PanelButtons*PushButton2(Close)")')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Vectors*PanelButtons*PushButton1(OK)")')
setup2.SendCommand(Command="(cx-use-window-id 1)(cx-set-camera-relative '(-7.75433e-05 0.000365322 -0.000326378) '(0 0 0) '(-0.150542 0.283594 0.361905) 0 0)")
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "ToolBar*View Tools*autoscale")')
setup2.SendCommand(Command="(cx-use-window-id 1)(cx-set-camera-relative '(-4.81592 -1.77787 -5.99056) '(0 0 0) '(-0.462229 0.377147 0.15375) 0 0)(cx-use-window-id 1)(cx-set-camera-relative '(1.91631 1.96989 1.35562) '(0 0 0) '(-0.184822 -0.234708 -0.11138) 0 0)")
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Vectors*Table1*Frame2*Table4*PushButton1(Vector Options)")')
setup2.SendCommand(Command='(cx-gui-do cx-set-toggle-button2 "Vector Options*Frame1*CheckButton2(Fixed Length)" #f)(cx-gui-do cx-activate-item "Vector Options*Frame1*CheckButton2(Fixed Length)")(cx-gui-do cx-activate-item "Vector Options*PanelButtons*PushButton1(Apply)")')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Vector Options*PanelButtons*PushButton2(Close)")')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Vectors*PanelButtons*PushButton1(OK)")')
setup2.SendCommand(Command="(cx-gui-do cx-set-real-entry-list \"Vectors*Table1*Frame2*Frame3*RealEntry1(Scale)\" '( 1e-08))(cx-gui-do cx-activate-item \"Vectors*PanelButtons*PushButton1(OK)\")")
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "ToolBar*View Tools*autoscale")')
setup2.SendCommand(Command="(cx-use-window-id 1)(cx-set-camera-relative '(2.3929e-05 -0.000916853 0.000740192) '(0 0 0) '(0.481411 -0.645865 -0.929257) 0 0)(cx-use-window-id 1)(cx-set-camera-relative '(0.000197637 -0.000307303 1.26243e-05) '(0 0 0) '(0.185515 0.0963717 -0.263295) 0 0)(cx-use-window-id 1)(cx-set-camera-relative '(0.000370197 5.34901e-05 0.000107887) '(0 0 0) '(0.0812826 0.0386388 -0.0165772) 0 0)(cx-use-window-id 1)(cx-set-camera-relative '(-0.000508715 4.85335e-05 -0.000137543) '(0 0 0) '(-0.0576754 -0.0732081 0.175099) 0 0)(cx-gui-do cx-set-real-entry-list \"Vectors*Table1*Frame2*Frame3*RealEntry1(Scale)\" '( 1e-09))(cx-gui-do cx-activate-item \"Vectors*PanelButtons*PushButton1(OK)\")")
setup2.SendCommand(Command="(cx-use-window-id 1)(cx-set-camera-relative '(0.000516309 0.00033301 0.000210794) '(0 0 0) '(0.667886 0.877844 0.170824) 0 0)(cx-use-window-id 1)(cx-set-camera-relative '(-0.000996208 -2.34522e-05 -0.000985322) '(0 0 0) '(-0.983328 0.0087435 0.995176) 0 0)(cx-use-window-id 1)(cx-set-camera-relative '(0.000139749 -7.69685e-05 0.000486838) '(0 0 0) '(0.486522 0.0634174 -0.13432) 0 0)(cx-use-window-id 1)(cx-set-camera-relative '(-0.000103875 -0.000162723 -0.00057094) '(0 0 0) '(-0.599059 0.0754508 0.125903) 0 0)(cx-gui-do cx-activate-item \"Vectors*PanelButtons*PushButton2(Cancel)\")")
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Results|Graphics|Particle Tracks"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Results|Graphics|Particle Tracks"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Results|Graphics|Particle Tracks"))(cx-gui-do cx-list-tree-right-click "NavigationPane*List_Tree1" )')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuTree-Particle Tracks*New...")')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Particle Tracks*PanelButtons*PushButton2(Cancel)")')
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Results|Graphics|Pathlines"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Results|Graphics|Pathlines"))(cx-gui-do cx-list-tree-right-click "NavigationPane*List_Tree1" )')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuTree-Pathlines*New...")')
setup2.SendCommand(Command="(cx-gui-do cx-set-toggle-button2 \"Pathlines*Frame2*ToggleBox1(Options)*CheckButton1(Oil Flow)\" #t)(cx-gui-do cx-activate-item \"Pathlines*Frame2*ToggleBox1(Options)*CheckButton1(Oil Flow)\")(cx-gui-do cx-set-list-selections \"Pathlines*Frame3*List3(On Zone)\" '( 0))(cx-gui-do cx-activate-item \"Pathlines*Frame3*List3(On Zone)\")(cx-gui-do cx-activate-item \"Pathlines*PanelButtons*PushButton2(Cancel)\")")
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Results|Graphics|Particle Tracks"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Results|Graphics|Particle Tracks"))(cx-gui-do cx-list-tree-right-click "NavigationPane*List_Tree1" )')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuTree-Particle Tracks*New...")')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Particle Tracks*PanelButtons*PushButton2(Cancel)")')
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Results|Graphics"))(cx-gui-do cx-list-tree-right-click "NavigationPane*List_Tree1" )(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Results|Graphics|Mesh|mesh-1"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Results|Graphics|Mesh"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Results|Graphics|Mesh"))(cx-gui-do cx-list-tree-right-click "NavigationPane*List_Tree1" )')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuTree-Mesh*New...")')
setup2.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Mesh Display*Table1*Frame3*List1(Surfaces)\" '( 0 2))(cx-gui-do cx-activate-item \"Mesh Display*Table1*Frame3*List1(Surfaces)\")(cx-gui-do cx-set-list-selections \"Mesh Display*Table1*Frame3*List1(Surfaces)\" '( 0))(cx-gui-do cx-activate-item \"Mesh Display*Table1*Frame3*List1(Surfaces)\")(cx-gui-do cx-set-list-selections \"Mesh Display*Table1*Frame3*List1(Surfaces)\" '( 0 2))(cx-gui-do cx-activate-item \"Mesh Display*Table1*Frame3*List1(Surfaces)\")(cx-gui-do cx-activate-item \"Mesh Display*PanelButtons*PushButton1(OK)\")")
setup2.SendCommand(Command="(cx-use-window-id 1)(cx-set-camera-relative '(0.000289427 -0.000472603 0.000181486) '(0 0 0) '(0.233119 -0.0702422 -0.000201941) 0 0)")
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "ToolBar*Display Options Panel*fl_mesh_svg_graphics_toolbar")')
setup2.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Mesh Display*Table1*Frame3*List1(Surfaces)\" '( 0 2))(cx-gui-do cx-activate-item \"Mesh Display*Table1*Frame3*List1(Surfaces)\")(cx-gui-do cx-activate-item \"Mesh Display*PanelButtons*PushButton1(OK)\")")
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Mesh Display*PanelButtons*PushButton2(Cancel)")')
setup2.SendCommand(Command="(cx-use-window-id 1)")
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "ToolBar*Front Faces Transparent*frontfacestransparent")')
setup2.SendCommand(Command="(cx-use-window-id 1)(cx-set-camera-relative '(-0.000187328 0.00022355 -7.90482e-05) '(0 0 0) '(-0.0555381 -0.0985138 0.0037874) 0 0)")
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "ToolBar*Front Faces Transparent*frontfacestransparent")')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "ToolBar*Display Options Panel*fl_mesh_svg_graphics_toolbar")')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Mesh Display*PanelButtons*PushButton2(Cancel)")')
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Results|Surfaces"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Results|Surfaces"))(cx-gui-do cx-list-tree-right-click "NavigationPane*List_Tree1" )(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Cell Registers"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Results|Graphics|Mesh|mesh-2"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Results|Graphics|Mesh|mesh-2"))(cx-gui-do cx-list-tree-right-click "NavigationPane*List_Tree1" )')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuTree-mesh-2*Display")')
results1.Edit()
results1.SendCommand(Command=">centerview 1")
results1.SendCommand(Command="""VIEW:View 1
  Camera Mode = User Specified
  CAMERA:
    Option = Pivot Point and Quaternion
    Pivot Point = 0, 0, 1.45e-06
    Scale = 144057
    Pan = 0, 0
    Rotation Quaternion = 0.0457547, -0.813592, -0.0312982, -0.578805
    
  END

END

> update
> autolegend plot=/VOLUME RENDERING:Volume Rendering 1, view=VIEW:View 1""")
results1.SendCommand(Command="""VOLUME RENDERING:Volume Rendering 1
Apply Instancing Transform = On
Apply Texture = Off
Colour = 0.75, 0.75, 0.75
Colour Map = Default Colour Map
Colour Mode = Use Plot Variable
Colour Scale = Linear
Colour Variable = Pressure
Colour Variable Boundary Values = Conservative
Domain List = /DOMAIN GROUP:All Domains
Draw Faces = Off
Draw Lines = On
Instancing Transform = /DEFAULT INSTANCE TRANSFORM:Default Transform
Line Colour = 0, 0, 0
Line Colour Mode = Default
Line Width = 1
Max = 0.0 [Pa]
Min = 0.0 [Pa]
Range = Global
Render Edge Angle = 0 [degree]
Transparency = 0.2
Transparency Colour Map = Transparency
Variable = Pressure
Variable Boundary Values = Conservative
Volume Rendering Max = 0.0 [Pa]
Volume Rendering Min = 0.0 [Pa]
Volume Rendering Range = Global
Volume Rendering Scale = Linear
Volume Resolution = 20
  OBJECT VIEW TRANSFORM:
  Apply Reflection = Off
  Apply Rotation = Off
  Apply Scale = Off
  Apply Translation = Off
  Principal Axis = Z
  Reflection Plane Option = XY Plane
  Rotation Angle = 0.0 [degree]
  Rotation Axis From = 0 [m], 0 [m], 0 [m]
  Rotation Axis To = 0 [m], 0 [m], 0 [m]
  Rotation Axis Type = Principal Axis
  Scale Vector = 1 , 1 , 1 
  Translation Vector = 0 [m], 0 [m], 0 [m]
  X = 0.0 [m]
  Y = 0.0 [m]
  Z = 0.0 [m]
  END
END""")
results1.SendCommand(Command="> autolegend plot=/VECTOR:Vector 1, view=VIEW:View 1")
results1.SendCommand(Command=">highlight regionlist=/DATA READER/CASE:Case EM Transient/BOUNDARY:Default Boundary, domainlist=/DATA READER/CASE:Case FFF 1/DOMAIN:relay_enclosure")
results1.SendCommand(Command=">highlight regionlist=/DATA READER/CASE:Case FFF 1/BOUNDARY:inside_wall, domainlist=/DATA READER/CASE:Case EM Transient/DOMAIN:Default Domain")
results1.SendCommand(Command=">highlight regionlist=/DATA READER/CASE:Case FFF 1/BOUNDARY:inside_wall, domainlist=/DATA READER/CASE:Case EM Transient/DOMAIN:Default Domain")
results1.SendCommand(Command=">highlight regionlist=/DATA READER/CASE:Case FFF 1/BOUNDARY:inside_wall, domainlist=/DATA READER/CASE:Case EM Transient/DOMAIN:Default Domain")
results1.SendCommand(Command=">highlight regionlist=/DATA READER/CASE:Case FFF 1/BOUNDARY:inside_wall, domainlist=/DATA READER/CASE:Case EM Transient/DOMAIN:Default Domain")
results1.SendCommand(Command=">highlight regionlist=/DATA READER/CASE:Case FFF 1/BOUNDARY:inside_wall, domainlist=/DATA READER/CASE:Case EM Transient/DOMAIN:Default Domain")
results1.SendCommand(Command="""VECTOR:Vector 1
Apply Instancing Transform = On
Colour = 0.75, 0.75, 0.75
Colour Map = Default Colour Map
Colour Mode = Use Plot Variable
Colour Scale = Linear
Colour Variable = Velocity
Colour Variable Boundary Values = Conservative
Coord Frame = Global
Culling Mode = No Culling
Direction = X
Domain List = /DOMAIN GROUP:All Domains
Draw Faces = On
Draw Lines = Off
Instancing Transform = /DEFAULT INSTANCE TRANSFORM:Default Transform
Lighting = On
Line Width = 1
Location List = inside_wall
Locator Sampling Method = Vertex
Max = 0.0 [m s^-1]
Maximum Number of Items = 100
Min = 0.0 [m s^-1]
Normalized = Off
Number of Samples = 100
Projection Type = None
Random Seed = 1
Range = Global
Reduction Factor = 1.0
Reduction or Max Number = Reduction
Sample Spacing = 0.1
Sampling Aspect Ratio = 1
Sampling Grid Angle = 0 [degree]
Specular Lighting = On
Surface Drawing = Smooth Shading
Symbol = Line Arrow
Symbol Size = 1.0
Transparency = 0.0
Variable = Velocity
Variable Boundary Values = Conservative
  OBJECT VIEW TRANSFORM:
  Apply Reflection = Off
  Apply Rotation = Off
  Apply Scale = Off
  Apply Translation = Off
  Principal Axis = Z
  Reflection Plane Option = XY Plane
  Rotation Angle = 0.0 [degree]
  Rotation Axis From = 0 [m], 0 [m], 0 [m]
  Rotation Axis To = 0 [m], 0 [m], 0 [m]
  Rotation Axis Type = Principal Axis
  Scale Vector = 1 , 1 , 1 
  Translation Vector = 0 [m], 0 [m], 0 [m]
  X = 0.0 [m]
  Y = 0.0 [m]
  Z = 0.0 [m]
  END
END""")
results1.SendCommand(Command="""# Sending visibility action from ViewUtilities
>show /VECTOR:Vector 1, view=/VIEW:View 1""")
results1.SendCommand(Command=">highlight regionlist=/DATA READER/CASE:Case FFF 1/BOUNDARY:inside_wall, domainlist=/DATA READER/CASE:Case EM Transient/DOMAIN:Default Domain")
results1.SendCommand(Command=">centerview 1")
results1.SendCommand(Command=">centerview 1")
results1.SendCommand(Command=">centerview 1")
results1.SendCommand(Command=">centerview 1")
results1.SendCommand(Command=">centerview 1")
results1.SendCommand(Command="> delete /VECTOR:Vector 1")
results1.SendCommand(Command="> autolegend plot=/DATA READER/CASE:Case FFF 1/BOUNDARY:inside_wall, view=VIEW:View 1")
results1.SendCommand(Command="""DATA READER:
      CASE:Case FFF 1
    BOUNDARY:inside_wall
Apply Instancing Transform = On
Apply Texture = Off
Colour = 0.2, 0.5, 1
Colour Map = Default Colour Map
Colour Mode = Constant
Colour Scale = Linear
Colour Variable = Pressure
Colour Variable Boundary Values = Conservative
Culling Mode = No Culling
Draw Faces = On
Draw Lines = On
Instancing Transform = /DEFAULT INSTANCE TRANSFORM:Default Transform
Lighting = On
Line Colour = 0, 0, 0
Line Colour Mode = Default
Line Width = 1
Max = 0.0 [Pa]
Min = 0.0 [Pa]
Range = Global
Render Edge Angle = 0 [degree]
Specular Lighting = On
Surface Drawing = Smooth Shading
Transparency = 0.0
      OBJECT VIEW TRANSFORM:
      Apply Reflection = Off
      Apply Rotation = Off
      Apply Scale = Off
      Apply Translation = Off
      Principal Axis = Z
      Reflection Plane Option = XY Plane
      Rotation Angle = 0.0 [degree]
      Rotation Axis From = 0 [m], 0 [m], 0 [m]
      Rotation Axis To = 0 [m], 0 [m], 0 [m]
      Rotation Axis Type = Principal Axis
      Scale Vector = 1 , 1 , 1 
      Translation Vector = 0 [m], 0 [m], 0 [m]
      X = 0.0 [m]
      Y = 0.0 [m]
      Z = 0.0 [m]
      END
    END
  END
END
# Sending visibility action from ViewUtilities
>show /DATA READER/CASE:Case FFF 1/BOUNDARY:inside_wall, view=/VIEW:View 1""")
results1.SendCommand(Command=">centerview 1")
results1.SendCommand(Command=">centerview 1")
results1.SendCommand(Command=">centerview 1")
results1.SendCommand(Command="""VIEW:View 1
  Camera Mode = User Specified
  CAMERA:
    Option = Pivot Point and Quaternion
    Pivot Point = 0, 0, 1.45e-06
    Scale = 142619
    Pan = 0, 0
    Rotation Quaternion = -0.501084, 0.680481, 0.529241, 0.0760478
    
  END

END

> update
> autolegend plot=/VOLUME RENDERING:Volume Rendering 1, view=VIEW:View 1""")
results1.SendCommand(Command="""VOLUME RENDERING:Volume Rendering 1
Apply Instancing Transform = On
Apply Texture = Off
Colour = 0.75, 0.75, 0.75
Colour Map = Default Colour Map
Colour Mode = Use Plot Variable
Colour Scale = Linear
Colour Variable = Pressure
Colour Variable Boundary Values = Conservative
Culling Mode = No Culling
Domain List = /DOMAIN GROUP:All Domains
Draw Faces = On
Draw Lines = Off
Instancing Transform = /DEFAULT INSTANCE TRANSFORM:Default Transform
Lighting = Off
Max = 0.0 [Pa]
Min = 0.0 [Pa]
Range = Global
Specular Lighting = Off
Surface Drawing = Draw As Lines
Transparency = 0.2
Transparency Colour Map = Transparency
Variable = Pressure
Variable Boundary Values = Conservative
Volume Rendering Max = 0.0 [Pa]
Volume Rendering Min = 0.0 [Pa]
Volume Rendering Range = Global
Volume Rendering Scale = Linear
Volume Resolution = 20
  OBJECT VIEW TRANSFORM:
  Apply Reflection = Off
  Apply Rotation = Off
  Apply Scale = Off
  Apply Translation = Off
  Principal Axis = Z
  Reflection Plane Option = XY Plane
  Rotation Angle = 0.0 [degree]
  Rotation Axis From = 0 [m], 0 [m], 0 [m]
  Rotation Axis To = 0 [m], 0 [m], 0 [m]
  Rotation Axis Type = Principal Axis
  Scale Vector = 1 , 1 , 1 
  Translation Vector = 0 [m], 0 [m], 0 [m]
  X = 0.0 [m]
  Y = 0.0 [m]
  Z = 0.0 [m]
  END
END""")
results1.SendCommand(Command=">centerview 1")
results1.SendCommand(Command=">centerview 1")
results1.SendCommand(Command=">centerview 1")
results1.SendCommand(Command=">centerview 1")
results1.SendCommand(Command="""VOLUME RENDERING:Volume Rendering 1
Apply Instancing Transform = On
Apply Texture = Off
Colour = 0.75, 0.75, 0.75
Colour Map = Default Colour Map
Colour Mode = Use Plot Variable
Colour Scale = Linear
Colour Variable = Pressure
Colour Variable Boundary Values = Conservative
Culling Mode = No Culling
Domain List = /DOMAIN GROUP:All Domains
Draw Faces = On
Draw Lines = Off
Instancing Transform = /DEFAULT INSTANCE TRANSFORM:Default Transform
Lighting = Off
Max = 0.0 [Pa]
Min = 0.0 [Pa]
Range = Global
Specular Lighting = Off
Surface Drawing = Flat Shading
Transparency = 0.2
Transparency Colour Map = Transparency
Variable = Pressure
Variable Boundary Values = Conservative
Volume Rendering Max = 0.0 [Pa]
Volume Rendering Min = 0.0 [Pa]
Volume Rendering Range = Global
Volume Rendering Scale = Linear
Volume Resolution = 20
  OBJECT VIEW TRANSFORM:
  Apply Reflection = Off
  Apply Rotation = Off
  Apply Scale = Off
  Apply Translation = Off
  Principal Axis = Z
  Reflection Plane Option = XY Plane
  Rotation Angle = 0.0 [degree]
  Rotation Axis From = 0 [m], 0 [m], 0 [m]
  Rotation Axis To = 0 [m], 0 [m], 0 [m]
  Rotation Axis Type = Principal Axis
  Scale Vector = 1 , 1 , 1 
  Translation Vector = 0 [m], 0 [m], 0 [m]
  X = 0.0 [m]
  Y = 0.0 [m]
  Z = 0.0 [m]
  END
END""")
results1.SendCommand(Command=">centerview 1")
results1.Exit()
results1.Edit()
results1.SendCommand(Command="""VIEW:View 1
  Camera Mode = User Specified
  CAMERA:
    Option = Pivot Point and Quaternion
    Pivot Point = 0, 0, 1.45e-06
    Scale = 150166
    Pan = 0, 0
    Rotation Quaternion = -0.583916, 0.769311, 0.250225, 0.067894
    
  END

END

> update
> autolegend plot=/VECTOR:Vector 1, view=VIEW:View 1""")
results1.SendCommand(Command="> autolegend plot=/VOLUME RENDERING:Volume Rendering 1, view=VIEW:View 1")
results1.SendCommand(Command="""VOLUME RENDERING:Volume Rendering 1
Apply Instancing Transform = On
Apply Texture = Off
Colour = 0.75, 0.75, 0.75
Colour Map = Default Colour Map
Colour Mode = Use Plot Variable
Colour Scale = Linear
Colour Variable = Pressure
Colour Variable Boundary Values = Conservative
Domain List = /DOMAIN GROUP:All Domains
Draw Faces = Off
Draw Lines = On
Instancing Transform = /DEFAULT INSTANCE TRANSFORM:Default Transform
Line Colour = 0, 0, 0
Line Colour Mode = Default
Line Width = 1
Max = 0.0 [Pa]
Min = 0.0 [Pa]
Range = Global
Render Edge Angle = 0 [degree]
Transparency = 0.2
Transparency Colour Map = Transparency
Variable = Pressure
Variable Boundary Values = Conservative
Volume Rendering Max = 0.0 [Pa]
Volume Rendering Min = 0.0 [Pa]
Volume Rendering Range = Global
Volume Rendering Scale = Linear
Volume Resolution = 20
  OBJECT VIEW TRANSFORM:
  Apply Reflection = Off
  Apply Rotation = Off
  Apply Scale = Off
  Apply Translation = Off
  Principal Axis = Z
  Reflection Plane Option = XY Plane
  Rotation Angle = 0.0 [degree]
  Rotation Axis From = 0 [m], 0 [m], 0 [m]
  Rotation Axis To = 0 [m], 0 [m], 0 [m]
  Rotation Axis Type = Principal Axis
  Scale Vector = 1 , 1 , 1 
  Translation Vector = 0 [m], 0 [m], 0 [m]
  X = 0.0 [m]
  Y = 0.0 [m]
  Z = 0.0 [m]
  END
END""")
results1.SendCommand(Command="""VOLUME RENDERING:Volume Rendering 1
Apply Instancing Transform = On
Apply Texture = Off
Colour = 0.75, 0.75, 0.75
Colour Map = Default Colour Map
Colour Mode = Use Plot Variable
Colour Scale = Linear
Colour Variable = Pressure
Colour Variable Boundary Values = Conservative
Culling Mode = No Culling
Domain List = /DOMAIN GROUP:All Domains
Draw Faces = On
Draw Lines = Off
Instancing Transform = /DEFAULT INSTANCE TRANSFORM:Default Transform
Lighting = Off
Max = 0.0 [Pa]
Min = 0.0 [Pa]
Range = Global
Specular Lighting = Off
Surface Drawing = Draw As Points
Transparency = 0.2
Transparency Colour Map = Transparency
Variable = Pressure
Variable Boundary Values = Conservative
Volume Rendering Max = 0.0 [Pa]
Volume Rendering Min = 0.0 [Pa]
Volume Rendering Range = Global
Volume Rendering Scale = Linear
Volume Resolution = 20
  OBJECT VIEW TRANSFORM:
  Apply Reflection = Off
  Apply Rotation = Off
  Apply Scale = Off
  Apply Translation = Off
  Principal Axis = Z
  Reflection Plane Option = XY Plane
  Rotation Angle = 0.0 [degree]
  Rotation Axis From = 0 [m], 0 [m], 0 [m]
  Rotation Axis To = 0 [m], 0 [m], 0 [m]
  Rotation Axis Type = Principal Axis
  Scale Vector = 1 , 1 , 1 
  Translation Vector = 0 [m], 0 [m], 0 [m]
  X = 0.0 [m]
  Y = 0.0 [m]
  Z = 0.0 [m]
  END
END""")
results1.SendCommand(Command=">centerview 1")
results1.SendCommand(Command=">centerview 1")
results1.SendCommand(Command=">centerview 1")
results1.SendCommand(Command=">centerview 1")
results1.SendCommand(Command=">centerview 1")
results1.SendCommand(Command=">centerview 1")
results1.SendCommand(Command="""VOLUME RENDERING:Volume Rendering 1
Apply Instancing Transform = On
Apply Texture = Off
Colour = 0.75, 0.75, 0.75
Colour Map = Default Colour Map
Colour Mode = Use Plot Variable
Colour Scale = Linear
Colour Variable = Pressure
Colour Variable Boundary Values = Conservative
Culling Mode = No Culling
Domain List = /DOMAIN GROUP:All Domains
Draw Faces = On
Draw Lines = Off
Instancing Transform = /DEFAULT INSTANCE TRANSFORM:Default Transform
Lighting = Off
Max = 0.0 [Pa]
Min = 0.0 [Pa]
Range = Global
Specular Lighting = Off
Surface Drawing = Smooth Shading
Transparency = 0.2
Transparency Colour Map = Transparency
Variable = Pressure
Variable Boundary Values = Conservative
Volume Rendering Max = 0.0 [Pa]
Volume Rendering Min = 0.0 [Pa]
Volume Rendering Range = Global
Volume Rendering Scale = Linear
Volume Resolution = 20
  OBJECT VIEW TRANSFORM:
  Apply Reflection = Off
  Apply Rotation = Off
  Apply Scale = Off
  Apply Translation = Off
  Principal Axis = Z
  Reflection Plane Option = XY Plane
  Rotation Angle = 0.0 [degree]
  Rotation Axis From = 0 [m], 0 [m], 0 [m]
  Rotation Axis To = 0 [m], 0 [m], 0 [m]
  Rotation Axis Type = Principal Axis
  Scale Vector = 1 , 1 , 1 
  Translation Vector = 0 [m], 0 [m], 0 [m]
  X = 0.0 [m]
  Y = 0.0 [m]
  Z = 0.0 [m]
  END
END""")
results1.Exit()
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Dynamic Mesh"))')
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Dynamic Mesh"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Dynamic Mesh"))')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Dynamic Mesh*Table1*Table1*Table2*Table3*Table2(Options)*PushButton7(Settings)")')
setup2.SendCommand(Command="(cx-gui-do cx-set-real-entry-list \"Options*Frame1*Frame4(Contact Detection)*Table1*Table1*Table2*Table1*RealEntry1(Proximity Threshold)\" '( 1e-09))(cx-gui-do cx-activate-item \"Options*PanelButtons*PushButton1(OK)\")")
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Run Calculation"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Run Calculation"))')
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Run Calculation"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
solutionComponent1.Update(AllDependencies=True)
solutionComponent1.Update(AllDependencies=True)
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Run Calculation"))(cx-gui-do cx-set-integer-entry "Run Calculation*Table1*Table7(Time Advancement)*Table3(Parameters)*Table5*Table1*Table1*IntegerEntry1(Max Iterations/Time Step)" 20)(cx-gui-do cx-activate-item "Run Calculation*Table1*Table7(Time Advancement)*Table3(Parameters)*Table5*Table1*Table1*IntegerEntry1(Max Iterations/Time Step)")')
AnalysisSettings1.MaximumIteration = 10
AnalysisSettings1.StepSize = "4E-09 [s]"
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "ToolBar*Workbench Tools*fl_setup")')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuSetupCell*Reload")(cx-gui-do cx-activate-item "Question*OK")')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "ToolBar*Workbench Tools*fl_setup")')
setup2.SendCommand(Command="(cx-gui-do cx-activate-item \"MenuBar*PopupMenuSetupCell*Import Settings\")(cx-gui-do cx-set-file-dialog-entries \"Select File\" '( \"settings\") \"Setting Files (*.set)\")(cx-gui-do cx-activate-item \"Question*OK\")")
setup2.SendCommand(Command='(cx-gui-do cx-set-integer-entry "Run Calculation*Table1*Table7(Time Advancement)*Table3(Parameters)*Table5*Table1*Table1*IntegerEntry1(Max Iterations/Time Step)" 29)(cx-gui-do cx-activate-item "Run Calculation*Table1*Table7(Time Advancement)*Table3(Parameters)*Table5*Table1*Table1*IntegerEntry1(Max Iterations/Time Step)")')
setup2.SendCommand(Command='(cx-gui-do cx-set-integer-entry "Run Calculation*Table1*Table7(Time Advancement)*Table3(Parameters)*Table5*Table1*Table1*IntegerEntry1(Max Iterations/Time Step)" 15)(cx-gui-do cx-activate-item "Run Calculation*Table1*Table7(Time Advancement)*Table3(Parameters)*Table5*Table1*Table1*IntegerEntry1(Max Iterations/Time Step)")')
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Dynamic Mesh"))')
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Dynamic Mesh"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Dynamic Mesh"))')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Dynamic Mesh*Table1*Table1*Table2*Table3*Table1(Mesh Methods)*PushButton5(Settings)")')
setup2.SendCommand(Command='(cx-gui-do cx-set-toggle-button2 "Mesh Method Settings*Frame1*Frame1(Smoothing)*Table1*ToggleBox1(Method)*Spring/Laplace/Boundary Layer" #t)(cx-gui-do cx-activate-item "Mesh Method Settings*Frame1*Frame1(Smoothing)*Table1*ToggleBox1(Method)*Spring/Laplace/Boundary Layer")(cx-gui-do cx-set-toggle-button2 "Mesh Method Settings*Frame1*Frame1(Smoothing)*Table1*ToggleBox1(Method)*Diffusion" #t)(cx-gui-do cx-activate-item "Mesh Method Settings*Frame1*Frame1(Smoothing)*Table1*ToggleBox1(Method)*Diffusion")')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Mesh Method Settings*Frame1*Frame1(Smoothing)*Table1*Frame2*PushButton1(Advanced)")')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Mesh Smoothing Parameters*PanelButtons*PushButton2(Cancel)")')
setup2.SendCommand(Command='(cx-gui-do cx-set-toggle-button2 "Mesh Method Settings*Frame1*Frame1(Smoothing)*Table1*ToggleBox1(Method)*Spring/Laplace/Boundary Layer" #t)(cx-gui-do cx-activate-item "Mesh Method Settings*Frame1*Frame1(Smoothing)*Table1*ToggleBox1(Method)*Spring/Laplace/Boundary Layer")')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Mesh Method Settings*Frame1*Frame1(Smoothing)*Table1*Frame2*PushButton1(Advanced)")')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Mesh Smoothing Parameters*PanelButtons*PushButton1(OK)")')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Mesh Method Settings*PanelButtons*PushButton1(OK)")')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Dynamic Mesh*Table1*Table1*Table2*Table3*Table2(Options)*PushButton7(Settings)")')
setup2.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Options*Frame1*Frame4(Contact Detection)*Table1*Table1*Table1*List1(Face Zones)\" '( 0))(cx-gui-do cx-activate-item \"Options*Frame1*Frame4(Contact Detection)*Table1*Table1*Table1*List1(Face Zones)\")(cx-gui-do cx-activate-item \"Options*PanelButtons*PushButton1(OK)\")")
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Run Calculation"))')
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Run Calculation"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup2.SendCommand(Command="(cx-gui-do cx-set-list-tree-selections \"NavigationPane*List_Tree1\" (list \"Solution|Run Calculation\"))(cx-gui-do cx-set-expression-entry \"Run Calculation*Table1*Table7(Time Advancement)*Table3(Parameters)*Table1*Table3*ExpressionEntry1(Time Step Size)\" '(\"4e-9\" . 0))(cx-gui-do cx-activate-item \"Run Calculation*Table1*Table7(Time Advancement)*Table3(Parameters)*Table1*Table3*ExpressionEntry1(Time Step Size)\")")
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Initialization"))')
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Initialization"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Initialization"))')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Solution Initialization*Table1*Frame8*PushButton1(Initialize)")')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "ToolBar*Workbench Tools*fl_setup")')
setup2.SendCommand(Command="(cx-gui-do cx-activate-item \"MenuBar*PopupMenuSetupCell*Export Settings\")(cx-gui-do cx-set-file-dialog-entries \"Select File\" '( \"settings\") \"Setting Files (*.set)\")(cx-gui-do cx-activate-item \"Question*OK\")")
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "ToolBar*Workbench Tools*syncwb")')
solutionComponent1.Clean()
AnalysisSettings1.StepSize = "5E-09 [s]"
ClearMessages()
solutionComponent1.Update(AllDependencies=True)
system4 = GetSystem(Name="SYS 4")
model1 = system4.GetContainer(ComponentName="Model")
model1.Exit()
system5 = GetSystem(Name="SYS 3")
setup4 = system5.GetContainer(ComponentName="Setup")
setup4.Edit()
system6 = GetSystem(Name="SYS 6")
system6.Delete()
template1 = GetTemplate(
    TemplateName="Transient Structural",
    Solver="ANSYS")
engineeringDataComponent1 = system5.GetComponent(Name="Engineering Data")
geometryComponent1 = system5.GetComponent(Name="Geometry")
modelComponent1 = system5.GetComponent(Name="Model")
system7 = template1.CreateSystem(
    Name="",
    ComponentsToShare=[engineeringDataComponent1, geometryComponent1, modelComponent1],
    Position="Right",
    RelativeTo=system5)
system5.Delete()
system7.Delete()
AnalysisSettings1.Initialization = "RestartStepTime"
AnalysisSettings1.RestartStep = 1
AnalysisSettings1.RestartTime = "5E-09 [s]"
AnalysisSettings1.Initialization = "ProgramControlled"
AnalysisSettings1.Initialization = "RestartStepTime"
AnalysisSettings1.RestartStep = 3
AnalysisSettings1.RestartTime = "1.5000000000000002E-08 [s]"
AnalysisSettings1.Initialization = "ProgramControlled"
fluentLauncherSettings1.SetEntityProperties(Properties=Set(EnvPath={}))
setup2.Edit()
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Ribbon*Frame1*Frame2(Domain)*Table1*Table3(Mesh Models)*PushButton1(Dynamic Mesh)")')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Dynamic Mesh*Table1*Table1*Table2*Table7*PushButton2(Preview Mesh Motion)")')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Mesh Motion*PanelButtons*PushButton1(Apply)")')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Mesh Motion*PanelButtons*PushButton1(Apply)")')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Mesh Motion*PanelButtons*PushButton1(Apply)")')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Mesh Motion*PanelButtons*PushButton2(Close)")')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Ribbon*Frame1*Frame2(Domain)*Table1*Table3(Mesh)*PushButton4(Check)")')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuCheck*Perform Mesh Check")')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Dynamic Mesh*Table1*Table1*Table2*Table7*PushButton1(Display Zone Motion)")(cx-gui-do cx-activate-item "Warning*OK")')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Dynamic Mesh*Table1*Table1*Table2*Table3*Table1(Mesh Methods)*PushButton5(Settings)")')
setup2.SendCommand(Command='(cx-gui-do cx-set-toggle-button2 "Mesh Method Settings*Frame1*Frame2(Layering)*Table1*ToggleBox1(Options)*Ratio Based" #t)(cx-gui-do cx-activate-item "Mesh Method Settings*Frame1*Frame2(Layering)*Table1*ToggleBox1(Options)*Ratio Based")(cx-gui-do cx-set-toggle-button2 "Mesh Method Settings*Frame1*Frame2(Layering)*Table1*ToggleBox1(Options)*Height Based" #t)(cx-gui-do cx-activate-item "Mesh Method Settings*Frame1*Frame2(Layering)*Table1*ToggleBox1(Options)*Height Based")(cx-gui-do cx-activate-item "Mesh Method Settings*PanelButtons*PushButton2(Cancel)")')
setup2.SendCommand(Command='(cx-gui-do cx-set-toggle-button2 "Dynamic Mesh*Table1*Table1*Table2*Table3*Table1(Mesh Methods)*CheckButton2(Layering)" #f)(cx-gui-do cx-activate-item "Dynamic Mesh*Table1*Table1*Table2*Table3*Table1(Mesh Methods)*CheckButton2(Layering)")(cx-gui-do cx-set-toggle-button2 "Dynamic Mesh*Table1*Table1*Table2*Table3*Table1(Mesh Methods)*CheckButton3(Remeshing)" #t)(cx-gui-do cx-activate-item "Dynamic Mesh*Table1*Table1*Table2*Table3*Table1(Mesh Methods)*CheckButton3(Remeshing)")')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Dynamic Mesh*Table1*Table1*Table2*Table3*Table1(Mesh Methods)*PushButton5(Settings)")')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Mesh Method Settings*Frame1*Frame3(Remeshing)*Table1*Table3(Parameters)*Frame6*PushButton2(Mesh Scale Info)")')
setup2.SendCommand(Command="(cx-gui-do cx-set-real-entry-list \"Mesh Method Settings*Frame1*Frame3(Remeshing)*Table1*Table3(Parameters)*RealEntry1(Minimum Length Scale)\" '( 1e-08))(cx-gui-do cx-activate-item \"Mesh Method Settings*Frame1*Frame3(Remeshing)*Table1*Table3(Parameters)*RealEntry1(Minimum Length Scale)\")")
setup2.SendCommand(Command='(cx-gui-do cx-set-toggle-button2 "Mesh Method Settings*Frame1*Frame3(Remeshing)*Table1*Table1*ToggleBox1(Remeshing Methods)*CheckButton2(Local Face)" #f)(cx-gui-do cx-activate-item "Mesh Method Settings*Frame1*Frame3(Remeshing)*Table1*Table1*ToggleBox1(Remeshing Methods)*CheckButton2(Local Face)")(cx-gui-do cx-set-toggle-button2 "Mesh Method Settings*Frame1*Frame3(Remeshing)*Table1*Table1*ToggleBox1(Remeshing Methods)*CheckButton3(Region Face)" #f)(cx-gui-do cx-activate-item "Mesh Method Settings*Frame1*Frame3(Remeshing)*Table1*Table1*ToggleBox1(Remeshing Methods)*CheckButton3(Region Face)")(cx-gui-do cx-set-integer-entry "Mesh Method Settings*Frame1*Frame3(Remeshing)*Table1*Table3(Parameters)*IntegerEntry5(Size Remeshing Interval)" 4)(cx-gui-do cx-activate-item "Mesh Method Settings*Frame1*Frame3(Remeshing)*Table1*Table3(Parameters)*IntegerEntry5(Size Remeshing Interval)")')
setup2.SendCommand(Command='(cx-gui-do cx-set-integer-entry "Mesh Method Settings*Frame1*Frame3(Remeshing)*Table1*Table3(Parameters)*IntegerEntry5(Size Remeshing Interval)" 3)(cx-gui-do cx-activate-item "Mesh Method Settings*Frame1*Frame3(Remeshing)*Table1*Table3(Parameters)*IntegerEntry5(Size Remeshing Interval)")')
setup2.SendCommand(Command='(cx-gui-do cx-set-integer-entry "Mesh Method Settings*Frame1*Frame3(Remeshing)*Table1*Table3(Parameters)*IntegerEntry5(Size Remeshing Interval)" 2)(cx-gui-do cx-activate-item "Mesh Method Settings*Frame1*Frame3(Remeshing)*Table1*Table3(Parameters)*IntegerEntry5(Size Remeshing Interval)")')
setup2.SendCommand(Command='(cx-gui-do cx-set-integer-entry "Mesh Method Settings*Frame1*Frame3(Remeshing)*Table1*Table3(Parameters)*IntegerEntry5(Size Remeshing Interval)" 1)(cx-gui-do cx-activate-item "Mesh Method Settings*Frame1*Frame3(Remeshing)*Table1*Table3(Parameters)*IntegerEntry5(Size Remeshing Interval)")')
setup2.SendCommand(Command='(cx-gui-do cx-set-integer-entry "Mesh Method Settings*Frame1*Frame3(Remeshing)*Table1*Table3(Parameters)*IntegerEntry5(Size Remeshing Interval)" 0)(cx-gui-do cx-activate-item "Mesh Method Settings*Frame1*Frame3(Remeshing)*Table1*Table3(Parameters)*IntegerEntry5(Size Remeshing Interval)")')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Mesh Method Settings*PanelButtons*PushButton1(OK)")')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Mesh Scale Info*PanelButtons*PushButton1(Close)")')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Dynamic Mesh*Table1*Table1*Table2*Table3*Table1(Mesh Methods)*PushButton5(Settings)")')
setup2.SendCommand(Command='(cx-gui-do cx-set-integer-entry "Mesh Method Settings*Frame1*Frame3(Remeshing)*Table1*Table3(Parameters)*IntegerEntry5(Size Remeshing Interval)" 1)(cx-gui-do cx-activate-item "Mesh Method Settings*Frame1*Frame3(Remeshing)*Table1*Table3(Parameters)*IntegerEntry5(Size Remeshing Interval)")')
setup2.SendCommand(Command="(cx-gui-do cx-set-real-entry-list \"Mesh Method Settings*Frame1*Frame3(Remeshing)*Table1*Table3(Parameters)*RealEntry1(Minimum Length Scale)\" '( 1e-09))(cx-gui-do cx-activate-item \"Mesh Method Settings*Frame1*Frame3(Remeshing)*Table1*Table3(Parameters)*RealEntry1(Minimum Length Scale)\")")
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Mesh Method Settings*PanelButtons*PushButton1(OK)")')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Dynamic Mesh*Table1*Table1*Table2*Table3*Table2(Options)*PushButton7(Settings)")')
setup2.SendCommand(Command="(cx-gui-do cx-set-real-entry-list \"Options*Frame1*Frame4(Contact Detection)*Table1*Table1*Table2*Table1*RealEntry1(Proximity Threshold)\" '( 1e-09))(cx-gui-do cx-activate-item \"Options*PanelButtons*PushButton1(OK)\")")
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Dynamic Mesh*Table1*Table1*Table2*Table3*Table2(Options)*PushButton7(Settings)")')
setup2.SendCommand(Command='(cx-gui-do cx-set-toggle-button2 "Options*Frame1*Frame4(Contact Detection)*Table1*Table3(Contact Region)*Table1*CheckButton2(Flow Control)" #t)(cx-gui-do cx-activate-item "Options*Frame1*Frame4(Contact Detection)*Table1*Table3(Contact Region)*Table1*CheckButton2(Flow Control)")')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Options*Frame1*Frame4(Contact Detection)*Table1*Table3(Contact Region)*Table1*Table1*PushButton1(Settings)")')
setup2.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Flow Control Settings*Frame3*Table1(Contact Zone)*List1(Cell Zones)\" '( 0))(cx-gui-do cx-activate-item \"Flow Control Settings*Frame3*Table1(Contact Zone)*List1(Cell Zones)\")")
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Flow Control Settings*Frame3*Table1(Contact Zone)*Table2*Table2*PushButton1(Create Zone)")')
setup2.SendCommand(Command='(cx-gui-do cx-set-text-entry "Flow Control Settings*Frame3*Table1(Contact Zone)*Table2*Table1*TextEntry1(Flow Control Zone)" "flowctrl")')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Flow Control Settings*Frame3*Table1(Contact Zone)*Table2*Table2*PushButton1(Create Zone)")')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Fluid*PanelButtons*PushButton2(Cancel)")')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Flow Control Settings*PanelButtons*PushButton2(Cancel)")')
setup2.SendCommand(Command="(cx-gui-do cx-set-toggle-button2 \"Options*Frame1*Frame4(Contact Detection)*Table1*Table3(Contact Region)*Table1*CheckButton2(Flow Control)\" #f)(cx-gui-do cx-activate-item \"Options*Frame1*Frame4(Contact Detection)*Table1*Table3(Contact Region)*Table1*CheckButton2(Flow Control)\")(cx-gui-do cx-set-list-selections \"Options*Frame1*Frame4(Contact Detection)*Table1*Table1*Table1*List1(Face Zones)\" '())(cx-gui-do cx-activate-item \"Options*Frame1*Frame4(Contact Detection)*Table1*Table1*Table1*List1(Face Zones)\")(cx-gui-do cx-set-list-selections \"Options*Frame1*Frame4(Contact Detection)*Table1*Table1*Table1*List1(Face Zones)\" '( 0))(cx-gui-do cx-activate-item \"Options*Frame1*Frame4(Contact Detection)*Table1*Table1*Table1*List1(Face Zones)\")(cx-gui-do cx-activate-item \"Options*PanelButtons*PushButton1(OK)\")")
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "ToolBar*Workbench Tools*fl_setup")')
setup2.SendCommand(Command="(cx-gui-do cx-activate-item \"MenuBar*PopupMenuSetupCell*Export Settings\")(cx-gui-do cx-set-file-dialog-entries \"Select File\" '( \"settings\") \"Setting Files (*.set)\")(cx-gui-do cx-activate-item \"Question*OK\")")
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "ToolBar*Workbench Tools*fl_setup")')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuSetupCell*Reload")(cx-gui-do cx-activate-item "Question*OK")')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "ToolBar*Workbench Tools*fl_setup")')
setup2.SendCommand(Command="(cx-gui-do cx-activate-item \"MenuBar*PopupMenuSetupCell*Import Settings\")(cx-gui-do cx-set-file-dialog-entries \"Select File\" '( \"settings\") \"Setting Files (*.set)\")(cx-gui-do cx-activate-item \"Question*OK\")")
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Dynamic Mesh*Table1*Table1*Table2*Table3*Table1(Mesh Methods)*PushButton5(Settings)")')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Mesh Method Settings*Frame1*Frame3(Remeshing)*Table1*Table3(Parameters)*Frame6*PushButton2(Mesh Scale Info)")')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Mesh Scale Info*PanelButtons*PushButton1(Close)")')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Mesh Method Settings*PanelButtons*PushButton1(OK)")')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Dynamic Mesh*Table1*Table1*Table2*Table3*Table2(Options)*PushButton7(Settings)")')
setup2.SendCommand(Command="(cx-gui-do cx-set-real-entry-list \"Options*Frame1*Frame4(Contact Detection)*Table1*Table1*Table2*Table1*RealEntry1(Proximity Threshold)\" '( 2e-09))")
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Options*Frame1*Frame4(Contact Detection)*Table1*Table1*Table2*Table1*RealEntry1(Proximity Threshold)")')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Options*PanelButtons*PushButton1(OK)")')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "ToolBar*Workbench Tools*fl_setup")')
setup2.SendCommand(Command="(cx-gui-do cx-activate-item \"MenuBar*PopupMenuSetupCell*Export Settings\")(cx-gui-do cx-set-file-dialog-entries \"Select File\" '( \"settings\") \"Setting Files (*.set)\")(cx-gui-do cx-activate-item \"Question*OK\")")
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Run Calculation"))')
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Run Calculation"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup2.SendCommand(Command="(cx-gui-do cx-set-list-tree-selections \"NavigationPane*List_Tree1\" (list \"Solution|Run Calculation\"))(cx-gui-do cx-set-expression-entry \"Run Calculation*Table1*Table7(Time Advancement)*Table3(Parameters)*Table1*Table3*ExpressionEntry1(Time Step Size)\" '(\"4.1e-8\" . 0))(cx-gui-do cx-activate-item \"Run Calculation*Table1*Table7(Time Advancement)*Table3(Parameters)*Table1*Table3*ExpressionEntry1(Time Step Size)\")")
setup2.SendCommand(Command="(cx-gui-do cx-set-expression-entry \"Run Calculation*Table1*Table7(Time Advancement)*Table3(Parameters)*Table1*Table3*ExpressionEntry1(Time Step Size)\" '(\"4.1e-8\" . 0))(cx-gui-do cx-activate-item \"Run Calculation*Table1*Table7(Time Advancement)*Table3(Parameters)*Table1*Table3*ExpressionEntry1(Time Step Size)\")")
setup2.SendCommand(Command="(cx-gui-do cx-set-expression-entry \"Run Calculation*Table1*Table7(Time Advancement)*Table3(Parameters)*Table1*Table3*ExpressionEntry1(Time Step Size)\" '(\"1e-9\" . 0))(cx-gui-do cx-activate-item \"Run Calculation*Table1*Table7(Time Advancement)*Table3(Parameters)*Table1*Table3*ExpressionEntry1(Time Step Size)\")")
setup2.SendCommand(Command="(cx-gui-do cx-set-expression-entry \"Run Calculation*Table1*Table7(Time Advancement)*Table3(Parameters)*Table1*Table3*ExpressionEntry1(Time Step Size)\" '(\"1e-9\" . 0))(cx-gui-do cx-set-list-tree-selections \"NavigationPane*List_Tree1\" (list \"Solution|Initialization\"))")
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "ToolBar*Workbench Tools*fl_setup")')
setup2.SendCommand(Command="(cx-gui-do cx-activate-item \"MenuBar*PopupMenuSetupCell*Export Settings\")(cx-gui-do cx-set-file-dialog-entries \"Select File\" '( \"settings\") \"Setting Files (*.set)\")(cx-gui-do cx-activate-item \"Question*OK\")")
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Initialization"))')
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Initialization"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Initialization"))')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Solution Initialization*Table1*Frame8*PushButton1(Initialize)")')
AnalysisSettings1.StepSize = "1E-09 [s]"
solutionComponent1.Clean()
solutionComponent1.Update(AllDependencies=True)
model1.Exit()
Save(Overwrite=True)
