# encoding: utf-8
# 2020 R1
SetScriptVersion(Version="20.1.164")
system1 = GetSystem(Name="FFF")
setup1 = system1.GetContainer(ComponentName="Setup")
fluentLauncherSettings1 = setup1.GetFluentLauncherSettings()
fluentLauncherSettings1.SetEntityProperties(Properties=Set(EnvPath={}))
setup1.Edit()
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|General"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|General"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|General"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|General"))')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Ribbon*Frame1*Frame2(Domain)*Table1*Table3(Mesh)*PushButton4(Check)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuCheck*Perform Mesh Check")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Ribbon*Frame1*Frame2(Domain)*Table1*Table3(Mesh)*PushButton5(  Quality)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Ribbon*Frame1*Frame2(Domain)*Table1*Table3(Mesh)*PushButton5(  Quality)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|General"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Models"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Run Calculation"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Initialization"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Initialization"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Initialization"))')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Solution Initialization*Table1*Frame8*PushButton1(Initialize)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Run Calculation"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Run Calculation"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Run Calculation"))')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Run Calculation*Table1*Table1*Table1*PushButton1(Check Case)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Case Check*PanelButtons*PushButton2(Cancel)")')
ClearMessages()
system2 = GetSystem(Name="SYS 2")
setup2 = system2.GetContainer(ComponentName="Setup")
setup2.Edit()
Save(Overwrite=True)
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Dynamic Mesh"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Dynamic Mesh"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Dynamic Mesh"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Dynamic Mesh"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Dynamic Mesh"))(cx-gui-do cx-list-tree-right-click "NavigationPane*List_Tree1" )(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Dynamic Mesh"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Dynamic Mesh"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Dynamic Mesh"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Dynamic Mesh"))(cx-gui-do cx-set-toggle-button2 "Dynamic Mesh*Table1*Table1*Table2*Table3*Table1(Mesh Methods)*CheckButton3(Remeshing)" #t)(cx-gui-do cx-activate-item "Dynamic Mesh*Table1*Table1*Table2*Table3*Table1(Mesh Methods)*CheckButton3(Remeshing)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Dynamic Mesh*Table1*Table1*Table2*Table3*Table1(Mesh Methods)*PushButton5(Settings)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-integer-entry "Mesh Method Settings*Frame1*Frame3(Remeshing)*Table1*Table3(Parameters)*IntegerEntry5(Size Remeshing Interval)" 4)(cx-gui-do cx-activate-item "Mesh Method Settings*Frame1*Frame3(Remeshing)*Table1*Table3(Parameters)*IntegerEntry5(Size Remeshing Interval)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-integer-entry "Mesh Method Settings*Frame1*Frame3(Remeshing)*Table1*Table3(Parameters)*IntegerEntry5(Size Remeshing Interval)" 3)(cx-gui-do cx-activate-item "Mesh Method Settings*Frame1*Frame3(Remeshing)*Table1*Table3(Parameters)*IntegerEntry5(Size Remeshing Interval)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-integer-entry "Mesh Method Settings*Frame1*Frame3(Remeshing)*Table1*Table3(Parameters)*IntegerEntry5(Size Remeshing Interval)" 2)(cx-gui-do cx-activate-item "Mesh Method Settings*Frame1*Frame3(Remeshing)*Table1*Table3(Parameters)*IntegerEntry5(Size Remeshing Interval)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-integer-entry "Mesh Method Settings*Frame1*Frame3(Remeshing)*Table1*Table3(Parameters)*IntegerEntry5(Size Remeshing Interval)" 1)(cx-gui-do cx-activate-item "Mesh Method Settings*Frame1*Frame3(Remeshing)*Table1*Table3(Parameters)*IntegerEntry5(Size Remeshing Interval)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-toggle-button2 "Mesh Method Settings*Frame1*Frame3(Remeshing)*Table1*Table1*ToggleBox1(Remeshing Methods)*CheckButton1(Local Cell)" #t)(cx-gui-do cx-activate-item "Mesh Method Settings*Frame1*Frame3(Remeshing)*Table1*Table1*ToggleBox1(Remeshing Methods)*CheckButton1(Local Cell)")(cx-gui-do cx-set-toggle-button2 "Mesh Method Settings*Frame1*Frame3(Remeshing)*Table1*Table1*ToggleBox1(Remeshing Methods)*CheckButton1(Local Cell)" #f)(cx-gui-do cx-activate-item "Mesh Method Settings*Frame1*Frame3(Remeshing)*Table1*Table1*ToggleBox1(Remeshing Methods)*CheckButton1(Local Cell)")(cx-gui-do cx-set-toggle-button2 "Mesh Method Settings*Frame1*Frame3(Remeshing)*Table1*Table1*ToggleBox1(Remeshing Methods)*CheckButton1(Local Cell)" #t)(cx-gui-do cx-activate-item "Mesh Method Settings*Frame1*Frame3(Remeshing)*Table1*Table1*ToggleBox1(Remeshing Methods)*CheckButton1(Local Cell)")(cx-gui-do cx-activate-item "Mesh Method Settings*PanelButtons*PushButton1(OK)")')
system3 = GetSystem(Name="SC")
solutionComponent1 = system3.GetComponent(Name="Solution")
solutionComponent1.Update(AllDependencies=True)
setup1.SendCommand(Command='(cx-gui-do cx-set-toggle-button2 "Dynamic Mesh*Table1*Table1*Table2*Table3*Table1(Mesh Methods)*CheckButton1(Smoothing)" #f)(cx-gui-do cx-activate-item "Dynamic Mesh*Table1*Table1*Table2*Table3*Table1(Mesh Methods)*CheckButton1(Smoothing)")(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Initialization"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Initialization"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Initialization"))')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Solution Initialization*Table1*Frame8*PushButton1(Initialize)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Run Calculation"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Run Calculation"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Run Calculation"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Run Calculation"))')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Run Calculation*Table1*Table1*Table1*PushButton1(Check Case)")')
setup1.SendCommand(Command="(cx-gui-do cx-activate-item \"Case Check*PanelButtons*PushButton1(OK)\")(cx-gui-do cx-activate-item \"Question*OK\")(cx-gui-do cx-set-file-dialog-entries \"Select File\" '( \"FFF-1.cas.gz\") \"All Case Files (*.cas*)\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Case Check*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Run Calculation*Table1*Table1*Table1*PushButton1(Check Case)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Case Check*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Run Calculation*Table1*Table1*Table3*PushButton2(Preview Mesh Motion)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Mesh Motion*PanelButtons*PushButton1(Apply)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Mesh Motion*PanelButtons*PushButton2(Close)")')
ClearMessages()
solutionComponent1.Update(AllDependencies=True)
ClearMessages()
setupComponent1 = system1.GetComponent(Name="Setup")
setupComponent1.Update(AllDependencies=True)
solutionComponent1.Update(AllDependencies=True)
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|General"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|General"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|General"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|General"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|General"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|General"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|General"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|General"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|General"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Wall|inside_wall (wall, id=6)"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Wall|inside_wall (wall, id=6)"))(cx-gui-do cx-list-tree-right-click "NavigationPane*List_Tree1" )')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuTree-inside_wall (wall, id=6)*Display")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Run Calculation"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Run Calculation"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-tree-selections \"NavigationPane*List_Tree1\" (list \"Solution|Run Calculation\"))(cx-gui-do cx-set-expression-entry \"Run Calculation*Table1*Table7(Time Advancement)*Table3(Parameters)*Table1*Table3*ExpressionEntry1(Time Step Size)\" '(\"1e-9\" . 0))(cx-gui-do cx-activate-item \"Run Calculation*Table1*Table7(Time Advancement)*Table3(Parameters)*Table1*Table3*ExpressionEntry1(Time Step Size)\")")
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Mesh Interfaces"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Mesh Interfaces"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Mesh Interfaces"))(cx-gui-do cx-activate-item "Mesh Interfaces*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Dynamic Mesh"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Dynamic Mesh"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Dynamic Mesh"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Reference Values"))')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "ToolBar*Workbench Tools*fl_setup")')
setup1.SendCommand(Command="(cx-gui-do cx-activate-item \"MenuBar*PopupMenuSetupCell*Export Settings\")(cx-gui-do cx-set-file-dialog-entries \"Select File\" '( \"settings\") \"Setting Files (*.set)\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Dynamic Mesh*Table1*Table1*Table2*Table7*PushButton1(Display Zone Motion)")(cx-gui-do cx-activate-item "Warning*OK")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Dynamic Mesh*Table1*Table1*Table2*Table7*PushButton2(Preview Mesh Motion)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Mesh Motion*PanelButtons*PushButton1(Apply)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Mesh Motion*PanelButtons*PushButton1(Apply)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Mesh Motion*PanelButtons*PushButton2(Close)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "ToolBar*Workbench Tools*syncwb")')
solutionComponent1.Update(AllDependencies=True)
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Wall|inside_wall (wall, id=6)"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Wall|inside_wall (wall, id=6)"))(cx-gui-do cx-list-tree-right-click "NavigationPane*List_Tree1" )')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuTree-inside_wall (wall, id=6)*Display")')
setup1.SendCommand(Command="(cx-use-window-id 1)(cx-set-camera-relative '(-0.000390009 0.000286207 -0.000535084) '(0 0 0) '(-0.274577 -0.643563 -0.129284) 0 0)(cx-use-window-id 1)(cx-set-camera-relative '(-0.00018764 3.52319e-06 5.20491e-05) '(0 0 0) '(-0.00183988 -0.113331 0.00102746) 0 0)(cx-use-window-id 1)(cx-set-camera-relative '(9.80665e-05 2.50933e-06 1.28934e-05) '(0 0 0) '(0.00144106 0.0844749 -0.00279051) 0 0)(cx-use-window-id 1)(cx-set-camera-relative '(0.000162542 -1.63136e-05 -4.30617e-05) '(0 0 0) '(0.0308524 0.0950047 -0.0242981) 0 0)(cx-use-window-id 1)(cx-set-camera-relative '(0.000306275 -0.00148702 0.000724992) '(0 0 0) '(0.95734 0.730796 1.11807) 0 0)(cx-use-window-id 1)(cx-set-camera-relative '(0.000256529 0.000588923 -5.10139e-05) '(0 0 0) '(-0.366107 0.12671 -0.417062) 0 0)(cx-use-window-id 1)(cx-set-camera-relative '(-0.000151977 0.000267464 6.25749e-05) '(0 0 0) '(-0.478376 -0.225699 0.101549) 0 0)(cx-gui-do cx-set-list-tree-selections \"NavigationPane*List_Tree1\" (list \"Solution|Run Calculation\"))(cx-gui-do cx-set-list-tree-selections \"NavigationPane*List_Tree1\" (list \"Solution|Run Calculation\"))(cx-gui-do cx-set-list-tree-selections \"NavigationPane*List_Tree1\" (list \"Solution|Run Calculation\"))")
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Run Calculation"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Run Calculation"))')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Run Calculation*Table1*Table1*Table3*PushButton2(Preview Mesh Motion)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Mesh Motion*PanelButtons*PushButton1(Apply)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Error*OK")(cx-gui-do cx-activate-item "Mesh Motion*PanelButtons*PushButton2(Close)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Run Calculation*Table1*Table1*Table3*PushButton2(Preview Mesh Motion)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Mesh Motion*PanelButtons*PushButton2(Close)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "ToolBar*Workbench Tools*fl_setup")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuSetupCell*Import Settings")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "ToolBar*Workbench Tools*fl_setup")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuSetupCell*Clear generated Data")(cx-gui-do cx-activate-item "Question*OK")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Wall|inside_wall (wall, id=6)"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Wall|inside_wall (wall, id=6)"))(cx-gui-do cx-list-tree-right-click "NavigationPane*List_Tree1" )')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuTree-inside_wall (wall, id=6)*Display")')
setup1.SendCommand(Command="(cx-use-window-id 1)(cx-set-camera-relative '(0.000200325 -0.000310484 9.34944e-05) '(0 0 0) '(0.108633 0.201568 0.354561) 0 0)(cx-gui-do cx-set-list-tree-selections \"NavigationPane*List_Tree1\" (list \"Setup|Mesh Interfaces\"))(cx-gui-do cx-set-list-tree-selections \"NavigationPane*List_Tree1\" (list \"Setup|Dynamic Mesh\"))")
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Dynamic Mesh"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Dynamic Mesh"))(cx-gui-do cx-set-toggle-button2 "Dynamic Mesh*Table1*Table1*Table2*Table3*Table1(Mesh Methods)*CheckButton1(Smoothing)" #f)(cx-gui-do cx-activate-item "Dynamic Mesh*Table1*Table1*Table2*Table3*Table1(Mesh Methods)*CheckButton1(Smoothing)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Dynamic Mesh*Table1*Table1*Table2*Table3*Table1(Mesh Methods)*PushButton5(Settings)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-toggle-button2 "Mesh Method Settings*Frame1*Frame3(Remeshing)*Table1*Table1*ToggleBox1(Remeshing Methods)*CheckButton1(Local Cell)" #f)(cx-gui-do cx-activate-item "Mesh Method Settings*Frame1*Frame3(Remeshing)*Table1*Table1*ToggleBox1(Remeshing Methods)*CheckButton1(Local Cell)")(cx-gui-do cx-set-toggle-button2 "Mesh Method Settings*Frame1*Frame3(Remeshing)*Table1*Table1*Table2(Sizing Options)*CheckButton1(Sizing Function)" #t)(cx-gui-do cx-activate-item "Mesh Method Settings*Frame1*Frame3(Remeshing)*Table1*Table1*Table2(Sizing Options)*CheckButton1(Sizing Function)")(cx-gui-do cx-set-integer-entry "Mesh Method Settings*Frame1*Frame3(Remeshing)*Table1*Table1*Table2(Sizing Options)*IntegerEntry2(Resolution)" 0)(cx-gui-do cx-activate-item "Mesh Method Settings*Frame1*Frame3(Remeshing)*Table1*Table1*Table2(Sizing Options)*IntegerEntry2(Resolution)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-integer-entry "Mesh Method Settings*Frame1*Frame3(Remeshing)*Table1*Table1*Table2(Sizing Options)*IntegerEntry2(Resolution)" 1)(cx-gui-do cx-activate-item "Mesh Method Settings*Frame1*Frame3(Remeshing)*Table1*Table1*Table2(Sizing Options)*IntegerEntry2(Resolution)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-integer-entry "Mesh Method Settings*Frame1*Frame3(Remeshing)*Table1*Table1*Table2(Sizing Options)*IntegerEntry2(Resolution)" 2)(cx-gui-do cx-activate-item "Mesh Method Settings*Frame1*Frame3(Remeshing)*Table1*Table1*Table2(Sizing Options)*IntegerEntry2(Resolution)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-integer-entry "Mesh Method Settings*Frame1*Frame3(Remeshing)*Table1*Table1*Table2(Sizing Options)*IntegerEntry2(Resolution)" 3)(cx-gui-do cx-activate-item "Mesh Method Settings*Frame1*Frame3(Remeshing)*Table1*Table1*Table2(Sizing Options)*IntegerEntry2(Resolution)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-integer-entry "Mesh Method Settings*Frame1*Frame3(Remeshing)*Table1*Table1*Table2(Sizing Options)*IntegerEntry2(Resolution)" 4)(cx-gui-do cx-activate-item "Mesh Method Settings*Frame1*Frame3(Remeshing)*Table1*Table1*Table2(Sizing Options)*IntegerEntry2(Resolution)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-integer-entry "Mesh Method Settings*Frame1*Frame3(Remeshing)*Table1*Table1*Table2(Sizing Options)*IntegerEntry2(Resolution)" 5)(cx-gui-do cx-activate-item "Mesh Method Settings*Frame1*Frame3(Remeshing)*Table1*Table1*Table2(Sizing Options)*IntegerEntry2(Resolution)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-integer-entry "Mesh Method Settings*Frame1*Frame3(Remeshing)*Table1*Table1*Table2(Sizing Options)*IntegerEntry2(Resolution)" 6)(cx-gui-do cx-activate-item "Mesh Method Settings*Frame1*Frame3(Remeshing)*Table1*Table1*Table2(Sizing Options)*IntegerEntry2(Resolution)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-integer-entry "Mesh Method Settings*Frame1*Frame3(Remeshing)*Table1*Table1*Table2(Sizing Options)*IntegerEntry2(Resolution)" 7)(cx-gui-do cx-activate-item "Mesh Method Settings*Frame1*Frame3(Remeshing)*Table1*Table1*Table2(Sizing Options)*IntegerEntry2(Resolution)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-integer-entry "Mesh Method Settings*Frame1*Frame3(Remeshing)*Table1*Table1*Table2(Sizing Options)*IntegerEntry2(Resolution)" 8)(cx-gui-do cx-activate-item "Mesh Method Settings*Frame1*Frame3(Remeshing)*Table1*Table1*Table2(Sizing Options)*IntegerEntry2(Resolution)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-integer-entry "Mesh Method Settings*Frame1*Frame3(Remeshing)*Table1*Table1*Table2(Sizing Options)*IntegerEntry2(Resolution)" 9)(cx-gui-do cx-activate-item "Mesh Method Settings*Frame1*Frame3(Remeshing)*Table1*Table1*Table2(Sizing Options)*IntegerEntry2(Resolution)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-integer-entry "Mesh Method Settings*Frame1*Frame3(Remeshing)*Table1*Table1*Table2(Sizing Options)*IntegerEntry2(Resolution)" 8)(cx-gui-do cx-activate-item "Mesh Method Settings*Frame1*Frame3(Remeshing)*Table1*Table1*Table2(Sizing Options)*IntegerEntry2(Resolution)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-integer-entry "Mesh Method Settings*Frame1*Frame3(Remeshing)*Table1*Table1*Table2(Sizing Options)*IntegerEntry2(Resolution)" 7)(cx-gui-do cx-activate-item "Mesh Method Settings*Frame1*Frame3(Remeshing)*Table1*Table1*Table2(Sizing Options)*IntegerEntry2(Resolution)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-integer-entry "Mesh Method Settings*Frame1*Frame3(Remeshing)*Table1*Table1*Table2(Sizing Options)*IntegerEntry2(Resolution)" 6)(cx-gui-do cx-activate-item "Mesh Method Settings*Frame1*Frame3(Remeshing)*Table1*Table1*Table2(Sizing Options)*IntegerEntry2(Resolution)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-toggle-button2 "Mesh Method Settings*Frame1*Frame3(Remeshing)*Table1*Table1*Table2(Sizing Options)*CheckButton1(Sizing Function)" #f)(cx-gui-do cx-activate-item "Mesh Method Settings*Frame1*Frame3(Remeshing)*Table1*Table1*Table2(Sizing Options)*CheckButton1(Sizing Function)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Mesh Method Settings*Frame1*Frame3(Remeshing)*Table1*Table3(Parameters)*Frame6*PushButton2(Mesh Scale Info)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-real-entry-list \"Mesh Method Settings*Frame1*Frame3(Remeshing)*Table1*Table3(Parameters)*RealEntry1(Minimum Length Scale)\" '( 1e-08))(cx-gui-do cx-activate-item \"Mesh Method Settings*Frame1*Frame3(Remeshing)*Table1*Table3(Parameters)*RealEntry1(Minimum Length Scale)\")")
setup1.SendCommand(Command="(cx-gui-do cx-set-real-entry-list \"Mesh Method Settings*Frame1*Frame3(Remeshing)*Table1*Table3(Parameters)*RealEntry2(Maximum Length Scale)\" '( 1e-06))(cx-gui-do cx-activate-item \"Mesh Method Settings*PanelButtons*PushButton1(OK)\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Mesh Scale Info*PanelButtons*PushButton1(Close)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "ToolBar*Workbench Tools*fl_setup")')
setup1.SendCommand(Command="(cx-gui-do cx-activate-item \"MenuBar*PopupMenuSetupCell*Export Settings\")(cx-gui-do cx-set-file-dialog-entries \"Select File\" '( \"settings\") \"Setting Files (*.set)\")(cx-gui-do cx-activate-item \"Question*OK\")")
ClearMessages()
solutionComponent1.Update(AllDependencies=True)
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Initialization"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Initialization"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Initialization"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Initialization"))')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Solution Initialization*Table1*Frame8*PushButton1(Initialize)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Run Calculation"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Run Calculation"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Run Calculation"))')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Run Calculation*Table1*Table1*Table3*PushButton2(Preview Mesh Motion)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Mesh Motion*PanelButtons*PushButton1(Apply)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Mesh Motion*PanelButtons*PushButton2(Close)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Run Calculation*Table1*Table1*Table1*PushButton1(Check Case)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-toggle-button2 \"Case Check*Table1*Frame1*Frame2(Models)*Table1*Frame1(Automatic Implementation)*Table1*CheckButton3\" #f)(cx-gui-do cx-activate-item \"Case Check*Table1*Frame1*Frame2(Models)*Table1*Frame1(Automatic Implementation)*Table1*CheckButton3\")(cx-gui-do cx-set-toggle-button2 \"Case Check*Table1*Frame1*Frame2(Models)*Table1*Frame1(Automatic Implementation)*Table1*CheckButton3\" #t)(cx-gui-do cx-activate-item \"Case Check*Table1*Frame1*Frame2(Models)*Table1*Frame1(Automatic Implementation)*Table1*CheckButton3\")(cx-gui-do cx-activate-item \"Case Check*PanelButtons*PushButton1(OK)\")(cx-gui-do cx-activate-item \"Question*OK\")(cx-gui-do cx-set-file-dialog-entries \"Select File\" '( \"C:/Users/Akash Levy/Documents/NEM-Relay-CAD/ansys/relay_files/dp0/FFF-1/MECH/FFF-1.2.cas\") \"All Case Files (*.cas*)\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Case Check*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Ribbon*Frame1*Frame2(Domain)*Table1*Table3(Mesh)*PushButton4(Check)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuCheck*Perform Mesh Check")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Run Calculation*Table1*Table1*Table1*PushButton1(Check Case)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Case Check*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Run Calculation*Table1*Table1*Table3*PushButton2(Preview Mesh Motion)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Mesh Motion*PanelButtons*PushButton4(Apply)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Mesh Motion*PanelButtons*PushButton2(Close)")')
ClearMessages()
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Run Calculation*Table1*Table1*Table3*PushButton2(Preview Mesh Motion)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Mesh Motion*PanelButtons*PushButton1(Apply)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Mesh Motion*PanelButtons*PushButton2(Close)")')
solutionComponent1.Update(AllDependencies=True)
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Initialization"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Initialization"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Initialization"))')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Solution Initialization*Table1*Frame8*PushButton1(Initialize)")(cx-gui-do cx-activate-item "Question*OK")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Run Calculation"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Run Calculation"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Run Calculation"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Run Calculation"))')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Run Calculation*Table1*Table1*Table3*PushButton2(Preview Mesh Motion)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Mesh Motion*PanelButtons*PushButton2(Close)")')
ClearMessages()
solutionComponent1.Update(AllDependencies=True)
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "ToolBar*Workbench Tools*syncwb")')
ClearMessages()
solutionComponent1.Update(AllDependencies=True)
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "ToolBar*Workbench Tools*fl_setup")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuSetupCell*Reset")(cx-gui-do cx-activate-item "Question*OK")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "ToolBar*Workbench Tools*fl_setup")')
setup1.SendCommand(Command="(cx-gui-do cx-activate-item \"MenuBar*PopupMenuSetupCell*Import Settings\")(cx-gui-do cx-set-file-dialog-entries \"Select File\" '( \"settings\") \"All Files (*)\")(cx-gui-do cx-activate-item \"Question*OK\")")
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Initialization"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Initialization"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Initialization"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Wall|inside_wall (wall, id=6)"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Wall|inside_wall (wall, id=6)"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Wall|inside_wall (wall, id=6)"))(cx-gui-do cx-list-tree-right-click "NavigationPane*List_Tree1" )')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuTree-inside_wall (wall, id=6)*Display")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Initialization"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Initialization"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Initialization"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Reference Values"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Dynamic Mesh"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Dynamic Mesh"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Dynamic Mesh"))(cx-gui-do cx-set-toggle-button2 "Dynamic Mesh*Table1*Table1*Table2*Table3*Table1(Mesh Methods)*CheckButton1(Smoothing)" #t)(cx-gui-do cx-activate-item "Dynamic Mesh*Table1*Table1*Table2*Table3*Table1(Mesh Methods)*CheckButton1(Smoothing)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Dynamic Mesh*Table1*Table1*Table2*Table3*Table1(Mesh Methods)*PushButton5(Settings)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-toggle-button2 "Mesh Method Settings*Frame1*Frame3(Remeshing)*Table1*Table1*ToggleBox1(Remeshing Methods)*CheckButton1(Local Cell)" #t)(cx-gui-do cx-activate-item "Mesh Method Settings*Frame1*Frame3(Remeshing)*Table1*Table1*ToggleBox1(Remeshing Methods)*CheckButton1(Local Cell)")(cx-gui-do cx-set-toggle-button2 "Mesh Method Settings*Frame1*Frame3(Remeshing)*Table1*Table1*ToggleBox1(Remeshing Methods)*CheckButton1(Local Cell)" #f)(cx-gui-do cx-activate-item "Mesh Method Settings*Frame1*Frame3(Remeshing)*Table1*Table1*ToggleBox1(Remeshing Methods)*CheckButton1(Local Cell)")(cx-gui-do cx-set-toggle-button2 "Mesh Method Settings*Frame1*Frame3(Remeshing)*Table1*Table1*ToggleBox1(Remeshing Methods)*CheckButton1(Local Cell)" #t)(cx-gui-do cx-activate-item "Mesh Method Settings*Frame1*Frame3(Remeshing)*Table1*Table1*ToggleBox1(Remeshing Methods)*CheckButton1(Local Cell)")(cx-gui-do cx-set-toggle-button2 "Mesh Method Settings*Frame1*Frame3(Remeshing)*Table1*Table1*ToggleBox1(Remeshing Methods)*CheckButton1(Local Cell)" #f)(cx-gui-do cx-activate-item "Mesh Method Settings*Frame1*Frame3(Remeshing)*Table1*Table1*ToggleBox1(Remeshing Methods)*CheckButton1(Local Cell)")(cx-gui-do cx-activate-item "Mesh Method Settings*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Initialization"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Initialization"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Initialization"))')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Solution Initialization*Table1*Frame8*PushButton1(Initialize)")')
solutionComponent1.Update(AllDependencies=True)
setup3 = system3.GetContainer(ComponentName="Setup")
AnalysisSettings1 = setup3.GetAnalysisSettings()
AnalysisSettings1.MaximumIteration = 20
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Run Calculation"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Run Calculation"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Run Calculation"))(cx-gui-do cx-set-integer-entry "Run Calculation*Table1*Table7(Time Advancement)*Table3(Parameters)*Table5*Table1*Table1*IntegerEntry1(Max Iterations/Time Step)" 20)(cx-gui-do cx-activate-item "Run Calculation*Table1*Table7(Time Advancement)*Table3(Parameters)*Table5*Table1*Table1*IntegerEntry1(Max Iterations/Time Step)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Initialization"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Initialization"))')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "ToolBar*Workbench Tools*syncwb")')
ClearMessages()
solutionComponent1.Update(AllDependencies=True)
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Dynamic Mesh"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Dynamic Mesh"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Dynamic Mesh"))')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Dynamic Mesh*Table1*Table1*Table2*Table3*Table1(Mesh Methods)*PushButton5(Settings)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-toggle-button2 "Mesh Method Settings*Frame1*Frame3(Remeshing)*Table1*Table1*ToggleBox1(Remeshing Methods)*CheckButton4(2 5D)" #t)(cx-gui-do cx-activate-item "Mesh Method Settings*Frame1*Frame3(Remeshing)*Table1*Table1*ToggleBox1(Remeshing Methods)*CheckButton4(2 5D)")(cx-gui-do cx-set-toggle-button2 "Mesh Method Settings*Frame1*Frame3(Remeshing)*Table1*Table1*ToggleBox1(Remeshing Methods)*CheckButton1(Local Cell)" #t)(cx-gui-do cx-activate-item "Mesh Method Settings*Frame1*Frame3(Remeshing)*Table1*Table1*ToggleBox1(Remeshing Methods)*CheckButton1(Local Cell)")(cx-gui-do cx-set-toggle-button2 "Mesh Method Settings*Frame1*Frame3(Remeshing)*Table1*Table1*ToggleBox1(Remeshing Methods)*CheckButton4(2 5D)" #t)(cx-gui-do cx-activate-item "Mesh Method Settings*Frame1*Frame3(Remeshing)*Table1*Table1*ToggleBox1(Remeshing Methods)*CheckButton4(2 5D)")(cx-gui-do cx-set-toggle-button2 "Mesh Method Settings*Frame1*Frame3(Remeshing)*Table1*Table1*ToggleBox1(Remeshing Methods)*CheckButton1(Local Cell)" #t)(cx-gui-do cx-activate-item "Mesh Method Settings*Frame1*Frame3(Remeshing)*Table1*Table1*ToggleBox1(Remeshing Methods)*CheckButton1(Local Cell)")(cx-gui-do cx-set-toggle-button2 "Mesh Method Settings*Frame1*Frame3(Remeshing)*Table1*Table1*Table2(Sizing Options)*CheckButton1(Sizing Function)" #t)(cx-gui-do cx-activate-item "Mesh Method Settings*Frame1*Frame3(Remeshing)*Table1*Table1*Table2(Sizing Options)*CheckButton1(Sizing Function)")(cx-gui-do cx-set-integer-entry "Mesh Method Settings*Frame1*Frame3(Remeshing)*Table1*Table1*Table2(Sizing Options)*IntegerEntry2(Resolution)" 7)(cx-gui-do cx-activate-item "Mesh Method Settings*Frame1*Frame3(Remeshing)*Table1*Table1*Table2(Sizing Options)*IntegerEntry2(Resolution)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-integer-entry "Mesh Method Settings*Frame1*Frame3(Remeshing)*Table1*Table1*Table2(Sizing Options)*IntegerEntry2(Resolution)" 8)(cx-gui-do cx-activate-item "Mesh Method Settings*Frame1*Frame3(Remeshing)*Table1*Table1*Table2(Sizing Options)*IntegerEntry2(Resolution)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-integer-entry "Mesh Method Settings*Frame1*Frame3(Remeshing)*Table1*Table1*Table2(Sizing Options)*IntegerEntry2(Resolution)" 9)(cx-gui-do cx-activate-item "Mesh Method Settings*Frame1*Frame3(Remeshing)*Table1*Table1*Table2(Sizing Options)*IntegerEntry2(Resolution)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-integer-entry "Mesh Method Settings*Frame1*Frame3(Remeshing)*Table1*Table1*Table2(Sizing Options)*IntegerEntry2(Resolution)" 10)(cx-gui-do cx-activate-item "Mesh Method Settings*Frame1*Frame3(Remeshing)*Table1*Table1*Table2(Sizing Options)*IntegerEntry2(Resolution)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-integer-entry "Mesh Method Settings*Frame1*Frame3(Remeshing)*Table1*Table1*Table2(Sizing Options)*IntegerEntry2(Resolution)" 11)(cx-gui-do cx-activate-item "Mesh Method Settings*Frame1*Frame3(Remeshing)*Table1*Table1*Table2(Sizing Options)*IntegerEntry2(Resolution)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-integer-entry "Mesh Method Settings*Frame1*Frame3(Remeshing)*Table1*Table1*Table2(Sizing Options)*IntegerEntry2(Resolution)" 12)(cx-gui-do cx-activate-item "Mesh Method Settings*Frame1*Frame3(Remeshing)*Table1*Table1*Table2(Sizing Options)*IntegerEntry2(Resolution)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-integer-entry "Mesh Method Settings*Frame1*Frame3(Remeshing)*Table1*Table1*Table2(Sizing Options)*IntegerEntry2(Resolution)" 11)(cx-gui-do cx-activate-item "Mesh Method Settings*Frame1*Frame3(Remeshing)*Table1*Table1*Table2(Sizing Options)*IntegerEntry2(Resolution)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-integer-entry "Mesh Method Settings*Frame1*Frame3(Remeshing)*Table1*Table1*Table2(Sizing Options)*IntegerEntry2(Resolution)" 10)(cx-gui-do cx-activate-item "Mesh Method Settings*Frame1*Frame3(Remeshing)*Table1*Table1*Table2(Sizing Options)*IntegerEntry2(Resolution)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-integer-entry "Mesh Method Settings*Frame1*Frame3(Remeshing)*Table1*Table1*Table2(Sizing Options)*IntegerEntry2(Resolution)" 9)(cx-gui-do cx-activate-item "Mesh Method Settings*Frame1*Frame3(Remeshing)*Table1*Table1*Table2(Sizing Options)*IntegerEntry2(Resolution)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-integer-entry "Mesh Method Settings*Frame1*Frame3(Remeshing)*Table1*Table1*Table2(Sizing Options)*IntegerEntry2(Resolution)" 8)(cx-gui-do cx-activate-item "Mesh Method Settings*Frame1*Frame3(Remeshing)*Table1*Table1*Table2(Sizing Options)*IntegerEntry2(Resolution)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-integer-entry "Mesh Method Settings*Frame1*Frame3(Remeshing)*Table1*Table1*Table2(Sizing Options)*IntegerEntry2(Resolution)" 7)(cx-gui-do cx-activate-item "Mesh Method Settings*Frame1*Frame3(Remeshing)*Table1*Table1*Table2(Sizing Options)*IntegerEntry2(Resolution)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-toggle-button2 "Mesh Method Settings*Frame1*Frame3(Remeshing)*Table1*Table1*ToggleBox1(Remeshing Methods)*CheckButton3(Region Face)" #t)(cx-gui-do cx-activate-item "Mesh Method Settings*Frame1*Frame3(Remeshing)*Table1*Table1*ToggleBox1(Remeshing Methods)*CheckButton3(Region Face)")(cx-gui-do cx-activate-item "Mesh Method Settings*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "ToolBar*Workbench Tools*syncwb")(cx-gui-do cx-activate-item "Mesh and settings have changed!*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command="(cx-use-window-id 1)(cx-set-camera-relative '(-0.000120856 0.000205823 -0.000348975) '(0 0 0) '(-0.329207 -0.299467 0.117558) 0 0)")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "ToolBar*Workbench Tools*fl_setup")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuSetupCell*Reset")(cx-gui-do cx-activate-item "Question*OK")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "ToolBar*Workbench Tools*fl_setup")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuSetupCell*Reload")(cx-gui-do cx-activate-item "Question*OK")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Mesh Interfaces"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Dynamic Mesh"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Dynamic Mesh"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Dynamic Mesh"))(cx-gui-do cx-set-toggle-button2 "Dynamic Mesh*Table1*Table1*CheckButton1(Dynamic Mesh)" #t)(cx-gui-do cx-activate-item "Dynamic Mesh*Table1*Table1*CheckButton1(Dynamic Mesh)")(cx-gui-do cx-set-toggle-button2 "Dynamic Mesh*Table1*Table1*Table2*Table3*Table1(Mesh Methods)*CheckButton3(Remeshing)" #t)(cx-gui-do cx-activate-item "Dynamic Mesh*Table1*Table1*Table2*Table3*Table1(Mesh Methods)*CheckButton3(Remeshing)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Dynamic Mesh*Table1*Table1*Table2*Table3*Table1(Mesh Methods)*PushButton5(Settings)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-toggle-button2 \"Mesh Method Settings*Frame1*Frame3(Remeshing)*Table1*Table1*ToggleBox1(Remeshing Methods)*CheckButton2(Local Face)\" #t)(cx-gui-do cx-activate-item \"Mesh Method Settings*Frame1*Frame3(Remeshing)*Table1*Table1*ToggleBox1(Remeshing Methods)*CheckButton2(Local Face)\")(cx-gui-do cx-set-real-entry-list \"Mesh Method Settings*Frame1*Frame3(Remeshing)*Table1*Table3(Parameters)*RealEntry1(Minimum Length Scale)\" '( 1e-08))(cx-gui-do cx-activate-item \"Mesh Method Settings*Frame1*Frame3(Remeshing)*Table1*Table3(Parameters)*RealEntry1(Minimum Length Scale)\")")
setup1.SendCommand(Command="(cx-gui-do cx-set-real-entry-list \"Mesh Method Settings*Frame1*Frame3(Remeshing)*Table1*Table3(Parameters)*RealEntry2(Maximum Length Scale)\" '( 1e-06))(cx-gui-do cx-set-toggle-button2 \"Mesh Method Settings*Frame1*Frame3(Remeshing)*Table1*Table1*ToggleBox1(Remeshing Methods)*CheckButton2(Local Face)\" #f)(cx-gui-do cx-activate-item \"Mesh Method Settings*Frame1*Frame3(Remeshing)*Table1*Table1*ToggleBox1(Remeshing Methods)*CheckButton2(Local Face)\")(cx-gui-do cx-set-toggle-button2 \"Mesh Method Settings*Frame1*Frame3(Remeshing)*Table1*Table1*ToggleBox1(Remeshing Methods)*CheckButton2(Local Face)\" #t)(cx-gui-do cx-activate-item \"Mesh Method Settings*Frame1*Frame3(Remeshing)*Table1*Table1*ToggleBox1(Remeshing Methods)*CheckButton2(Local Face)\")(cx-gui-do cx-set-toggle-button2 \"Mesh Method Settings*Frame1*Frame3(Remeshing)*Table1*Table1*ToggleBox1(Remeshing Methods)*CheckButton3(Region Face)\" #t)(cx-gui-do cx-activate-item \"Mesh Method Settings*Frame1*Frame3(Remeshing)*Table1*Table1*ToggleBox1(Remeshing Methods)*CheckButton3(Region Face)\")(cx-gui-do cx-activate-item \"Mesh Method Settings*PanelButtons*PushButton1(OK)\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Dynamic Mesh*Table1*Table1*Table2*Table5*PushButton1(Create/Edit)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-toggle-button2 "Dynamic Mesh Zones*Frame1*Table1*ToggleBox2(Type)*Deforming" #t)(cx-gui-do cx-activate-item "Dynamic Mesh Zones*Frame1*Table1*ToggleBox2(Type)*Deforming")(cx-gui-do cx-set-toggle-button2 "Dynamic Mesh Zones*Frame1*Table1*ToggleBox2(Type)*User-Defined" #t)(cx-gui-do cx-activate-item "Dynamic Mesh Zones*Frame1*Table1*ToggleBox2(Type)*User-Defined")(cx-gui-do cx-set-toggle-button2 "Dynamic Mesh Zones*Frame1*Table1*ToggleBox2(Type)*System Coupling" #t)(cx-gui-do cx-activate-item "Dynamic Mesh Zones*Frame1*Table1*ToggleBox2(Type)*System Coupling")(cx-gui-do cx-activate-item "Dynamic Mesh Zones*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Dynamic Mesh Zones*Frame1*Table1*DropDownList1(Zone Names)\" '( 2))")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Dynamic Mesh Zones*Frame1*Table1*DropDownList1(Zone Names)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-toggle-button2 "Dynamic Mesh Zones*Frame1*Table1*ToggleBox2(Type)*Stationary" #t)(cx-gui-do cx-activate-item "Dynamic Mesh Zones*Frame1*Table1*ToggleBox2(Type)*Stationary")(cx-gui-do cx-activate-item "Dynamic Mesh Zones*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Dynamic Mesh Zones*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Dynamic Mesh*Table1*Table1*Table2*Table5*PushButton1(Create/Edit)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Dynamic Mesh Zones*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Methods"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Methods"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Methods"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Methods"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|General"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|General"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|General"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|General"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|General"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|General"))(cx-gui-do cx-set-toggle-button2 "General*Table1*Table2(Solver)*ToggleBox5(Time)*Transient" #t)(cx-gui-do cx-activate-item "General*Table1*Table2(Solver)*ToggleBox5(Time)*Transient")(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Methods"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Methods"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Methods"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Controls"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Controls"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Controls"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Initialization"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Initialization"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Initialization"))')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Solution Initialization*Table1*Frame8*PushButton1(Initialize)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Run Calculation"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Run Calculation"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Run Calculation"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Run Calculation"))(cx-gui-do cx-set-integer-entry "Run Calculation*Table1*Table7(Time Advancement)*Table3(Parameters)*Table1*Table1*IntegerEntry1(Number of Time Steps)" 1)(cx-gui-do cx-activate-item "Run Calculation*Table1*Table7(Time Advancement)*Table3(Parameters)*Table1*Table1*IntegerEntry1(Number of Time Steps)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-integer-entry "Run Calculation*Table1*Table7(Time Advancement)*Table3(Parameters)*Table1*Table1*IntegerEntry1(Number of Time Steps)" 2)(cx-gui-do cx-activate-item "Run Calculation*Table1*Table7(Time Advancement)*Table3(Parameters)*Table1*Table1*IntegerEntry1(Number of Time Steps)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-integer-entry "Run Calculation*Table1*Table7(Time Advancement)*Table3(Parameters)*Table1*Table1*IntegerEntry1(Number of Time Steps)" 3)(cx-gui-do cx-activate-item "Run Calculation*Table1*Table7(Time Advancement)*Table3(Parameters)*Table1*Table1*IntegerEntry1(Number of Time Steps)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-integer-entry "Run Calculation*Table1*Table7(Time Advancement)*Table3(Parameters)*Table1*Table1*IntegerEntry1(Number of Time Steps)" 4)(cx-gui-do cx-activate-item "Run Calculation*Table1*Table7(Time Advancement)*Table3(Parameters)*Table1*Table1*IntegerEntry1(Number of Time Steps)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-integer-entry "Run Calculation*Table1*Table7(Time Advancement)*Table3(Parameters)*Table1*Table1*IntegerEntry1(Number of Time Steps)" 5)(cx-gui-do cx-activate-item "Run Calculation*Table1*Table7(Time Advancement)*Table3(Parameters)*Table1*Table1*IntegerEntry1(Number of Time Steps)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-expression-entry \"Run Calculation*Table1*Table7(Time Advancement)*Table3(Parameters)*Table1*Table3*ExpressionEntry1(Time Step Size)\" '(\"1e-9\" . 0))")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Run Calculation*Table1*Table1*Table1*PushButton1(Check Case)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Case Check*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Ribbon*Frame1*Frame2(Domain)*Table1*Table3(Mesh)*PushButton4(Check)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuCheck*Perform Mesh Check")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Run Calculation*Table1*Table1*Table3*PushButton2(Preview Mesh Motion)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Mesh Motion*PanelButtons*PushButton1(Apply)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Mesh Motion*PanelButtons*PushButton2(Close)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Initialization"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Initialization"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Initialization"))')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Solution Initialization*Table1*Frame8*PushButton1(Initialize)")(cx-gui-do cx-activate-item "Question*OK")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Results"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Run Calculation"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Run Calculation"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
ClearMessages()
solutionComponent1.Clean()
solutionComponent2 = system1.GetComponent(Name="Solution")
solutionComponent2.Refresh()
solution1 = system1.GetContainer(ComponentName="Solution")
solution1.Edit()
solutionComponent2.Refresh()
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|General"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|General"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|General"))(cx-gui-do cx-set-toggle-button2 "General*Table1*Table2(Solver)*ToggleBox5(Time)*Transient" #t)(cx-gui-do cx-activate-item "General*Table1*Table2(Solver)*ToggleBox5(Time)*Transient")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Ribbon*Frame1*Frame2(Domain)*Table1*Table3(Mesh)*PushButton4(Check)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuCheck*Perform Mesh Check")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Wall|inside_wall (wall, id=6)"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Wall|inside_wall (wall, id=6)"))(cx-gui-do cx-list-tree-right-click "NavigationPane*List_Tree1" )')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuTree-inside_wall (wall, id=6)*Display")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Dynamic Mesh"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Dynamic Mesh"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Dynamic Mesh"))(cx-gui-do cx-set-toggle-button2 "Dynamic Mesh*Table1*Table1*CheckButton1(Dynamic Mesh)" #t)(cx-gui-do cx-activate-item "Dynamic Mesh*Table1*Table1*CheckButton1(Dynamic Mesh)")(cx-gui-do cx-set-toggle-button2 "Dynamic Mesh*Table1*Table1*Table2*Table3*Table1(Mesh Methods)*CheckButton3(Remeshing)" #t)(cx-gui-do cx-activate-item "Dynamic Mesh*Table1*Table1*Table2*Table3*Table1(Mesh Methods)*CheckButton3(Remeshing)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Dynamic Mesh*Table1*Table1*Table2*Table3*Table1(Mesh Methods)*PushButton5(Settings)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-toggle-button2 \"Mesh Method Settings*Frame1*Frame3(Remeshing)*Table1*Table1*ToggleBox1(Remeshing Methods)*CheckButton2(Local Face)\" #t)(cx-gui-do cx-activate-item \"Mesh Method Settings*Frame1*Frame3(Remeshing)*Table1*Table1*ToggleBox1(Remeshing Methods)*CheckButton2(Local Face)\")(cx-gui-do cx-set-toggle-button2 \"Mesh Method Settings*Frame1*Frame3(Remeshing)*Table1*Table1*ToggleBox1(Remeshing Methods)*CheckButton3(Region Face)\" #t)(cx-gui-do cx-activate-item \"Mesh Method Settings*Frame1*Frame3(Remeshing)*Table1*Table1*ToggleBox1(Remeshing Methods)*CheckButton3(Region Face)\")(cx-gui-do cx-set-real-entry-list \"Mesh Method Settings*Frame1*Frame3(Remeshing)*Table1*Table3(Parameters)*RealEntry1(Minimum Length Scale)\" '( 1e-08))(cx-gui-do cx-activate-item \"Mesh Method Settings*Frame1*Frame3(Remeshing)*Table1*Table3(Parameters)*RealEntry1(Minimum Length Scale)\")")
setup1.SendCommand(Command="(cx-gui-do cx-set-real-entry-list \"Mesh Method Settings*Frame1*Frame3(Remeshing)*Table1*Table3(Parameters)*RealEntry2(Maximum Length Scale)\" '( 1e-06))(cx-gui-do cx-set-toggle-button2 \"Mesh Method Settings*Frame1*Frame3(Remeshing)*Table1*Table1*Table2(Sizing Options)*CheckButton1(Sizing Function)\" #t)(cx-gui-do cx-activate-item \"Mesh Method Settings*Frame1*Frame3(Remeshing)*Table1*Table1*Table2(Sizing Options)*CheckButton1(Sizing Function)\")(cx-gui-do cx-set-integer-entry \"Mesh Method Settings*Frame1*Frame3(Remeshing)*Table1*Table1*Table2(Sizing Options)*IntegerEntry2(Resolution)\" 0)(cx-gui-do cx-activate-item \"Mesh Method Settings*Frame1*Frame3(Remeshing)*Table1*Table1*Table2(Sizing Options)*IntegerEntry2(Resolution)\")")
setup1.SendCommand(Command='(cx-gui-do cx-set-integer-entry "Mesh Method Settings*Frame1*Frame3(Remeshing)*Table1*Table1*Table2(Sizing Options)*IntegerEntry2(Resolution)" 1)(cx-gui-do cx-activate-item "Mesh Method Settings*Frame1*Frame3(Remeshing)*Table1*Table1*Table2(Sizing Options)*IntegerEntry2(Resolution)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-integer-entry "Mesh Method Settings*Frame1*Frame3(Remeshing)*Table1*Table1*Table2(Sizing Options)*IntegerEntry2(Resolution)" 2)(cx-gui-do cx-activate-item "Mesh Method Settings*Frame1*Frame3(Remeshing)*Table1*Table1*Table2(Sizing Options)*IntegerEntry2(Resolution)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-integer-entry "Mesh Method Settings*Frame1*Frame3(Remeshing)*Table1*Table1*Table2(Sizing Options)*IntegerEntry2(Resolution)" 3)(cx-gui-do cx-activate-item "Mesh Method Settings*Frame1*Frame3(Remeshing)*Table1*Table1*Table2(Sizing Options)*IntegerEntry2(Resolution)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-integer-entry "Mesh Method Settings*Frame1*Frame3(Remeshing)*Table1*Table1*Table2(Sizing Options)*IntegerEntry2(Resolution)" 4)(cx-gui-do cx-activate-item "Mesh Method Settings*Frame1*Frame3(Remeshing)*Table1*Table1*Table2(Sizing Options)*IntegerEntry2(Resolution)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-integer-entry "Mesh Method Settings*Frame1*Frame3(Remeshing)*Table1*Table1*Table2(Sizing Options)*IntegerEntry2(Resolution)" 5)(cx-gui-do cx-activate-item "Mesh Method Settings*Frame1*Frame3(Remeshing)*Table1*Table1*Table2(Sizing Options)*IntegerEntry2(Resolution)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-integer-entry "Mesh Method Settings*Frame1*Frame3(Remeshing)*Table1*Table1*Table2(Sizing Options)*IntegerEntry2(Resolution)" 6)(cx-gui-do cx-activate-item "Mesh Method Settings*Frame1*Frame3(Remeshing)*Table1*Table1*Table2(Sizing Options)*IntegerEntry2(Resolution)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-integer-entry "Mesh Method Settings*Frame1*Frame3(Remeshing)*Table1*Table1*Table2(Sizing Options)*IntegerEntry2(Resolution)" 7)(cx-gui-do cx-activate-item "Mesh Method Settings*Frame1*Frame3(Remeshing)*Table1*Table1*Table2(Sizing Options)*IntegerEntry2(Resolution)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-integer-entry "Mesh Method Settings*Frame1*Frame3(Remeshing)*Table1*Table1*Table2(Sizing Options)*IntegerEntry2(Resolution)" 8)(cx-gui-do cx-activate-item "Mesh Method Settings*Frame1*Frame3(Remeshing)*Table1*Table1*Table2(Sizing Options)*IntegerEntry2(Resolution)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-integer-entry "Mesh Method Settings*Frame1*Frame3(Remeshing)*Table1*Table1*Table2(Sizing Options)*IntegerEntry2(Resolution)" 9)(cx-gui-do cx-activate-item "Mesh Method Settings*Frame1*Frame3(Remeshing)*Table1*Table1*Table2(Sizing Options)*IntegerEntry2(Resolution)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-integer-entry "Mesh Method Settings*Frame1*Frame3(Remeshing)*Table1*Table3(Parameters)*IntegerEntry5(Size Remeshing Interval)" 4)(cx-gui-do cx-activate-item "Mesh Method Settings*Frame1*Frame3(Remeshing)*Table1*Table3(Parameters)*IntegerEntry5(Size Remeshing Interval)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-integer-entry "Mesh Method Settings*Frame1*Frame3(Remeshing)*Table1*Table3(Parameters)*IntegerEntry5(Size Remeshing Interval)" 3)(cx-gui-do cx-activate-item "Mesh Method Settings*Frame1*Frame3(Remeshing)*Table1*Table3(Parameters)*IntegerEntry5(Size Remeshing Interval)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-integer-entry "Mesh Method Settings*Frame1*Frame3(Remeshing)*Table1*Table3(Parameters)*IntegerEntry5(Size Remeshing Interval)" 4)(cx-gui-do cx-activate-item "Mesh Method Settings*Frame1*Frame3(Remeshing)*Table1*Table3(Parameters)*IntegerEntry5(Size Remeshing Interval)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-integer-entry "Mesh Method Settings*Frame1*Frame3(Remeshing)*Table1*Table3(Parameters)*IntegerEntry5(Size Remeshing Interval)" 5)(cx-gui-do cx-activate-item "Mesh Method Settings*Frame1*Frame3(Remeshing)*Table1*Table3(Parameters)*IntegerEntry5(Size Remeshing Interval)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Mesh Method Settings*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Methods"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Methods"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Methods"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Controls"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Controls"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Controls"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Initialization"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Initialization"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Initialization"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Run Calculation"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Run Calculation"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Run Calculation"))')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Run Calculation*Table1*Table1*Table3*PushButton2(Preview Mesh Motion)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Mesh Motion*PanelButtons*PushButton1(Apply)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Mesh Motion*PanelButtons*PushButton2(Close)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-integer-entry "Run Calculation*Table1*Table7(Time Advancement)*Table3(Parameters)*Table1*Table1*IntegerEntry1(Number of Time Steps)" 1)(cx-gui-do cx-activate-item "Run Calculation*Table1*Table7(Time Advancement)*Table3(Parameters)*Table1*Table1*IntegerEntry1(Number of Time Steps)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-integer-entry "Run Calculation*Table1*Table7(Time Advancement)*Table3(Parameters)*Table1*Table1*IntegerEntry1(Number of Time Steps)" 2)(cx-gui-do cx-activate-item "Run Calculation*Table1*Table7(Time Advancement)*Table3(Parameters)*Table1*Table1*IntegerEntry1(Number of Time Steps)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-integer-entry "Run Calculation*Table1*Table7(Time Advancement)*Table3(Parameters)*Table1*Table1*IntegerEntry1(Number of Time Steps)" 4)(cx-gui-do cx-activate-item "Run Calculation*Table1*Table7(Time Advancement)*Table3(Parameters)*Table1*Table1*IntegerEntry1(Number of Time Steps)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-integer-entry "Run Calculation*Table1*Table7(Time Advancement)*Table3(Parameters)*Table1*Table1*IntegerEntry1(Number of Time Steps)" 5)(cx-gui-do cx-activate-item "Run Calculation*Table1*Table7(Time Advancement)*Table3(Parameters)*Table1*Table1*IntegerEntry1(Number of Time Steps)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Run Calculation*Table1*Table1*Table1*PushButton1(Check Case)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Case Check*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Ribbon*Frame1*Frame2(Domain)*Table1*Table3(Mesh)*PushButton4(Check)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuCheck*Perform Mesh Check")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Initialization"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Initialization"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Initialization"))')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Solution Initialization*Table1*Frame8*PushButton1(Initialize)")(cx-gui-do cx-activate-item "Question*OK")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Run Calculation"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Run Calculation"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Run Calculation"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Run Calculation"))')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Run Calculation*Table1*Table1*Table1*PushButton1(Check Case)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Case Check*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "ToolBar*Workbench Tools*syncwb")')
solutionComponent1.Update(AllDependencies=True)
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Dynamic Mesh"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Dynamic Mesh"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Dynamic Mesh"))')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Dynamic Mesh*Table1*Table1*Table2*Table5*PushButton1(Create/Edit)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-toggle-button2 "Dynamic Mesh Zones*Frame1*Table1*ToggleBox2(Type)*System Coupling" #t)(cx-gui-do cx-activate-item "Dynamic Mesh Zones*Frame1*Table1*ToggleBox2(Type)*System Coupling")(cx-gui-do cx-activate-item "Dynamic Mesh Zones*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Dynamic Mesh Zones*Frame1*Table1*DropDownList1(Zone Names)\" '( 2))")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Dynamic Mesh Zones*Frame1*Table1*DropDownList1(Zone Names)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-toggle-button2 "Dynamic Mesh Zones*Frame1*Table1*ToggleBox2(Type)*Rigid Body" #t)(cx-gui-do cx-activate-item "Dynamic Mesh Zones*Frame1*Table1*ToggleBox2(Type)*Rigid Body")(cx-gui-do cx-set-toggle-button2 "Dynamic Mesh Zones*Frame1*Table1*ToggleBox2(Type)*Stationary" #t)(cx-gui-do cx-activate-item "Dynamic Mesh Zones*Frame1*Table1*ToggleBox2(Type)*Stationary")(cx-gui-do cx-activate-item "Dynamic Mesh Zones*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Dynamic Mesh Zones*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "ToolBar*Workbench Tools*fl_setup")')
setup1.SendCommand(Command="(cx-gui-do cx-activate-item \"MenuBar*PopupMenuSetupCell*Export Settings\")(cx-gui-do cx-set-file-dialog-entries \"Select File\" '( \"settings\") \"Setting Files (*.set)\")(cx-gui-do cx-activate-item \"Question*OK\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "ToolBar*Workbench Tools*fl_setup")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Run Calculation"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Run Calculation"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Run Calculation"))')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "ToolBar*Workbench Tools*fl_setup")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "ToolBar*Workbench Tools*fl_setup")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "ToolBar*Workbench Tools*fl_solution")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "ToolBar*Workbench Tools*syncwb")')
solutionComponent1.Update(AllDependencies=True)
ClearMessages()
results1 = system1.GetContainer(ComponentName="Results")
results1.Edit()
results1.SendCommand(Command="""VIEW:View 1
  Camera Mode = User Specified
  CAMERA:
    Option = Pivot Point and Quaternion
    Pivot Point = 0, 0, 1.45e-06
    Scale = 110000
    Pan = 0, 0
    Rotation Quaternion = 0.279848, -0.364705, -0.115917, 0.880476
    
  END

END

> update
>centerview 1""")
results1.SendCommand(Command="> autolegend plot=/DATA READER/CASE:Case EM Transient/BOUNDARY:Default Boundary, view=VIEW:View 1")
results1.SendCommand(Command="""DATA READER:
      CASE:Case EM Transient
    BOUNDARY:Default Boundary
Apply Instancing Transform = On
Apply Texture = Off
Blend Texture = On
Colour = 0.2, 0.5, 1
Colour Map = Default Colour Map
Colour Mode = Constant
Colour Scale = Linear
Colour Variable = Pressure
Colour Variable Boundary Values = Conservative
Culling Mode = No Culling
Draw Faces = On
Draw Lines = Off
Instancing Transform = /DEFAULT INSTANCE TRANSFORM:Default Transform
Lighting = On
Line Colour = 0, 0, 0
Line Colour Mode = Default
Line Width = 1
Max = 0.0
Min = 0.0
Range = Global
Render Edge Angle = 0 [degree]
Specular Lighting = On
Surface Drawing = Smooth Shading
Texture Angle = 0
Texture Direction = 0 , 1 , 0 
Texture File =  
Texture Material = Metal
Texture Position = 0 , 0 
Texture Scale = 1
Texture Type = Predefined
Tile Texture = Off
Transform Texture = Off
Transparency = 0.0
      OBJECT VIEW TRANSFORM:
      Apply Reflection = Off
      Apply Rotation = Off
      Apply Scale = Off
      Apply Translation = Off
      Principal Axis = Z
      Reflection Plane Option = XY Plane
      Rotation Angle = 0.0 [degree]
      Rotation Axis From = 0 [m], 0 [m], 0 [m]
      Rotation Axis To = 0 [m], 0 [m], 0 [m]
      Rotation Axis Type = Principal Axis
      Scale Vector = 1 , 1 , 1 
      Translation Vector = 0 [m], 0 [m], 0 [m]
      X = 0.0 [m]
      Y = 0.0 [m]
      Z = 0.0 [m]
      END
    END
  END
END
# Sending visibility action from ViewUtilities
>show /DATA READER/CASE:Case EM Transient/BOUNDARY:Default Boundary, view=/VIEW:View 1""")
results1.SendCommand(Command="> autolegend plot=/DATA READER/CASE:Case FFF 1/BOUNDARY:inside_wall, view=VIEW:View 1")
results1.SendCommand(Command="""# Sending visibility action from ViewUtilities
>show /DATA READER/CASE:Case FFF 1/BOUNDARY:inside_wall, view=/VIEW:View 1""")
results1.SendCommand(Command="""# Sending visibility action from ViewUtilities
>hide /DATA READER/CASE:Case EM Transient/BOUNDARY:Default Boundary, view=/VIEW:View 1""")
results1.SendCommand(Command=">centerview 1")
results1.SendCommand(Command=">centerview 1")
results1.SendCommand(Command=">centerview 1")
results1.SendCommand(Command=">centerview 1")
results1.SendCommand(Command="""# Sending visibility action from ViewUtilities
>show /DATA READER/CASE:Case FFF 1/BOUNDARY:outside_wall, view=/VIEW:View 1""")
results1.SendCommand(Command="""# Sending visibility action from ViewUtilities
>hide /DATA READER/CASE:Case FFF 1/BOUNDARY:outside_wall, view=/VIEW:View 1""")
Refresh()
Update()
ClearMessages()
results1.Edit()
results1.SendCommand(Command="""# Sending visibility action from ViewUtilities
>show /DATA READER/CASE:Case EM Transient/BOUNDARY:Default Boundary, view=/VIEW:View 1""")
results1.SendCommand(Command="""# Sending visibility action from ViewUtilities
>show /DATA READER/CASE:Case EM Transient/PRIMITIVE2D:Face_nodes, view=/VIEW:View 1""")
results1.SendCommand(Command="""# Sending visibility action from ViewUtilities
>show /DATA READER/CASE:Case EM Transient/PRIMITIVE2D:Fluidic_interface, view=/VIEW:View 1""")
results1.SendCommand(Command="""# Sending visibility action from ViewUtilities
>show /DATA READER/CASE:Case EM Transient/PRIMITIVE2D:Fsin_1, view=/VIEW:View 1""")
results1.SendCommand(Command="""# Sending visibility action from ViewUtilities
>show /DATA READER/CASE:Case EM Transient/PRIMITIVE2D:N_cmmems179, view=/VIEW:View 1""")
results1.SendCommand(Command="""# Sending visibility action from ViewUtilities
>show /DATA READER/CASE:Case EM Transient/PRIMITIVE2D:N_fixedsu, view=/VIEW:View 1""")
results1.SendCommand(Command="""# Sending visibility action from ViewUtilities
>show /DATA READER/CASE:Case FFF 1/BOUNDARY:outside_wall, view=/VIEW:View 1""")
results1.SendCommand(Command=">centerview 1")
results1.SendCommand(Command=">centerview 1")
results1.Exit()
