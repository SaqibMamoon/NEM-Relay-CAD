# encoding: utf-8
# 2020 R1
SetScriptVersion(Version="20.1.164")
template1 = GetTemplate(
    TemplateName="Static Structural",
    Solver="ANSYS")
system1 = template1.CreateSystem()
geometry1 = system1.GetContainer(ComponentName="Geometry")
geometry1.Edit(IsSpaceClaimGeometry=True)
geometry1.Exit()
geometry1.Edit(IsSpaceClaimGeometry=True)
geometry1.Exit()
modelComponent1 = system1.GetComponent(Name="Model")
modelComponent1.Refresh()
model1 = system1.GetContainer(ComponentName="Model")
model1.Edit()
engineeringData1 = system1.GetContainer(ComponentName="Engineering Data")
matl1 = engineeringData1.CreateMaterial(Name="Poly-SiGe")
matl2 = engineeringData1.CreateMaterial(Name="Tungsten")
favorites1 = EngData.LoadFavoriteItems()
library1 = EngData.OpenLibrary(
    Name="Granta Design Sample Materials",
    Source="Granta_Design_Typical_Materials.xml")
library2 = EngData.OpenLibrary(
    Name="Additive Manufacturing Materials",
    Source="Additive_Manufacturing_Materials.xml")
library3 = EngData.OpenLibrary(
    Name="General Materials",
    Source="General_Materials.xml")
library4 = EngData.OpenLibrary(
    Name="Composite Materials",
    Source="Composite_Materials.xml")
library5 = EngData.OpenLibrary(
    Name="Explicit Materials",
    Source="Explicit_Materials.xml")
matl3 = engineeringData1.ImportMaterial(
    Name="TUNGSTEN3",
    Source="Explicit_Materials.xml")
material1 = library5.GetMaterial(Name="TUNGSTEN3")
material1.AddToFavorites()
favorites2 = EngData.LoadFavoriteItems()
EngData.AddToProjectDefaults(
    Name="TUNGSTEN3",
    Source="Explicit_Materials.xml")
matl4 = engineeringData1.ImportMaterial(
    Name="Tungsten alloy",
    Source="Granta_Design_Typical_Materials.xml")
matl5 = engineeringData1.ImportMaterial(
    Name="Tungsten alloy",
    Source="Granta_Design_Typical_Materials.xml")
matl6 = engineeringData1.ImportMaterial(
    Name="Tungsten alloy",
    Source="Granta_Design_Typical_Materials.xml")
library6 = EngData.OpenLibrary(
    Name="Geomechanical Materials",
    Source="GeoMechanical_Materials.xml")
library7 = EngData.OpenLibrary(
    Name="General Non-linear Materials",
    Source="General Materials Non-linear.xml")
library8 = EngData.OpenLibrary(
    Name="Hyperelastic Materials",
    Source="Hyperelastic_Materials.xml")
library9 = EngData.OpenLibrary(
    Name="Magnetic B-H Curves",
    Source="Magnetic_B-H_curves_Soft_Materials.xml")
library10 = EngData.OpenLibrary(
    Name="Thermal Materials",
    Source="Thermal_Materials.xml")
matl1.Description = "From the "
matl1.SetAsDefaultSolidForModel()
matl7 = engineeringData1.CreateMaterial(Name="Test")
material2 = engineeringData1.GetMaterial(Name="Structural Steel")
material2.Delete()
matl7.Delete()
matl2.Delete()
matl4.Delete()
matl5.Delete()
matl6.Delete()
matl3.Delete()
matl1.Description = ""
EngData.EnableFilter(Enable=False)
matl1.SetAsDefaultSolidForModel(Default=False)
matlProp1 = matl1.CreateProperty(
    Name="Density",
    Qualifiers={"Definition": "", "Behavior": ""})
matlProp1.SetData(
    Index=-1,
    Variables=["Density"],
    Values=[["4126 [kg m^-3]"]])
matlProp2 = matl1.CreateProperty(
    Name="Elasticity",
    Behavior="Isotropic",
    Qualifiers={"Definition": "", "Behavior": "Isotropic"})
matlProp2.SetData(
    Index=-1,
    Variables=["Young's Modulus"],
    Values=[["57 [Pa]"]])
matlProp2.SetData(
    Variables=["Young's Modulus"],
    Values=[["145 [Pa]"]])
matlProp2.SetQualifier(
    Qualifier="Derive from",
    Value="Shear Modulus and Young's Modulus")
matlProp2.SetData(
    Variables=["Shear Modulus"],
    Values=[["57 [Pa]"]])
matl8 = engineeringData1.CreateMaterial(Name="Tungsten")
matlProp3 = matl8.CreateProperty(
    Name="Density",
    Qualifiers={"Definition": "", "Behavior": ""})
matlProp3.SetData(
    Index=-1,
    Variables=["Density"],
    Values=[["19300 [kg m^-3]"]])
matlProp3.SetData(
    SheetName="Density",
    SheetQualifiers={"Definition": "", "Behavior": ""},
    Variables=["Temperature"],
    Values=[["25 [C]"]])
matlProp1.SetData(
    SheetName="Density",
    SheetQualifiers={"Definition": "", "Behavior": ""},
    Variables=["Temperature"],
    Values=[["25 [C]"]])
matlProp2.SetData(
    SheetName="Elasticity",
    SheetQualifiers={"Definition": "", "Behavior": "Isotropic", "Derive from": "Shear Modulus and Young's Modulus"},
    Variables=["Temperature"],
    Values=[["25 [C]"]])
matlProp4 = matl8.CreateProperty(
    Name="Elasticity",
    Behavior="Isotropic",
    Qualifiers={"Definition": "", "Behavior": "Isotropic"})
matlProp4.Delete(Behavior="Isotropic")
matlProp5 = matl8.CreateProperty(
    Name="Elasticity",
    Behavior="Anisotropic",
    Qualifiers={"Definition": "", "Behavior": "Anisotropic"})
matlProp6 = matl8.CreateProperty(
    Name="Elasticity",
    Behavior="Orthotropic",
    Qualifiers={"Definition": "", "Behavior": "Orthotropic"})
matlProp6.Delete(Behavior="Anisotropic")
matlProp6.SetData(
    Index=-1,
    Variables=["Young's Modulus X direction"],
    Values=[["411 [Pa]"]])
matlProp6.SetData(
    Variables=["Young's Modulus Y direction"],
    Values=[["411 [Pa]"]])
matlProp6.SetData(
    Variables=["Young's Modulus Z direction"],
    Values=[["411 [Pa]"]])
matlProp6.SetData(
    Variables=["Shear Modulus XY"],
    Values=[["161 [Pa]"]])
matlProp6.SetData(
    Variables=["Shear Modulus YZ"],
    Values=[["161 [Pa]"]])
matlProp6.SetData(
    Variables=["Shear Modulus XZ"],
    Values=[["161 [Pa]"]])
matlProp6.SetData(
    Variables=["Poisson's Ratio XY"],
    Values=[["0.28"]])
matlProp6.SetData(
    Variables=["Poisson's Ratio YZ"],
    Values=[["0.28"]])
matlProp6.SetData(
    Variables=["Poisson's Ratio XZ"],
    Values=[["0.28"]])
matlProp6.Delete(Behavior="Orthotropic")
matlProp7 = matl8.CreateProperty(
    Name="Elasticity",
    Behavior="Isotropic",
    Qualifiers={"Definition": "", "Behavior": "Isotropic"})
matlProp7.SetData(
    Index=-1,
    Variables=["Young's Modulus"],
    Values=[["411 [Pa]"]])
matlProp7.SetData(
    Variables=["Poisson's Ratio"],
    Values=[["0.28"]])
matlProp7.SetVariableProperty(
    VariableName="Young's Modulus",
    Property="Unit",
    Value="MPa")
matlProp7.SetData(
    Variables=["Young's Modulus"],
    Values=[["0.00041099999999999996 [MPa]"]])
matlProp7.SetData(
    Variables=["Young's Modulus"],
    Values=[["411000 [MPa]"]])
matlProp2.SetVariableProperty(
    VariableName="Young's Modulus",
    Property="Unit",
    Value="MPa")
matlProp2.SetData(
    Variables=["Young's Modulus"],
    Values=[["0.000145 [MPa]"]])
matlProp2.SetData(
    Variables=["Young's Modulus"],
    Values=[["145000 [MPa]"]])
matlProp2.SetVariableProperty(
    VariableName="Shear Modulus",
    Property="Unit",
    Value="MPa")
matlProp2.SetData(
    Variables=["Shear Modulus"],
    Values=[["5.6999999999999996E-05 [MPa]"]])
matlProp2.SetData(
    Variables=["Shear Modulus"],
    Values=[["57000 [MPa]"]])
geometry1.Edit(IsSpaceClaimGeometry=True)
model1.Exit()
geometry1.Exit()
modelComponent1.Refresh()
model1.Edit()
geometry1.Edit(IsSpaceClaimGeometry=True)
geometry1.Exit()
geometry1.SetFile(FilePath=GetAbsoluteUserPathName("GitHub/NEM-Relay-CAD/relay.scdoc"))
Save(Overwrite=True)
Save(Overwrite=True)
Save(Overwrite=True)
