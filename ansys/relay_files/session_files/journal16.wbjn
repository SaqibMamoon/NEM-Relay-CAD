# encoding: utf-8
# 2020 R1
SetScriptVersion(Version="20.1.164")
system1 = GetSystem(Name="FFF")
setup1 = system1.GetContainer(ComponentName="Setup")
fluentLauncherSettings1 = setup1.GetFluentLauncherSettings()
fluentLauncherSettings1.SetEntityProperties(Properties=Set(EnvPath={}))
setup1.Edit()
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Run Calculation"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Initialization"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Initialization"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Initialization"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Initialization"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Run Calculation"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Run Calculation"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Run Calculation"))(cx-gui-do cx-set-integer-entry "Run Calculation*Table1*Table3(Parameters)*Table1*Table1*IntegerEntry1(Number of Iterations)" 1)(cx-gui-do cx-activate-item "Run Calculation*Table1*Table3(Parameters)*Table1*Table1*IntegerEntry1(Number of Iterations)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-integer-entry "Run Calculation*Table1*Table3(Parameters)*Table1*Table1*IntegerEntry1(Number of Iterations)" 2)(cx-gui-do cx-activate-item "Run Calculation*Table1*Table3(Parameters)*Table1*Table1*IntegerEntry1(Number of Iterations)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-integer-entry "Run Calculation*Table1*Table3(Parameters)*Table1*Table1*IntegerEntry1(Number of Iterations)" 3)(cx-gui-do cx-activate-item "Run Calculation*Table1*Table3(Parameters)*Table1*Table1*IntegerEntry1(Number of Iterations)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-integer-entry "Run Calculation*Table1*Table3(Parameters)*Table1*Table1*IntegerEntry1(Number of Iterations)" 4)(cx-gui-do cx-activate-item "Run Calculation*Table1*Table3(Parameters)*Table1*Table1*IntegerEntry1(Number of Iterations)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-integer-entry "Run Calculation*Table1*Table3(Parameters)*Table1*Table1*IntegerEntry1(Number of Iterations)" 5)(cx-gui-do cx-activate-item "Run Calculation*Table1*Table3(Parameters)*Table1*Table1*IntegerEntry1(Number of Iterations)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Dynamic Mesh"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Dynamic Mesh"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-tree-selections \"NavigationPane*List_Tree1\" (list \"Setup|Dynamic Mesh\"))(cx-gui-do cx-set-list-selections \"Dynamic Mesh*Table1*Table1*Table2*List4(Dynamic Mesh Zones)\" '( 0))(cx-gui-do cx-activate-item \"Dynamic Mesh*Table1*Table1*Table2*List4(Dynamic Mesh Zones)\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Dynamic Mesh*Table1*Table1*Table2*Table5*PushButton1(Create/Edit)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Dynamic Mesh Zones*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*FileMenu*Close Fluent")')
Save(Overwrite=True)
system2 = GetSystem(Name="SC")
setupComponent1 = system2.GetComponent(Name="Setup")
setupComponent1.Refresh()
solutionComponent1 = system2.GetComponent(Name="Solution")
solutionComponent1.Update(AllDependencies=True)
system3 = GetSystem(Name="SYS 2")
solutionComponent2 = system3.GetComponent(Name="Solution")
resultsComponent1 = system1.GetComponent(Name="Results")
solutionComponent2.TransferData(TargetComponent=resultsComponent1)
results1 = system1.GetContainer(ComponentName="Results")
results1.Edit()
results1.SendCommand(Command="""VIEW:View 1
  Light Angle = 50, 110
END

VIEW:View 2
  Light Angle = 50, 110
END

VIEW:View 3
  Light Angle = 50, 110
END

VIEW:View 4
  Light Angle = 50, 110
END

> update
> autolegend plot=/DATA READER/CASE:Case FFF 1/BOUNDARY:inside_wall, view=VIEW:View 1""")
results1.SendCommand(Command=">centerview 1")
results1.SendCommand(Command=">centerview 1")
results1.Exit()
solution1 = system3.GetContainer(ComponentName="Solution")
solution1.Edit()
system4 = GetSystem(Name="SYS 3")
system4.Delete()
fluentLauncherSettings1.SetEntityProperties(Properties=Set(EnvPath={}))
setup1.Edit()
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Wall|inside_wall (wall, id=6)"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Wall|outside_wall (wall, id=5)"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Wall|inside_wall (wall, id=6)"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Dynamic Mesh"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Dynamic Mesh"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-tree-selections \"NavigationPane*List_Tree1\" (list \"Setup|Dynamic Mesh\"))(cx-gui-do cx-set-list-selections \"Dynamic Mesh*Table1*Table1*Table2*List4(Dynamic Mesh Zones)\" '( 0))(cx-gui-do cx-activate-item \"Dynamic Mesh*Table1*Table1*Table2*List4(Dynamic Mesh Zones)\")(cx-gui-do cx-set-list-selections \"Dynamic Mesh*Table1*Table1*Table2*List4(Dynamic Mesh Zones)\" '( 2))(cx-gui-do cx-activate-item \"Dynamic Mesh*Table1*Table1*Table2*List4(Dynamic Mesh Zones)\")(cx-gui-do cx-set-list-selections \"Dynamic Mesh*Table1*Table1*Table2*List4(Dynamic Mesh Zones)\" '( 0))(cx-gui-do cx-activate-item \"Dynamic Mesh*Table1*Table1*Table2*List4(Dynamic Mesh Zones)\")(cx-gui-do cx-set-list-selections \"Dynamic Mesh*Table1*Table1*Table2*List4(Dynamic Mesh Zones)\" '( 2))(cx-gui-do cx-activate-item \"Dynamic Mesh*Table1*Table1*Table2*List4(Dynamic Mesh Zones)\")(cx-gui-do cx-set-list-tree-selections \"NavigationPane*List_Tree1\" (list \"Setup|Boundary Conditions|Internal|interior-enclosure_enclosure (interior, id=1)\"))(cx-gui-do cx-set-list-tree-selections \"NavigationPane*List_Tree1\" (list \"Setup|Boundary Conditions|Internal|interior-enclosure_enclosure (interior, id=1)\"))(cx-gui-do cx-list-tree-right-click \"NavigationPane*List_Tree1\" )")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuTree-interior-enclosure_enclosure (interior, id=1)*Edit...")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Interior*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Dynamic Mesh*Table1*Table1*Table2*Table5*PushButton1(Create/Edit)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-toggle-button2 \"Dynamic Mesh Zones*Frame1*Table1*ToggleBox2(Type)*Rigid Body\" #t)(cx-gui-do cx-activate-item \"Dynamic Mesh Zones*Frame1*Table1*ToggleBox2(Type)*Rigid Body\")(cx-gui-do cx-set-list-selections \"Dynamic Mesh Zones*Frame1*List2(Dynamic Mesh Zones)\" '( 3))(cx-gui-do cx-activate-item \"Dynamic Mesh Zones*Frame1*List2(Dynamic Mesh Zones)\")(cx-gui-do cx-set-list-selections \"Dynamic Mesh Zones*Frame1*List2(Dynamic Mesh Zones)\" '( 0))(cx-gui-do cx-activate-item \"Dynamic Mesh Zones*Frame1*List2(Dynamic Mesh Zones)\")")
setup1.SendCommand(Command="(cx-gui-do cx-activate-item \"Dynamic Mesh Zones*PanelButtons*PushButton6(Draw)\")(cx-gui-do cx-activate-item \"Error*OK\")(cx-gui-do cx-set-list-selections \"Dynamic Mesh Zones*Frame1*List2(Dynamic Mesh Zones)\" '( 1))(cx-gui-do cx-activate-item \"Dynamic Mesh Zones*Frame1*List2(Dynamic Mesh Zones)\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Dynamic Mesh Zones*PanelButtons*PushButton6(Draw)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Dynamic Mesh Zones*Frame1*List2(Dynamic Mesh Zones)\" '( 3))(cx-gui-do cx-activate-item \"Dynamic Mesh Zones*Frame1*List2(Dynamic Mesh Zones)\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Dynamic Mesh Zones*PanelButtons*PushButton6(Draw)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Dynamic Mesh Zones*Frame1*List2(Dynamic Mesh Zones)\" '( 2))(cx-gui-do cx-activate-item \"Dynamic Mesh Zones*Frame1*List2(Dynamic Mesh Zones)\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Dynamic Mesh Zones*PanelButtons*PushButton6(Draw)")(cx-gui-do cx-activate-item "Error*OK")(cx-gui-do cx-activate-item "Dynamic Mesh Zones*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Dynamic Mesh*Table1*Table1*Table2*List4(Dynamic Mesh Zones)\" '( 0))(cx-gui-do cx-activate-item \"Dynamic Mesh*Table1*Table1*Table2*List4(Dynamic Mesh Zones)\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Dynamic Mesh*Table1*Table1*Table2*Table5*PushButton2(  Delete)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Dynamic Mesh*Table1*Table1*Table2*List4(Dynamic Mesh Zones)\" '( 2))(cx-gui-do cx-activate-item \"Dynamic Mesh*Table1*Table1*Table2*List4(Dynamic Mesh Zones)\")(cx-gui-do cx-set-list-selections \"Dynamic Mesh*Table1*Table1*Table2*List4(Dynamic Mesh Zones)\" '( 1))(cx-gui-do cx-activate-item \"Dynamic Mesh*Table1*Table1*Table2*List4(Dynamic Mesh Zones)\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Dynamic Mesh*Table1*Table1*Table2*Table5*PushButton2(  Delete)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Dynamic Mesh*Table1*Table1*Table2*Table7*PushButton3(Update Dynamic Mesh)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Mesh Motion*PanelButtons*PushButton2(Close)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Dynamic Mesh*Table1*Table1*Table2*Table7*PushButton3(Update Dynamic Mesh)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Mesh Motion*PanelButtons*PushButton1(Apply)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Mesh Motion*PanelButtons*PushButton2(Close)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Run Calculation"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Run Calculation"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Run Calculation"))')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Run Calculation*Table1*Table1*Table3*PushButton1(Update Dynamic Mesh)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Mesh Motion*PanelButtons*PushButton1(Apply)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Mesh Motion*PanelButtons*PushButton2(Close)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Run Calculation*Table1*Table1*Table1*PushButton1(Check Case)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Case Check*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Ribbon*Frame1*Frame2(Domain)*Table1*Table3(Mesh)*PushButton4(Check)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuCheck*Perform Mesh Check")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Initialization"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Initialization"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Initialization"))')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Solution Initialization*Table1*Frame11*PushButton2(Initialize)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Run Calculation"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Run Calculation"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Run Calculation"))')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Run Calculation*Table1*Table1*Table3*PushButton1(Update Dynamic Mesh)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Mesh Motion*PanelButtons*PushButton1(Apply)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Mesh Motion*PanelButtons*PushButton1(Apply)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Mesh Motion*PanelButtons*PushButton1(Apply)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Mesh Motion*PanelButtons*PushButton1(Apply)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Mesh Motion*PanelButtons*PushButton1(Apply)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Mesh Motion*PanelButtons*PushButton1(Apply)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Mesh Motion*PanelButtons*PushButton1(Apply)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Mesh Motion*PanelButtons*PushButton2(Close)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-expression-entry \"Run Calculation*Table1*Table2(Pseudo Transient Settings)*Table1(Fluid Time Scale)*Table3*ExpressionEntry2(Time Scale Factor)\" '(\"1e-8\" . 0))(cx-gui-do cx-activate-item \"Run Calculation*Table1*Table2(Pseudo Transient Settings)*Table1(Fluid Time Scale)*Table3*ExpressionEntry2(Time Scale Factor)\")")
setup1.SendCommand(Command="(cx-gui-do cx-set-expression-entry \"Run Calculation*Table1*Table2(Pseudo Transient Settings)*Table1(Fluid Time Scale)*Table3*ExpressionEntry2(Time Scale Factor)\" '(\"1e-8\" . 0))")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Run Calculation*Table1*Table1*Table3*PushButton1(Update Dynamic Mesh)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Mesh Motion*PanelButtons*PushButton1(Apply)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Mesh Motion*PanelButtons*PushButton1(Apply)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Mesh Motion*PanelButtons*PushButton2(Close)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Internal|interior-enclosure_enclosure (interior, id=1)"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Dynamic Mesh"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Dynamic Mesh"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-tree-selections \"NavigationPane*List_Tree1\" (list \"Setup|Dynamic Mesh\"))(cx-gui-do cx-set-list-selections \"Dynamic Mesh*Table1*Table1*Table2*List4(Dynamic Mesh Zones)\" '( 1))(cx-gui-do cx-activate-item \"Dynamic Mesh*Table1*Table1*Table2*List4(Dynamic Mesh Zones)\")(cx-gui-do cx-set-list-selections \"Dynamic Mesh*Table1*Table1*Table2*List4(Dynamic Mesh Zones)\" '( 0))(cx-gui-do cx-activate-item \"Dynamic Mesh*Table1*Table1*Table2*List4(Dynamic Mesh Zones)\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Dynamic Mesh*Table1*Table1*Table2*Table7*PushButton1(Display Zone Motion)")(cx-gui-do cx-activate-item "Warning*OK")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Dynamic Mesh*Table1*Table1*Table2*List4(Dynamic Mesh Zones)\" '( 1))(cx-gui-do cx-activate-item \"Dynamic Mesh*Table1*Table1*Table2*List4(Dynamic Mesh Zones)\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Dynamic Mesh*Table1*Table1*Table2*Table7*PushButton1(Display Zone Motion)")(cx-gui-do cx-activate-item "Warning*OK")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*FileMenu*Close Fluent")')
setupComponent1.Refresh()
ClearMessages()
setup2 = system2.GetContainer(ComponentName="Setup")
AnalysisSettings1 = setup2.GetAnalysisSettings()
AnalysisSettings1.EndTime = "6E-08 [s]"
AnalysisSettings1.EndTime = "5E-08 [s]"
solutionComponent1.Clean()
ClearMessages()
solutionComponent1.Update(AllDependencies=True)
solutionComponent3 = system1.GetComponent(Name="Solution")
solutionComponent3.Refresh()
solution2 = system1.GetContainer(ComponentName="Solution")
solution2.Edit()
solutionComponent3.Refresh()
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Cell Zone Conditions|Fluid|enclosure_enclosure (fluid, id=2)"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Cell Zone Conditions|Fluid|enclosure_enclosure (fluid, id=2)"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Cell Zone Conditions|Fluid|enclosure_enclosure (fluid, id=2)"))(cx-gui-do cx-activate-item "Fluid*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Wall|inside_wall (wall, id=6)"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Cell Zone Conditions|Fluid|enclosure_enclosure (fluid, id=2)"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Cell Zone Conditions|Fluid|enclosure_enclosure (fluid, id=2)"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Cell Zone Conditions|Fluid|enclosure_enclosure (fluid, id=2)"))(cx-gui-do cx-activate-item "Fluid*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Wall|inside_wall (wall, id=6)"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Wall|inside_wall (wall, id=6)"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Wall|inside_wall (wall, id=6)"))(cx-gui-do cx-activate-item "Wall*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Dynamic Mesh"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Dynamic Mesh"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Dynamic Mesh"))')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Dynamic Mesh*Table1*Table1*Table2*Table7*PushButton1(Display Zone Motion)")(cx-gui-do cx-activate-item "Warning*OK")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Dynamic Mesh*Table1*Table1*Table2*List4(Dynamic Mesh Zones)\" '( 0))(cx-gui-do cx-activate-item \"Dynamic Mesh*Table1*Table1*Table2*List4(Dynamic Mesh Zones)\")(cx-gui-do cx-set-list-selections \"Dynamic Mesh*Table1*Table1*Table2*List4(Dynamic Mesh Zones)\" '( 1))(cx-gui-do cx-activate-item \"Dynamic Mesh*Table1*Table1*Table2*List4(Dynamic Mesh Zones)\")(cx-gui-do cx-set-list-tree-selections \"NavigationPane*List_Tree1\" (list \"Setup|Boundary Conditions|Wall|inside_wall (wall, id=6)\"))")
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Wall|inside_wall (wall, id=6)"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Wall|inside_wall (wall, id=6)"))(cx-gui-do cx-set-toggle-button2 "Wall*Frame3*Frame1(Momentum)*Table1*Frame1*Frame1*Table1*ToggleBox1(Wall Motion)*Moving Wall" #t)(cx-gui-do cx-activate-item "Wall*Frame3*Frame1(Momentum)*Table1*Frame1*Frame1*Table1*ToggleBox1(Wall Motion)*Moving Wall")(cx-gui-do cx-set-toggle-button2 "Wall*Frame3*Frame1(Momentum)*Table1*Frame1*Frame1*Table1*ToggleBox1(Wall Motion)*Stationary Wall" #t)(cx-gui-do cx-activate-item "Wall*Frame3*Frame1(Momentum)*Table1*Frame1*Frame1*Table1*ToggleBox1(Wall Motion)*Stationary Wall")(cx-gui-do cx-activate-item "Wall*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Wall|inside_wall (wall, id=6)"))(cx-gui-do cx-list-tree-right-click "NavigationPane*List_Tree1" )(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Internal"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Internal|interior-enclosure_enclosure (interior, id=1)"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Internal|interior-enclosure_enclosure (interior, id=1)"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Internal|interior-enclosure_enclosure (interior, id=1)"))(cx-gui-do cx-activate-item "Interior*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Internal|interior-enclosure_enclosure (interior, id=1)"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Internal|interior-enclosure_enclosure (interior, id=1)"))(cx-gui-do cx-list-tree-right-click "NavigationPane*List_Tree1" )(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Wall|inside_wall (wall, id=6)"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Wall|inside_wall (wall, id=6)"))(cx-gui-do cx-list-tree-right-click "NavigationPane*List_Tree1" )')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuTree-inside_wall (wall, id=6)*Display")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Dynamic Mesh*Table1*Table1*Table2*Table7*PushButton1(Display Zone Motion)")(cx-gui-do cx-activate-item "Warning*OK")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Cell Zone Conditions|Fluid|enclosure_enclosure (fluid, id=2)"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Cell Zone Conditions|Fluid|enclosure_enclosure (fluid, id=2)"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Cell Zone Conditions|Fluid|enclosure_enclosure (fluid, id=2)"))(cx-gui-do cx-activate-item "Fluid*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Dynamic Mesh"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Wall|outside_wall (wall, id=5)"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Wall|outside_wall (wall, id=5)"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Wall|outside_wall (wall, id=5)"))(cx-gui-do cx-activate-item "Wall*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Wall|outside_wall (wall, id=5)"))(cx-gui-do cx-list-tree-right-click "NavigationPane*List_Tree1" )')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuTree-outside_wall (wall, id=5)*Display")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Cell Zone Conditions|Fluid|enclosure_enclosure (fluid, id=2)"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Internal|interior-enclosure_enclosure (interior, id=1)"))')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Ribbon*Frame1*Frame2(Domain)*Table1*Table3(Zones)*PushButton5(Deactivate)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Deactivate Cell Zones*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Wall|inside_wall (wall, id=6)"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Wall|inside_wall (wall, id=6)"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Wall|inside_wall (wall, id=6)"))(cx-gui-do cx-list-tree-right-click "NavigationPane*List_Tree1" )(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Mesh Interfaces"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Wall|inside_wall (wall, id=6)"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Wall|inside_wall (wall, id=6)"))(cx-gui-do cx-list-tree-right-click "NavigationPane*List_Tree1" )(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Wall"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Internal|interior-enclosure_enclosure (interior, id=1)"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Internal|interior-enclosure_enclosure (interior, id=1)"))(cx-gui-do cx-list-tree-right-click "NavigationPane*List_Tree1" )')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuTree-interior-enclosure_enclosure (interior, id=1)*Edit...")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Interior*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Wall|inside_wall (wall, id=6)"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Wall|outside_wall (wall, id=5)"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Wall|outside_wall (wall, id=5)"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Wall|outside_wall (wall, id=5)"))(cx-gui-do cx-activate-item "Wall*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Run Calculation"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Initialization"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Initialization"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Initialization"))')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Solution Initialization*Table1*Frame11*PushButton1(More Settings)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Hybrid Initialization*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Calculation Activities"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Calculation Activities"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Calculation Activities"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Run Calculation"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Run Calculation"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Run Calculation"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Results|Surfaces"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Results|Surfaces"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Results|Surfaces"))(cx-gui-do cx-activate-item "Surfaces*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Results|Graphics|Mesh"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Results|Graphics|Mesh"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Results|Graphics|Mesh"))(cx-gui-do cx-activate-item "Mesh Display*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Mesh Display*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Mesh Display*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Mesh Display*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Mesh Display*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Wall|inside_wall (wall, id=6)"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Wall|outside_wall (wall, id=5)"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Wall|outside_wall (wall, id=5)"))(cx-gui-do cx-list-tree-right-click "NavigationPane*List_Tree1" )(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Wall|inside_wall (wall, id=6)"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Wall|inside_wall (wall, id=6)"))(cx-gui-do cx-list-tree-right-click "NavigationPane*List_Tree1" )')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuTree-inside_wall (wall, id=6)*Display")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Wall|outside_wall (wall, id=5)"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Wall|outside_wall (wall, id=5)"))(cx-gui-do cx-list-tree-right-click "NavigationPane*List_Tree1" )(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Wall|outside_wall (wall, id=5)"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Run Calculation"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Run Calculation"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Run Calculation"))')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Run Calculation*Table1*Table1*Table3*PushButton1(Update Dynamic Mesh)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Mesh Motion*PanelButtons*PushButton1(Apply)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Mesh Motion*PanelButtons*PushButton1(Apply)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Mesh Motion*PanelButtons*PushButton1(Apply)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Mesh Motion*PanelButtons*PushButton1(Apply)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Mesh Motion*PanelButtons*PushButton1(Apply)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Mesh Motion*PanelButtons*PushButton1(Apply)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Mesh Motion*PanelButtons*PushButton2(Close)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Dynamic Mesh"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Dynamic Mesh"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-tree-selections \"NavigationPane*List_Tree1\" (list \"Setup|Dynamic Mesh\"))(cx-gui-do cx-set-list-selections \"Dynamic Mesh*Table1*Table1*Table2*List4(Dynamic Mesh Zones)\" '( 0))(cx-gui-do cx-activate-item \"Dynamic Mesh*Table1*Table1*Table2*List4(Dynamic Mesh Zones)\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Dynamic Mesh*Table1*Table1*Table2*Table5*PushButton1(Create/Edit)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-toggle-button2 "Dynamic Mesh Zones*Frame1*Table1*ToggleBox2(Type)*Deforming" #t)(cx-gui-do cx-activate-item "Dynamic Mesh Zones*Frame1*Table1*ToggleBox2(Type)*Deforming")(cx-gui-do cx-activate-item "Dynamic Mesh Zones*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Dynamic Mesh Zones*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Wall|outside_wall (wall, id=5)"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Wall|outside_wall (wall, id=5)"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Wall|outside_wall (wall, id=5)"))(cx-gui-do cx-set-toggle-button2 "Wall*Frame3*Frame1(Momentum)*Table1*Frame1*Frame1*Table1*ToggleBox1(Wall Motion)*Moving Wall" #t)(cx-gui-do cx-activate-item "Wall*Frame3*Frame1(Momentum)*Table1*Frame1*Frame1*Table1*ToggleBox1(Wall Motion)*Moving Wall")(cx-gui-do cx-set-toggle-button2 "Wall*Frame3*Frame1(Momentum)*Table1*Frame1*Frame1*Table1*ToggleBox1(Wall Motion)*Stationary Wall" #t)(cx-gui-do cx-activate-item "Wall*Frame3*Frame1(Momentum)*Table1*Frame1*Frame1*Table1*ToggleBox1(Wall Motion)*Stationary Wall")(cx-gui-do cx-activate-item "Wall*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Wall|outside_wall (wall, id=5)"))(cx-gui-do cx-list-tree-right-click "NavigationPane*List_Tree1" )')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*TypeSubMenu*pressure-inlet")')
setup1.SendCommand(Command="(cx-gui-do cx-set-expression-entry \"Pressure Inlet*Frame3*Frame1(Momentum)*Table1*Table6*ExpressionEntry1(Gauge Total Pressure)\" '(\"100\" . 0))(cx-gui-do cx-activate-item \"Pressure Inlet*PanelButtons*PushButton1(OK)\")")
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Run Calculation"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Run Calculation"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Run Calculation"))')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Run Calculation*Table1*Table1*Table3*PushButton1(Update Dynamic Mesh)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Mesh Motion*PanelButtons*PushButton1(Apply)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Mesh Motion*PanelButtons*PushButton2(Close)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Initialization"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Initialization"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Initialization"))')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Solution Initialization*Table1*Frame11*PushButton2(Initialize)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Run Calculation"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Run Calculation"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-tree-selections \"NavigationPane*List_Tree1\" (list \"Solution|Run Calculation\"))(cx-gui-do cx-set-expression-entry \"Run Calculation*Table1*Table2(Pseudo Transient Settings)*Table1(Fluid Time Scale)*Table3*ExpressionEntry2(Time Scale Factor)\" '(\"1\" . 0))(cx-gui-do cx-activate-item \"Run Calculation*Table1*Table2(Pseudo Transient Settings)*Table1(Fluid Time Scale)*Table3*ExpressionEntry2(Time Scale Factor)\")")
setup1.SendCommand(Command="(cx-gui-do cx-set-expression-entry \"Run Calculation*Table1*Table2(Pseudo Transient Settings)*Table1(Fluid Time Scale)*Table3*ExpressionEntry2(Time Scale Factor)\" '(\"1\" . 0))")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Run Calculation*Table1*Table1*Table3*PushButton1(Update Dynamic Mesh)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Mesh Motion*PanelButtons*PushButton2(Close)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Run Calculation*Table1*Table1*Table3*PushButton1(Update Dynamic Mesh)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Mesh Motion*PanelButtons*PushButton1(Apply)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Mesh Motion*PanelButtons*PushButton1(Apply)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Mesh Motion*PanelButtons*PushButton1(Apply)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Mesh Motion*PanelButtons*PushButton2(Close)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Dynamic Mesh"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Dynamic Mesh"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
Save(Overwrite=True)
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Dynamic Mesh"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Inlet|outside_wall (pressure-inlet, id=5)"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Inlet|outside_wall (pressure-inlet, id=5)"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Inlet|outside_wall (pressure-inlet, id=5)"))(cx-gui-do cx-list-tree-right-click "NavigationPane*List_Tree1" )(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Internal|interior-enclosure_enclosure (interior, id=1)"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Inlet|outside_wall (pressure-inlet, id=5)"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Inlet|outside_wall (pressure-inlet, id=5)"))(cx-gui-do cx-list-tree-right-click "NavigationPane*List_Tree1" )')
mesh1 = system1.GetContainer(ComponentName="Mesh")
mesh1.Edit()
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*TypeSubMenu*wall")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Wall*PanelButtons*PushButton2(Cancel)")')
system5 = GetSystem(Name="SYS 4")
geometry1 = system5.GetContainer(ComponentName="Geometry")
geometry1.SetFile(
    FilePath="C:/Users/Akash Levy/Documents/NEM-Relay-CAD/ansys/relay.scdoc",
    PlugInName="SpaceClaim[9432]")
modelComponent1 = system5.GetComponent(Name="Model")
modelComponent1.Refresh()
model1 = system5.GetContainer(ComponentName="Model")
model1.Edit()
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*FileMenu*Close Fluent")(cx-gui-do cx-activate-item "Question*OK")')
mesh1.Exit()
meshComponent1 = system1.GetComponent(Name="Mesh")
meshComponent1.Refresh()
mesh1.Edit()
mesh1.Exit()
meshComponent1.Update(AllDependencies=True)
mesh1.Edit()
Save(Overwrite=True)
mesh1.Exit()
meshComponent1.Update(AllDependencies=True)
setupComponent2 = system1.GetComponent(Name="Setup")
setupComponent2.Refresh()
fluentLauncherSettings1.SetEntityProperties(Properties=Set(EnvPath={}))
setup1.Edit()
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Information*OK")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*FileMenu*Recorded Mesh Operations...")')
setup1.SendCommand(Command="(cx-gui-do cx-activate-item \"Recorded Mesh Operations and Incoming Zones*PushButton6(Match Zone Names)\")(cx-gui-do cx-set-list-selections \"Match Zone Names*Frame1*List1(Missing Zones)\" '( 0))(cx-gui-do cx-activate-item \"Match Zone Names*Frame1*List1(Missing Zones)\")(cx-gui-do cx-set-list-selections \"Match Zone Names*Frame1*List2(New Zones)\" '( 0))(cx-gui-do cx-activate-item \"Match Zone Names*Frame1*List2(New Zones)\")(cx-gui-do cx-activate-item \"Match Zone Names*PanelButtons*PushButton1(OK)\")(cx-gui-do cx-activate-item \"Question*OK\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Recorded Mesh Operations and Incoming Zones*PanelButtons*PushButton1(Close)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Ribbon*Frame1*Frame2(Domain)*Table1*Table3(Mesh)*PushButton4(Check)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuCheck*Perform Mesh Check")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Wall"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Internal|interior-relay_enclosure (interior, id=1)"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Internal|interior-relay_enclosure (interior, id=1)"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Internal|interior-relay_enclosure (interior, id=1)"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Internal|interior-relay_enclosure (interior, id=1)"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Internal|interior-relay_enclosure (interior, id=1)"))(cx-gui-do cx-list-tree-right-click "NavigationPane*List_Tree1" )(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Internal|interior-relay_enclosure (interior, id=1)"))(cx-gui-do cx-activate-item "Interior*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Cell Zone Conditions|Fluid|enclosure_enclosure (fluid, id=2)"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Cell Zone Conditions|Fluid|enclosure_enclosure (fluid, id=2)"))(cx-gui-do cx-list-tree-right-click "NavigationPane*List_Tree1" )')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuTree-enclosure_enclosure (fluid, id=2)*Display")')
setup1.SendCommand(Command="(cx-use-window-id 1)(cx-set-camera-relative '(-0.000518749 0.00049582 -0.000303536) '(0 0 0) '(-0.454552 -0.469994 -0.715882) 0 0)(cx-gui-do cx-set-list-tree-selections \"NavigationPane*List_Tree1\" (list \"Setup|Boundary Conditions|Wall|inside_wall (wall, id=6)\"))(cx-gui-do cx-set-list-tree-selections \"NavigationPane*List_Tree1\" (list \"Setup|Boundary Conditions|Wall|inside_wall (wall, id=6)\"))(cx-gui-do cx-list-tree-right-click \"NavigationPane*List_Tree1\" )")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuTree-inside_wall (wall, id=6)*Display")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Wall|outside_wall (wall, id=5)"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Wall|outside_wall (wall, id=5)"))(cx-gui-do cx-list-tree-right-click "NavigationPane*List_Tree1" )')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuTree-outside_wall (wall, id=5)*Display")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Cell Zone Conditions|Fluid|enclosure_enclosure (fluid, id=2)"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Cell Zone Conditions|Fluid|enclosure_enclosure (fluid, id=2)"))(cx-gui-do cx-list-tree-right-click "NavigationPane*List_Tree1" )')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuTree-enclosure_enclosure (fluid, id=2)*Display")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Wall|inside_wall (wall, id=6)"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Dynamic Mesh"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Dynamic Mesh"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-tree-selections \"NavigationPane*List_Tree1\" (list \"Setup|Dynamic Mesh\"))(cx-gui-do cx-set-list-selections \"Dynamic Mesh*Table1*Table1*Table2*List4(Dynamic Mesh Zones)\" '( 0))(cx-gui-do cx-activate-item \"Dynamic Mesh*Table1*Table1*Table2*List4(Dynamic Mesh Zones)\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Dynamic Mesh*Table1*Table1*Table2*Table5*PushButton1(Create/Edit)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Dynamic Mesh Zones*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Internal"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|General"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|General"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|General"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|General"))(cx-gui-do cx-set-toggle-button2 "General*Table1*Table2(Solver)*ToggleBox5(Time)*Transient" #t)(cx-gui-do cx-activate-item "General*Table1*Table2(Solver)*ToggleBox5(Time)*Transient")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "General*Table1*ButtonBox1(Mesh)*PushButton3(Check)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "General*Table1*ButtonBox1(Mesh)*PushButton5(Report Quality)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "General*Table1*ButtonBox1(Mesh)*PushButton2(Display)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Mesh Display*Table1*Frame3*List1(Surfaces)\" '( 0 2))(cx-gui-do cx-activate-item \"Mesh Display*Table1*Frame3*List1(Surfaces)\")(cx-gui-do cx-set-list-selections \"Mesh Display*Table1*Frame3*List1(Surfaces)\" '( 2))(cx-gui-do cx-activate-item \"Mesh Display*Table1*Frame3*List1(Surfaces)\")(cx-gui-do cx-activate-item \"Mesh Display*PanelButtons*PushButton1(OK)\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Mesh Display*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Cell Registers"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Initialization"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Initialization"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Initialization"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Run Calculation"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Run Calculation"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Run Calculation"))(cx-gui-do cx-set-integer-entry "Run Calculation*Table1*Table7(Time Advancement)*Table3(Parameters)*Table1*Table1*IntegerEntry1(Number of Time Steps)" 1)(cx-gui-do cx-activate-item "Run Calculation*Table1*Table7(Time Advancement)*Table3(Parameters)*Table1*Table1*IntegerEntry1(Number of Time Steps)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-integer-entry "Run Calculation*Table1*Table7(Time Advancement)*Table3(Parameters)*Table1*Table1*IntegerEntry1(Number of Time Steps)" 2)(cx-gui-do cx-activate-item "Run Calculation*Table1*Table7(Time Advancement)*Table3(Parameters)*Table1*Table1*IntegerEntry1(Number of Time Steps)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-integer-entry "Run Calculation*Table1*Table7(Time Advancement)*Table3(Parameters)*Table1*Table1*IntegerEntry1(Number of Time Steps)" 3)(cx-gui-do cx-activate-item "Run Calculation*Table1*Table7(Time Advancement)*Table3(Parameters)*Table1*Table1*IntegerEntry1(Number of Time Steps)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-integer-entry "Run Calculation*Table1*Table7(Time Advancement)*Table3(Parameters)*Table1*Table1*IntegerEntry1(Number of Time Steps)" 4)(cx-gui-do cx-activate-item "Run Calculation*Table1*Table7(Time Advancement)*Table3(Parameters)*Table1*Table1*IntegerEntry1(Number of Time Steps)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-integer-entry "Run Calculation*Table1*Table7(Time Advancement)*Table3(Parameters)*Table1*Table1*IntegerEntry1(Number of Time Steps)" 5)(cx-gui-do cx-activate-item "Run Calculation*Table1*Table7(Time Advancement)*Table3(Parameters)*Table1*Table1*IntegerEntry1(Number of Time Steps)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-integer-entry "Run Calculation*Table1*Table7(Time Advancement)*Table3(Parameters)*Table5*Table1*Table1*IntegerEntry1(Max Iterations/Time Step)" 19)(cx-gui-do cx-activate-item "Run Calculation*Table1*Table7(Time Advancement)*Table3(Parameters)*Table5*Table1*Table1*IntegerEntry1(Max Iterations/Time Step)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-integer-entry "Run Calculation*Table1*Table7(Time Advancement)*Table3(Parameters)*Table5*Table1*Table1*IntegerEntry1(Max Iterations/Time Step)" 18)(cx-gui-do cx-activate-item "Run Calculation*Table1*Table7(Time Advancement)*Table3(Parameters)*Table5*Table1*Table1*IntegerEntry1(Max Iterations/Time Step)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-integer-entry "Run Calculation*Table1*Table7(Time Advancement)*Table3(Parameters)*Table5*Table1*Table1*IntegerEntry1(Max Iterations/Time Step)" 17)(cx-gui-do cx-activate-item "Run Calculation*Table1*Table7(Time Advancement)*Table3(Parameters)*Table5*Table1*Table1*IntegerEntry1(Max Iterations/Time Step)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-integer-entry "Run Calculation*Table1*Table7(Time Advancement)*Table3(Parameters)*Table5*Table1*Table1*IntegerEntry1(Max Iterations/Time Step)" 16)(cx-gui-do cx-activate-item "Run Calculation*Table1*Table7(Time Advancement)*Table3(Parameters)*Table5*Table1*Table1*IntegerEntry1(Max Iterations/Time Step)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-integer-entry "Run Calculation*Table1*Table7(Time Advancement)*Table3(Parameters)*Table5*Table1*Table1*IntegerEntry1(Max Iterations/Time Step)" 15)(cx-gui-do cx-activate-item "Run Calculation*Table1*Table7(Time Advancement)*Table3(Parameters)*Table5*Table1*Table1*IntegerEntry1(Max Iterations/Time Step)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-integer-entry "Run Calculation*Table1*Table7(Time Advancement)*Table3(Parameters)*Table5*Table1*Table1*IntegerEntry1(Max Iterations/Time Step)" 14)(cx-gui-do cx-activate-item "Run Calculation*Table1*Table7(Time Advancement)*Table3(Parameters)*Table5*Table1*Table1*IntegerEntry1(Max Iterations/Time Step)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-integer-entry "Run Calculation*Table1*Table7(Time Advancement)*Table3(Parameters)*Table5*Table1*Table1*IntegerEntry1(Max Iterations/Time Step)" 13)(cx-gui-do cx-activate-item "Run Calculation*Table1*Table7(Time Advancement)*Table3(Parameters)*Table5*Table1*Table1*IntegerEntry1(Max Iterations/Time Step)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-integer-entry "Run Calculation*Table1*Table7(Time Advancement)*Table3(Parameters)*Table5*Table1*Table1*IntegerEntry1(Max Iterations/Time Step)" 12)(cx-gui-do cx-activate-item "Run Calculation*Table1*Table7(Time Advancement)*Table3(Parameters)*Table5*Table1*Table1*IntegerEntry1(Max Iterations/Time Step)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-integer-entry "Run Calculation*Table1*Table7(Time Advancement)*Table3(Parameters)*Table5*Table1*Table1*IntegerEntry1(Max Iterations/Time Step)" 11)(cx-gui-do cx-activate-item "Run Calculation*Table1*Table7(Time Advancement)*Table3(Parameters)*Table5*Table1*Table1*IntegerEntry1(Max Iterations/Time Step)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-integer-entry "Run Calculation*Table1*Table7(Time Advancement)*Table3(Parameters)*Table5*Table1*Table1*IntegerEntry1(Max Iterations/Time Step)" 10)(cx-gui-do cx-activate-item "Run Calculation*Table1*Table7(Time Advancement)*Table3(Parameters)*Table5*Table1*Table1*IntegerEntry1(Max Iterations/Time Step)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-integer-entry "Run Calculation*Table1*Table7(Time Advancement)*Table3(Parameters)*Table5*Table1*Table1*IntegerEntry1(Max Iterations/Time Step)" 9)(cx-gui-do cx-activate-item "Run Calculation*Table1*Table7(Time Advancement)*Table3(Parameters)*Table5*Table1*Table1*IntegerEntry1(Max Iterations/Time Step)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-integer-entry "Run Calculation*Table1*Table7(Time Advancement)*Table3(Parameters)*Table5*Table1*Table1*IntegerEntry1(Max Iterations/Time Step)" 8)(cx-gui-do cx-activate-item "Run Calculation*Table1*Table7(Time Advancement)*Table3(Parameters)*Table5*Table1*Table1*IntegerEntry1(Max Iterations/Time Step)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-integer-entry "Run Calculation*Table1*Table7(Time Advancement)*Table3(Parameters)*Table5*Table1*Table1*IntegerEntry1(Max Iterations/Time Step)" 6)(cx-gui-do cx-activate-item "Run Calculation*Table1*Table7(Time Advancement)*Table3(Parameters)*Table5*Table1*Table1*IntegerEntry1(Max Iterations/Time Step)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-integer-entry "Run Calculation*Table1*Table7(Time Advancement)*Table3(Parameters)*Table5*Table1*Table1*IntegerEntry1(Max Iterations/Time Step)" 5)(cx-gui-do cx-activate-item "Run Calculation*Table1*Table7(Time Advancement)*Table3(Parameters)*Table5*Table1*Table1*IntegerEntry1(Max Iterations/Time Step)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Run Calculation*Table1*Table1*Table3*PushButton2(Preview Mesh Motion)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Mesh Motion*PanelButtons*PushButton1(Apply)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Mesh Motion*PanelButtons*PushButton1(Apply)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Mesh Motion*PanelButtons*PushButton1(Apply)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-toggle-button2 "Mesh Motion*Table1*Table3(Options)*ToggleBox1*CheckButton1(Display Mesh)" #f)(cx-gui-do cx-activate-item "Mesh Motion*Table1*Table3(Options)*ToggleBox1*CheckButton1(Display Mesh)")(cx-gui-do cx-activate-item "Mesh Motion*PanelButtons*PushButton1(Apply)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-toggle-button2 "Mesh Motion*Table1*Table3(Options)*ToggleBox1*CheckButton1(Display Mesh)" #t)(cx-gui-do cx-activate-item "Mesh Motion*Table1*Table3(Options)*ToggleBox1*CheckButton1(Display Mesh)")(cx-gui-do cx-activate-item "Mesh Motion*PanelButtons*PushButton1(Apply)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Mesh Motion*PanelButtons*PushButton2(Close)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Calculation Activities|Autosave (Every Time Steps)"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Calculation Activities|Autosave (Every Time Steps)"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Calculation Activities|Autosave (Every Time Steps)"))(cx-gui-do cx-activate-item "Autosave*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Initialization"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Initialization"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Initialization"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Run Calculation"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Run Calculation"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Run Calculation"))')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Run Calculation*Table1*Table1*Table1*PushButton1(Check Case)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Case Check*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Ribbon*Frame1*Frame2(Domain)*Table1*Table3(Mesh)*PushButton4(Check)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuCheck*Perform Mesh Check")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Run Calculation*Table1*Table1*Table1*PushButton1(Check Case)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Case Check*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Report Definitions|minimum-pressure"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Report Definitions|maximum-pressure"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Report Definitions|maximum-pressure"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Report Definitions|maximum-pressure"))(cx-gui-do cx-activate-item "Surface Report Definition*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Controls"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Controls"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Controls"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Methods"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Methods"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-tree-selections \"NavigationPane*List_Tree1\" (list \"Solution|Methods\"))(cx-gui-do cx-set-list-selections \"Solution Methods*Table1*Table4*DropDownList1(Transient Formulation)\" '( 1))")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Solution Methods*Table1*Table4*DropDownList1(Transient Formulation)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Initialization"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Initialization"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Initialization"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Run Calculation"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Run Calculation"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Run Calculation"))')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Run Calculation*Table1*Table1*Table3*PushButton2(Preview Mesh Motion)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Mesh Motion*PanelButtons*PushButton1(Apply)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Mesh Motion*PanelButtons*PushButton1(Apply)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Mesh Motion*PanelButtons*PushButton2(Close)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Run Calculation*Table1*Table1*Table1*PushButton1(Check Case)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Case Check*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Initialization"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Initialization"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Initialization"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Methods"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Methods"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-tree-selections \"NavigationPane*List_Tree1\" (list \"Solution|Methods\"))(cx-gui-do cx-set-list-selections \"Solution Methods*Table1*Table4*DropDownList1(Transient Formulation)\" '( 0))")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Solution Methods*Table1*Table4*DropDownList1(Transient Formulation)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Controls"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Controls"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Controls"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Methods"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Methods"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Methods"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Dynamic Mesh"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Dynamic Mesh"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Dynamic Mesh"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|General"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|General"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|General"))')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*FileMenu*Close Fluent")')
setupComponent1.Refresh()
solutionComponent1.Refresh()
solutionComponent1.Clean()
ClearMessages()
solutionComponent3.Refresh()
solution2.Edit()
solutionComponent3.Refresh()
solutionComponent1.Update(AllDependencies=True)
results1.Edit()
results1.SendCommand(Command="> autolegend plot=/DATA READER/CASE:Case FFF 1/BOUNDARY:inside_wall, view=VIEW:View 1")
results1.SendCommand(Command="""CALCULATOR:
  Function = area
  Location = 
  Case Name = Case FFF 1
END""")
results1.SendCommand(Command="""INTERNAL TABLE:Boundary Physics Table FFF 1
  TABLE CELLS:
    C1 = 
    C2 = 
    A3 = 
    A4 = 
    C4 = 
    A5 = 
  END
END""")
results1.SendCommand(Command="""INTERNAL TABLE:Domain Physics Table FFF 1
  TABLE CELLS:
    B1 = 
  END
END""")
results1.SendCommand(Command="> autolegend plot=/WIREFRAME:Wireframe, view=VIEW:View 1")
results1.SendCommand(Command="> autolegend plot=/DEFAULT LEGEND:Default Legend View 1, view=VIEW:View 1")
results1.Exit()
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Run Calculation*Table1*Table1*Table3*PushButton2(Preview Mesh Motion)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Mesh Motion*PanelButtons*PushButton1(Apply)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Error*OK")(cx-gui-do cx-activate-item "Mesh Motion*PanelButtons*PushButton2(Close)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Dynamic Mesh"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Dynamic Mesh"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Dynamic Mesh"))(cx-gui-do cx-set-toggle-button2 "Dynamic Mesh*Table1*Table1*Table2*Table3*Table1(Mesh Methods)*CheckButton3(Remeshing)" #t)(cx-gui-do cx-activate-item "Dynamic Mesh*Table1*Table1*Table2*Table3*Table1(Mesh Methods)*CheckButton3(Remeshing)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Dynamic Mesh*Table1*Table1*Table2*Table3*Table1(Mesh Methods)*PushButton5(Settings)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Mesh Method Settings*PanelButtons*PushButton2(Cancel)")')
AnalysisSettings1.StepSize = "1E-09 [s]"
AnalysisSettings1.EndTime = "5E-09 [s]"
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Run Calculation"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Run Calculation"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-tree-selections \"NavigationPane*List_Tree1\" (list \"Solution|Run Calculation\"))(cx-gui-do cx-set-expression-entry \"Run Calculation*Table1*Table7(Time Advancement)*Table3(Parameters)*Table1*Table3*ExpressionEntry1(Time Step Size)\" '(\"1e-9\" . 0))(cx-gui-do cx-activate-item \"Run Calculation*Table1*Table7(Time Advancement)*Table3(Parameters)*Table1*Table3*ExpressionEntry1(Time Step Size)\")")
solutionComponent1.Update(AllDependencies=True)
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Initialization"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Initialization"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Initialization"))')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Solution Initialization*Table1*Frame8*PushButton1(Initialize)")')
ClearMessages()
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Run Calculation"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Run Calculation"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Run Calculation"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Run Calculation"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Run Calculation"))')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Run Calculation*Table1*Table1*Table3*PushButton2(Preview Mesh Motion)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Mesh Motion*PanelButtons*PushButton1(Apply)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Error*OK")(cx-gui-do cx-activate-item "Mesh Motion*PanelButtons*PushButton2(Close)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Dynamic Mesh"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Dynamic Mesh"))(cx-gui-do cx-list-tree-right-click "NavigationPane*List_Tree1" )(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Dynamic Mesh"))')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Ribbon*Frame1*Frame2(Domain)*Table1*Table3(Mesh)*PushButton4(Check)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuCheck*Perform Mesh Check")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Ribbon*Frame1*Frame2(Domain)*Table1*Table3(Mesh)*PushButton4(Check)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuCheck*Repair Mesh...")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Ribbon*Frame1*Frame2(Domain)*Table1*Table3(Mesh)*PushButton4(Check)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuCheck*Perform Mesh Check")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Dynamic Mesh"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Mesh Interfaces"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Mesh Interfaces"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Mesh Interfaces"))(cx-gui-do cx-activate-item "Mesh Interfaces*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-use-window-id 1)(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Wall|inside_wall (wall, id=6)"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Wall|inside_wall (wall, id=6)"))(cx-gui-do cx-list-tree-right-click "NavigationPane*List_Tree1" )')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuTree-inside_wall (wall, id=6)*Display")')
setup1.SendCommand(Command="(cx-use-window-id 1)(cx-set-camera-relative '(-6.56528e-06 -8.39754e-06 -1.33192e-06) '(0 0 0) '(-0.891577 -0.549823 -0.0493736) 0 0)(cx-use-window-id 1)(cx-set-camera-relative '(-2.36412e-05 3.93067e-05 -4.49458e-05) '(0 0 0) '(0.96494 -0.473912 -0.947654) 0 0)(cx-use-window-id 1)(cx-set-camera-relative '(1.11983e-05 -2.84973e-05 4.18099e-05) '(0 0 0) '(-0.196119 1.00875 0.87582) 0 0)(cx-use-window-id 1)(cx-set-camera-relative '(1.1755e-05 -7.90771e-07 3.82556e-06) '(0 0 0) '(-0.293487 -0.0818386 0.0161577) 0 0)")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Ribbon*Frame1*Frame2(Domain)*Table1*Table3(Zones)*PushButton8(Replace Mesh)")(cx-gui-do cx-activate-item "Question*Cancel")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Ribbon*Frame1*Frame2(Domain)*Table1*Table3(Interfaces)*PushButton1(Mesh)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Mesh Interfaces*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command="(cx-gui-do cx-activate-item \"Ribbon*Frame1*Frame2(Domain)*Table1*Table3(Zones)*PushButton8(Replace Mesh)\")(cx-gui-do cx-activate-item \"Question*OK\")(cx-gui-do cx-set-file-dialog-entries \"Select File\" '( \"FFF-1.2-Setup-Output.cas.gz\") \"Mesh Files (*.msh *.gz )\")")
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Wall|inside_wall (wall, id=6)"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Wall|inside_wall (wall, id=6)"))(cx-gui-do cx-list-tree-right-click "NavigationPane*List_Tree1" )(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Wall|outside_wall (wall, id=5)"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Wall|inside_wall (wall, id=6)"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Wall|inside_wall (wall, id=6)"))(cx-gui-do cx-list-tree-right-click "NavigationPane*List_Tree1" )')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuTree-inside_wall (wall, id=6)*Display")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Wall|outside_wall (wall, id=5)"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Wall|outside_wall (wall, id=5)"))(cx-gui-do cx-list-tree-right-click "NavigationPane*List_Tree1" )')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuTree-outside_wall (wall, id=5)*Display")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Wall|inside_wall (wall, id=6)"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Wall|inside_wall (wall, id=6)"))(cx-gui-do cx-list-tree-right-click "NavigationPane*List_Tree1" )')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuTree-inside_wall (wall, id=6)*Display")')
solutionComponent1.Clean()
solutionComponent1.Update(AllDependencies=True)
solutionComponent3.Refresh()
solution2.Edit()
solutionComponent3.Refresh()
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Wall|outside_wall (wall, id=5)"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Wall|inside_wall (wall, id=6)"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Wall|inside_wall (wall, id=6)"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Wall|inside_wall (wall, id=6)"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Wall|inside_wall (wall, id=6)"))(cx-gui-do cx-activate-item "Wall*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Wall|inside_wall (wall, id=6)"))(cx-gui-do cx-list-tree-right-click "NavigationPane*List_Tree1" )')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuTree-inside_wall (wall, id=6)*Display")')
ClearMessages()
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Wall"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Dynamic Mesh"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Dynamic Mesh"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Dynamic Mesh"))(cx-gui-do cx-set-toggle-button2 "Dynamic Mesh*Table1*Table1*Table2*Table3*Table1(Mesh Methods)*CheckButton1(Smoothing)" #f)(cx-gui-do cx-activate-item "Dynamic Mesh*Table1*Table1*Table2*Table3*Table1(Mesh Methods)*CheckButton1(Smoothing)")(cx-gui-do cx-set-toggle-button2 "Dynamic Mesh*Table1*Table1*Table2*Table3*Table1(Mesh Methods)*CheckButton3(Remeshing)" #t)(cx-gui-do cx-activate-item "Dynamic Mesh*Table1*Table1*Table2*Table3*Table1(Mesh Methods)*CheckButton3(Remeshing)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Dynamic Mesh*Table1*Table1*Table2*Table3*Table1(Mesh Methods)*PushButton5(Settings)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-integer-entry "Mesh Method Settings*Frame1*Frame3(Remeshing)*Table1*Table3(Parameters)*IntegerEntry5(Size Remeshing Interval)" 4)(cx-gui-do cx-activate-item "Mesh Method Settings*Frame1*Frame3(Remeshing)*Table1*Table3(Parameters)*IntegerEntry5(Size Remeshing Interval)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-integer-entry "Mesh Method Settings*Frame1*Frame3(Remeshing)*Table1*Table3(Parameters)*IntegerEntry5(Size Remeshing Interval)" 3)(cx-gui-do cx-activate-item "Mesh Method Settings*Frame1*Frame3(Remeshing)*Table1*Table3(Parameters)*IntegerEntry5(Size Remeshing Interval)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-integer-entry "Mesh Method Settings*Frame1*Frame3(Remeshing)*Table1*Table3(Parameters)*IntegerEntry5(Size Remeshing Interval)" 2)(cx-gui-do cx-activate-item "Mesh Method Settings*Frame1*Frame3(Remeshing)*Table1*Table3(Parameters)*IntegerEntry5(Size Remeshing Interval)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-integer-entry "Mesh Method Settings*Frame1*Frame3(Remeshing)*Table1*Table3(Parameters)*IntegerEntry5(Size Remeshing Interval)" 1)(cx-gui-do cx-activate-item "Mesh Method Settings*Frame1*Frame3(Remeshing)*Table1*Table3(Parameters)*IntegerEntry5(Size Remeshing Interval)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-toggle-button2 "Mesh Method Settings*Frame1*Frame3(Remeshing)*Table1*Table1*ToggleBox1(Remeshing Methods)*CheckButton1(Local Cell)" #t)(cx-gui-do cx-activate-item "Mesh Method Settings*Frame1*Frame3(Remeshing)*Table1*Table1*ToggleBox1(Remeshing Methods)*CheckButton1(Local Cell)")(cx-gui-do cx-set-toggle-button2 "Mesh Method Settings*Frame1*Frame3(Remeshing)*Table1*Table1*ToggleBox1(Remeshing Methods)*CheckButton1(Local Cell)" #f)(cx-gui-do cx-activate-item "Mesh Method Settings*Frame1*Frame3(Remeshing)*Table1*Table1*ToggleBox1(Remeshing Methods)*CheckButton1(Local Cell)")(cx-gui-do cx-activate-item "Mesh Method Settings*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-toggle-button2 "Dynamic Mesh*Table1*Table1*Table2*Table3*Table1(Mesh Methods)*CheckButton1(Smoothing)" #f)(cx-gui-do cx-activate-item "Dynamic Mesh*Table1*Table1*Table2*Table3*Table1(Mesh Methods)*CheckButton1(Smoothing)")(cx-gui-do cx-set-toggle-button2 "Dynamic Mesh*Table1*Table1*Table2*Table3*Table1(Mesh Methods)*CheckButton1(Smoothing)" #t)(cx-gui-do cx-activate-item "Dynamic Mesh*Table1*Table1*Table2*Table3*Table1(Mesh Methods)*CheckButton1(Smoothing)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Dynamic Mesh*Table1*Table1*Table2*Table3*Table1(Mesh Methods)*PushButton5(Settings)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Mesh Method Settings*Frame1*Frame3(Remeshing)*Table1*Table3(Parameters)*Frame6*PushButton2(Mesh Scale Info)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Mesh Scale Info*PanelButtons*PushButton1(Close)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Mesh Method Settings*Frame1*Frame3(Remeshing)*Table1*Table3(Parameters)*Frame6*PushButton2(Mesh Scale Info)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Mesh Scale Info*PanelButtons*PushButton1(Close)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Mesh Method Settings*Frame1*Frame1(Smoothing)*Table1*Frame2*PushButton1(Advanced)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Mesh Smoothing Parameters*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Mesh Method Settings*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Ribbon*Frame1*Frame2(Domain)*Table1*Table3(Mesh)*PushButton4(Check)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuCheck*Perform Mesh Check")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "ToolBar*Pointer Tools*rotate")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Dynamic Mesh*Table1*Table1*Table2*Table7*PushButton1(Display Zone Motion)")(cx-gui-do cx-activate-item "Warning*OK")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Dynamic Mesh*Table1*Table1*Table2*Table7*PushButton2(Preview Mesh Motion)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Mesh Motion*PanelButtons*PushButton1(Apply)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Error*OK")(cx-gui-do cx-activate-item "Mesh Motion*PanelButtons*PushButton2(Close)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Wall|inside_wall (wall, id=6)"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Wall|inside_wall (wall, id=6)"))(cx-gui-do cx-list-tree-right-click "NavigationPane*List_Tree1" )')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuTree-inside_wall (wall, id=6)*Import From File...")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Wall|inside_wall (wall, id=6)"))(cx-gui-do cx-list-tree-right-click "NavigationPane*List_Tree1" )')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuTree-inside_wall (wall, id=6)*Edit...")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Wall*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Wall|inside_wall (wall, id=6)"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Wall|inside_wall (wall, id=6)"))(cx-gui-do cx-list-tree-right-click "NavigationPane*List_Tree1" )')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuTree-inside_wall (wall, id=6)*Display")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "ToolBar*Pointer Tools*rotate")')
setup1.SendCommand(Command="(cx-use-window-id 1)(cx-set-camera-relative '(-1.45782e-05 -2.25449e-05 2.03049e-05) '(0 0 0) '(0.0470676 0.179429 0.405599) 0 0)(cx-gui-do cx-set-list-tree-selections \"NavigationPane*List_Tree1\" (list \"Setup|Boundary Conditions|Wall|outside_wall (wall, id=5)\"))(cx-gui-do cx-set-list-tree-selections \"NavigationPane*List_Tree1\" (list \"Setup|Boundary Conditions|Wall\"))(cx-gui-do cx-set-list-tree-selections \"NavigationPane*List_Tree1\" (list \"Setup|Boundary Conditions|Wall|inside_wall (wall, id=6)\"))")
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Wall|inside_wall (wall, id=6)"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Wall|inside_wall (wall, id=6)"))(cx-gui-do cx-activate-item "Wall*PanelButtons*PushButton2(Cancel)")')
meshComponent1.UpdateUpstreamComponents()
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Wall|inside_wall (wall, id=6)"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Wall|inside_wall (wall, id=6)"))(cx-gui-do cx-list-tree-right-click "NavigationPane*List_Tree1" )(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Wall|outside_wall (wall, id=5)"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Wall|inside_wall (wall, id=6)"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Wall|inside_wall (wall, id=6)"))(cx-gui-do cx-list-tree-right-click "NavigationPane*List_Tree1" )')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuTree-inside_wall (wall, id=6)*Import From File...")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Dynamic Mesh*Table1*Table1*Table2*Table7*PushButton1(Display Zone Motion)")(cx-gui-do cx-activate-item "Warning*OK")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Run Calculation"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Run Calculation"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Run Calculation"))')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Run Calculation*Table1*Table1*Table3*PushButton2(Preview Mesh Motion)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Mesh Motion*PanelButtons*PushButton1(Apply)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Error*OK")(cx-gui-do cx-activate-item "Mesh Motion*PanelButtons*PushButton2(Close)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Ribbon*Frame1*Frame2(Domain)*Table1*Table3(Mesh)*PushButton4(Check)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuCheck*Repair Mesh...")')
setup1.SendCommand(Command="(cx-use-window-id 1)(cx-set-camera-relative '(2.66025e-05 5.58251e-06 -1.84036e-05) '(0 0 0) '(0.0934943 0.046237 0.0671207) 0 0)(cx-use-window-id 1)(cx-set-camera-relative '(-2.15114e-05 2.78341e-05 -2.59878e-05) '(0 0 0) '(-0.199945 -0.721834 0.828913) 0 0)(cx-use-window-id 1)(cx-set-camera-relative '(-1.49508e-05 -7.22936e-06 2.87738e-05) '(0 0 0) '(-0.0764105 -0.713098 -0.215437) 0 0)(cx-use-window-id 1)(cx-set-camera-relative '(0.000975511 -0.000386758 -0.000531847) '(0 0 0) '(0.397126 0.870336 0.312434) 0 0)(cx-use-window-id 1)(cx-set-camera-relative '(8.0962e-05 -0.000457804 3.507e-05) '(0 0 0) '(0.167868 0.125291 -0.0317146) 0 0)(cx-use-window-id 1)(cxg-clear-all-selections (cx-active-window))(cxg-add-surfaces-to-selection '(inside_wall) (cx-active-window))(cx-use-window-id 1)(cx-set-camera-relative '(5.31634e-06 -1.49389e-05 -0.000107157) '(0 0 0) '(0.100594 -0.00390208 0.00458044) 0 0)(cx-use-window-id 1)(cxg-clear-all-selections (cx-active-window))(cxg-add-surfaces-to-selection '(inside_wall) (cx-active-window))")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "ToolBar*Pointer Tools*rotate")')
setup1.SendCommand(Command="(cx-use-window-id 1)(cx-set-camera-relative '(-1.52533e-05 -8.48385e-05 0.000102652) '(0 0 0) '(-0.0419947 0.029051 -0.0165282) 0 0)")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Ribbon*Frame1*Frame2(Domain)*Table1*Table3(Interfaces)*PushButton1(Mesh)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Mesh Interfaces*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Wall|inside_wall (wall, id=6)"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Wall|inside_wall (wall, id=6)"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Wall|inside_wall (wall, id=6)"))(cx-gui-do cx-activate-item "Wall*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command="(cx-use-window-id 1)(cx-set-camera-relative '(-0.000123303 0.000329557 0.00037353) '(0 0 0) '(-0.479138 0.0286354 -0.177332) 0 0)(cx-gui-do cx-set-list-tree-selections \"NavigationPane*List_Tree1\" (list \"Setup|Mesh Interfaces\"))")
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Mesh Interfaces"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Mesh Interfaces"))(cx-gui-do cx-activate-item "Mesh Interfaces*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Wall|inside_wall (wall, id=6)"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Wall|inside_wall (wall, id=6)""Setup|Boundary Conditions|Wall|outside_wall (wall, id=5)"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Wall|inside_wall (wall, id=6)""Setup|Boundary Conditions|Wall|outside_wall (wall, id=5)"))(cx-gui-do cx-list-tree-right-click "NavigationPane*List_Tree1" )')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuPopupMenu*Export To File...")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Wall|inside_wall (wall, id=6)"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Wall|outside_wall (wall, id=5)"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Wall|outside_wall (wall, id=5)"))(cx-gui-do cx-list-tree-right-click "NavigationPane*List_Tree1" )')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuTree-outside_wall (wall, id=5)*Export To File...")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Dynamic Mesh"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Dynamic Mesh"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-tree-selections \"NavigationPane*List_Tree1\" (list \"Setup|Dynamic Mesh\"))(cx-gui-do cx-set-list-selections \"Dynamic Mesh*Table1*Table1*Table2*List4(Dynamic Mesh Zones)\" '( 0))(cx-gui-do cx-activate-item \"Dynamic Mesh*Table1*Table1*Table2*List4(Dynamic Mesh Zones)\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Dynamic Mesh*Table1*Table1*Table2*Table5*PushButton1(Create/Edit)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Dynamic Mesh Zones*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Ribbon*Frame1*Frame2(Domain)*Table1*Table3(Interfaces)*PushButton1(Mesh)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Mesh Interfaces*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "ToolBar*Workbench Tools*fl_setup")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuSetupCell*Reload")(cx-gui-do cx-activate-item "Question*OK")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Wall|inside_wall (wall, id=6)"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Wall|inside_wall (wall, id=6)"))(cx-gui-do cx-list-tree-right-click "NavigationPane*List_Tree1" )')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuTree-inside_wall (wall, id=6)*Display")')
setup1.SendCommand(Command="(cx-use-window-id 1)(cx-set-camera-relative '(0.000165007 3.90088e-05 -0.000467176) '(0 0 0) '(-0.110029 -0.139088 -0.0524685) 0 0)(cx-use-window-id 1)(cx-set-camera-relative '(-1.30286e-05 -0.000110526 0.000380637) '(0 0 0) '(0.17933 0.1912 0.0645255) 0 0)(cx-gui-do cx-set-list-tree-selections \"NavigationPane*List_Tree1\" (list \"Setup|Boundary Conditions|Wall|inside_wall (wall, id=6)\"))(cx-gui-do cx-list-tree-right-click \"NavigationPane*List_Tree1\" )")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuTree-inside_wall (wall, id=6)*Export To File...")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Wall|inside_wall (wall, id=6)""Setup|Boundary Conditions|Wall|outside_wall (wall, id=5)"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Wall|inside_wall (wall, id=6)""Setup|Boundary Conditions|Wall|outside_wall (wall, id=5)"))(cx-gui-do cx-list-tree-right-click "NavigationPane*List_Tree1" )')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuPopupMenu*Export To File...")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Wall"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Wall|inside_wall (wall, id=6)"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Wall|inside_wall (wall, id=6)"))(cx-gui-do cx-list-tree-right-click "NavigationPane*List_Tree1" )')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuTree-inside_wall (wall, id=6)*Export To File...")')
AnalysisSettings1.EndTime = "5E-10 [s]"
AnalysisSettings1.StepSize = "1E-10 [s]"
AnalysisSettings1.EndTime = "5E-09 [s]"
AnalysisSettings1.StepSize = "1E-09 [s]"
solutionComponent1.Update(AllDependencies=True)
model1.Exit()
Save(Overwrite=True)
